/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.orderdetailsearch.v1;

import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "OrderBookSeat", propOrder = {
    "passengerName",
    "seatNumber",
    "flightNo"
})
@SuppressWarnings("all")
public class OrderBookSeat  {

    private static final long serialVersionUID = 1L;

    public OrderBookSeat(
        String passengerName, 
        String seatNumber, 
        String flightNo) {
        this.passengerName = passengerName;
        this.seatNumber = seatNumber;
        this.flightNo = flightNo;
    }

    public OrderBookSeat() {
    }

    @FieldDoc("乘客姓名")
    @JsonProperty("PassengerName")
    @XmlElement(name = "PassengerName")
    private String passengerName;

    @FieldDoc("座位号")
    @JsonProperty("SeatNumber")
    @XmlElement(name = "SeatNumber")
    private String seatNumber;

    @FieldDoc("航班号")
    @JsonProperty("FlightNo")
    @XmlElement(name = "FlightNo")
    private String flightNo;

    /**
     * 乘客姓名
     */
    public String getPassengerName() {
        return this.passengerName;
    }

    public void setPassengerName(String passengerName) {
        this.passengerName = passengerName;
    }

    /**
     * 座位号
     */
    public String getSeatNumber() {
        return this.seatNumber;
    }

    public void setSeatNumber(String seatNumber) {
        this.seatNumber = seatNumber;
    }

    /**
     * 航班号
     */
    public String getFlightNo() {
        return this.flightNo;
    }

    public void setFlightNo(String flightNo) {
        this.flightNo = flightNo;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final OrderBookSeat other = (OrderBookSeat)obj;
        return
            Objects.equal(this.passengerName, other.passengerName) && 
            Objects.equal(this.seatNumber, other.seatNumber) && 
            Objects.equal(this.flightNo, other.flightNo);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.passengerName);
        result = 31 * result + Objects.hashCode(this.seatNumber);
        result = 31 * result + Objects.hashCode(this.flightNo);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("passengerName", passengerName)
            .add("seatNumber", seatNumber)
            .add("flightNo", flightNo)
            .toString();
    }
}