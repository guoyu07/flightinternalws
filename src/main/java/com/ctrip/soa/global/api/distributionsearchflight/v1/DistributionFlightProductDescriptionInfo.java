/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.distributionsearchflight.v1;

import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.math.BigDecimal;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 产品描述信息
 */
@DtoDoc("产品描述信息")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DistributionFlightProductDescriptionInfo", propOrder = {
    "flightPackageTagIcon",
    "flightPackageTag",
    "flightPagkageType",
    "isBundle",
    "bundledAmount",
    "bundledAmountCurCurrency",
    "subsidy",
    "subsidyCurCurrency",
    "discountPrice",
    "discountPriceCurCurrency",
    "productName",
    "porductDescription",
    "classDescription",
    "productExchangeInfo",
    "productExchangeInfos"
})
@SuppressWarnings("all")
public class DistributionFlightProductDescriptionInfo  {

    private static final long serialVersionUID = 1L;

    public DistributionFlightProductDescriptionInfo(
        String flightPackageTagIcon, 
        String flightPackageTag, 
        DistributionFlightPackageType flightPagkageType, 
        boolean isBundle, 
        BigDecimal bundledAmount, 
        BigDecimal bundledAmountCurCurrency, 
        BigDecimal subsidy, 
        BigDecimal subsidyCurCurrency, 
        BigDecimal discountPrice, 
        BigDecimal discountPriceCurCurrency, 
        String productName, 
        String porductDescription, 
        String classDescription, 
        DistributionProductExchangeInfo productExchangeInfo, 
        List<DistributionProductExchangeInfo> productExchangeInfos) {
        this.flightPackageTagIcon = flightPackageTagIcon;
        this.flightPackageTag = flightPackageTag;
        this.flightPagkageType = flightPagkageType;
        this.isBundle = isBundle;
        this.bundledAmount = bundledAmount;
        this.bundledAmountCurCurrency = bundledAmountCurCurrency;
        this.subsidy = subsidy;
        this.subsidyCurCurrency = subsidyCurCurrency;
        this.discountPrice = discountPrice;
        this.discountPriceCurCurrency = discountPriceCurCurrency;
        this.productName = productName;
        this.porductDescription = porductDescription;
        this.classDescription = classDescription;
        this.productExchangeInfo = productExchangeInfo;
        this.productExchangeInfos = productExchangeInfos;
    }

    public DistributionFlightProductDescriptionInfo() {
    }

    @FieldDoc("打包产品标签图标（推荐航班：Recommended，晚出票：LateIssued）")
    @JsonProperty("FlightPackageTagIcon")
    @XmlElement(name = "FlightPackageTagIcon")
    private String flightPackageTagIcon;

    @FieldDoc("打包产品标签")
    @JsonProperty("FlightPackageTag")
    @XmlElement(name = "FlightPackageTag")
    private String flightPackageTag;

    @FieldDoc("国内打包产品类型")
    @JsonProperty("FlightPagkageType")
    @XmlElement(name = "FlightPagkageType")
    private DistributionFlightPackageType flightPagkageType;

    @FieldDoc("是否捆绑销售")
    @JsonProperty("IsBundle")
    @XmlElement(name = "IsBundle")
    private boolean isBundle;

    @FieldDoc("捆绑金额")
    @JsonProperty("BundledAmount")
    @XmlElement(name = "BundledAmount")
    private BigDecimal bundledAmount;

    @FieldDoc("捆绑金额当前币种")
    @JsonProperty("BundledAmountCurCurrency")
    @XmlElement(name = "BundledAmountCurCurrency")
    private BigDecimal bundledAmountCurCurrency;

    @FieldDoc("飞享金")
    @JsonProperty("Subsidy")
    @XmlElement(name = "Subsidy")
    private BigDecimal subsidy;

    @FieldDoc("飞享金当前币种")
    @JsonProperty("SubsidyCurCurrency")
    @XmlElement(name = "SubsidyCurCurrency")
    private BigDecimal subsidyCurCurrency;

    @FieldDoc("国航特惠减免金额（不要在页面金额上计算）")
    @JsonProperty("DiscountPrice")
    @XmlElement(name = "DiscountPrice")
    private BigDecimal discountPrice;

    @FieldDoc("国航特惠减免金额当前币种（不要在页面金额上计算）")
    @JsonProperty("DiscountPriceCurCurrency")
    @XmlElement(name = "DiscountPriceCurCurrency")
    private BigDecimal discountPriceCurCurrency;

    @FieldDoc("打包产品名称")
    @JsonProperty("ProductName")
    @XmlElement(name = "ProductName")
    private String productName;

    @FieldDoc("打包产品描述")
    @JsonProperty("PorductDescription")
    @XmlElement(name = "PorductDescription")
    private String porductDescription;

    @FieldDoc("舱位描述")
    @JsonProperty("ClassDescription")
    @XmlElement(name = "ClassDescription")
    private String classDescription;

    @FieldDoc("产品描述对应的语言货币信息,SubsidyCurCurrency是通过head.currency获取的,此处是通过head.Language获取的")
    @JsonProperty("ProductExchangeInfo")
    @XmlElement(name = "ProductExchangeInfo")
    private DistributionProductExchangeInfo productExchangeInfo;

    @FieldDoc("产品描述对应的语言货币信息,SubsidyCurCurrency是通过head.currency获取的,此处是通过head.Language获取的 一个语言对应多个币种")
    @JsonProperty("ProductExchangeInfos")
    @XmlElement(name = "ProductExchangeInfos")
    private List<DistributionProductExchangeInfo> productExchangeInfos;

    /**
     * 打包产品标签图标（推荐航班：Recommended，晚出票：LateIssued）
     */
    public String getFlightPackageTagIcon() {
        return this.flightPackageTagIcon;
    }

    public void setFlightPackageTagIcon(String flightPackageTagIcon) {
        this.flightPackageTagIcon = flightPackageTagIcon;
    }

    /**
     * 打包产品标签
     */
    public String getFlightPackageTag() {
        return this.flightPackageTag;
    }

    public void setFlightPackageTag(String flightPackageTag) {
        this.flightPackageTag = flightPackageTag;
    }

    /**
     * 国内打包产品类型
     */
    public DistributionFlightPackageType getFlightPagkageType() {
        return this.flightPagkageType;
    }

    public void setFlightPagkageType(DistributionFlightPackageType flightPagkageType) {
        this.flightPagkageType = flightPagkageType;
    }

    /**
     * 是否捆绑销售
     */
    public boolean getIsBundle() {
        return this.isBundle;
    }

    public void setIsBundle(boolean isBundle) {
        this.isBundle = isBundle;
    }

    /**
     * 捆绑金额
     */
    public BigDecimal getBundledAmount() {
        return this.bundledAmount;
    }

    public void setBundledAmount(BigDecimal bundledAmount) {
        this.bundledAmount = bundledAmount;
    }

    /**
     * 捆绑金额当前币种
     */
    public BigDecimal getBundledAmountCurCurrency() {
        return this.bundledAmountCurCurrency;
    }

    public void setBundledAmountCurCurrency(BigDecimal bundledAmountCurCurrency) {
        this.bundledAmountCurCurrency = bundledAmountCurCurrency;
    }

    /**
     * 飞享金
     */
    public BigDecimal getSubsidy() {
        return this.subsidy;
    }

    public void setSubsidy(BigDecimal subsidy) {
        this.subsidy = subsidy;
    }

    /**
     * 飞享金当前币种
     */
    public BigDecimal getSubsidyCurCurrency() {
        return this.subsidyCurCurrency;
    }

    public void setSubsidyCurCurrency(BigDecimal subsidyCurCurrency) {
        this.subsidyCurCurrency = subsidyCurCurrency;
    }

    /**
     * 国航特惠减免金额（不要在页面金额上计算）
     */
    public BigDecimal getDiscountPrice() {
        return this.discountPrice;
    }

    public void setDiscountPrice(BigDecimal discountPrice) {
        this.discountPrice = discountPrice;
    }

    /**
     * 国航特惠减免金额当前币种（不要在页面金额上计算）
     */
    public BigDecimal getDiscountPriceCurCurrency() {
        return this.discountPriceCurCurrency;
    }

    public void setDiscountPriceCurCurrency(BigDecimal discountPriceCurCurrency) {
        this.discountPriceCurCurrency = discountPriceCurCurrency;
    }

    /**
     * 打包产品名称
     */
    public String getProductName() {
        return this.productName;
    }

    public void setProductName(String productName) {
        this.productName = productName;
    }

    /**
     * 打包产品描述
     */
    public String getPorductDescription() {
        return this.porductDescription;
    }

    public void setPorductDescription(String porductDescription) {
        this.porductDescription = porductDescription;
    }

    /**
     * 舱位描述
     */
    public String getClassDescription() {
        return this.classDescription;
    }

    public void setClassDescription(String classDescription) {
        this.classDescription = classDescription;
    }

    /**
     * 产品描述对应的语言货币信息,SubsidyCurCurrency是通过head.currency获取的,此处是通过head.Language获取的
     */
    public DistributionProductExchangeInfo getProductExchangeInfo() {
        return this.productExchangeInfo;
    }

    public void setProductExchangeInfo(DistributionProductExchangeInfo productExchangeInfo) {
        this.productExchangeInfo = productExchangeInfo;
    }

    /**
     * 产品描述对应的语言货币信息,SubsidyCurCurrency是通过head.currency获取的,此处是通过head.Language获取的 一个语言对应多个币种
     */
    public List<DistributionProductExchangeInfo> getProductExchangeInfos() {
        return this.productExchangeInfos;
    }

    public void setProductExchangeInfos(List<DistributionProductExchangeInfo> productExchangeInfos) {
        this.productExchangeInfos = productExchangeInfos;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final DistributionFlightProductDescriptionInfo other = (DistributionFlightProductDescriptionInfo)obj;
        return
            Objects.equal(this.flightPackageTagIcon, other.flightPackageTagIcon) && 
            Objects.equal(this.flightPackageTag, other.flightPackageTag) && 
            Objects.equal(this.flightPagkageType, other.flightPagkageType) && 
            Objects.equal(this.isBundle, other.isBundle) && 
            Objects.equal(this.bundledAmount, other.bundledAmount) && 
            Objects.equal(this.bundledAmountCurCurrency, other.bundledAmountCurCurrency) && 
            Objects.equal(this.subsidy, other.subsidy) && 
            Objects.equal(this.subsidyCurCurrency, other.subsidyCurCurrency) && 
            Objects.equal(this.discountPrice, other.discountPrice) && 
            Objects.equal(this.discountPriceCurCurrency, other.discountPriceCurCurrency) && 
            Objects.equal(this.productName, other.productName) && 
            Objects.equal(this.porductDescription, other.porductDescription) && 
            Objects.equal(this.classDescription, other.classDescription) && 
            Objects.equal(this.productExchangeInfo, other.productExchangeInfo) && 
            Objects.equal(this.productExchangeInfos, other.productExchangeInfos);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.flightPackageTagIcon);
        result = 31 * result + Objects.hashCode(this.flightPackageTag);
        result = 31 * result + Objects.hashCode(this.flightPagkageType);
        result = 31 * result + Objects.hashCode(this.isBundle);
        result = 31 * result + Objects.hashCode(this.bundledAmount);
        result = 31 * result + Objects.hashCode(this.bundledAmountCurCurrency);
        result = 31 * result + Objects.hashCode(this.subsidy);
        result = 31 * result + Objects.hashCode(this.subsidyCurCurrency);
        result = 31 * result + Objects.hashCode(this.discountPrice);
        result = 31 * result + Objects.hashCode(this.discountPriceCurCurrency);
        result = 31 * result + Objects.hashCode(this.productName);
        result = 31 * result + Objects.hashCode(this.porductDescription);
        result = 31 * result + Objects.hashCode(this.classDescription);
        result = 31 * result + Objects.hashCode(this.productExchangeInfo);
        result = 31 * result + Objects.hashCode(this.productExchangeInfos);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("flightPackageTagIcon", flightPackageTagIcon)
            .add("flightPackageTag", flightPackageTag)
            .add("flightPagkageType", flightPagkageType)
            .add("isBundle", isBundle)
            .add("bundledAmount", bundledAmount)
            .add("bundledAmountCurCurrency", bundledAmountCurCurrency)
            .add("subsidy", subsidy)
            .add("subsidyCurCurrency", subsidyCurCurrency)
            .add("discountPrice", discountPrice)
            .add("discountPriceCurCurrency", discountPriceCurCurrency)
            .add("productName", productName)
            .add("porductDescription", porductDescription)
            .add("classDescription", classDescription)
            .add("productExchangeInfo", productExchangeInfo)
            .add("productExchangeInfos", productExchangeInfos)
            .toString();
    }
}