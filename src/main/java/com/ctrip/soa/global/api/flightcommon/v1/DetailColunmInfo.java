/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.flightcommon.v1;

import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 航段信息
 */
@DtoDoc("航段信息")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DetailColunmInfo", propOrder = {
    "segNo",
    "clazz",
    "subClass",
    "remarks",
    "className",
    "fligntNo",
    "craftTypeInfo",
    "airLine",
    "dDate",
    "aDate",
    "dCity",
    "aCity",
    "dPort",
    "aPort",
    "dTerminal",
    "aTerminal",
    "duration",
    "hour",
    "min",
    "flightStopInfoList",
    "stopDurationStr",
    "differentAirportPoint",
    "shareAirLinePoint",
    "carrierAirLine",
    "carrierFligntNo",
    "sequence",
    "oriNo"
})
@SuppressWarnings("all")
public class DetailColunmInfo  {

    private static final long serialVersionUID = 1L;

    public DetailColunmInfo(
        int segNo, 
        GaCabinClassType clazz, 
        String subClass, 
        String remarks, 
        String className, 
        String fligntNo, 
        CraftTypeInfo craftTypeInfo, 
        AirLineInfo airLine, 
        long dDate, 
        long aDate, 
        CityInfo dCity, 
        CityInfo aCity, 
        AirPortInfo dPort, 
        AirPortInfo aPort, 
        TerminalInfo dTerminal, 
        TerminalInfo aTerminal, 
        int duration, 
        int hour, 
        int min, 
        List<FlightStopInfo> flightStopInfoList, 
        String stopDurationStr, 
        String differentAirportPoint, 
        String shareAirLinePoint, 
        String carrierAirLine, 
        String carrierFligntNo, 
        int sequence, 
        int oriNo) {
        this.segNo = segNo;
        this.clazz = clazz;
        this.subClass = subClass;
        this.remarks = remarks;
        this.className = className;
        this.fligntNo = fligntNo;
        this.craftTypeInfo = craftTypeInfo;
        this.airLine = airLine;
        this.dDate = dDate;
        this.aDate = aDate;
        this.dCity = dCity;
        this.aCity = aCity;
        this.dPort = dPort;
        this.aPort = aPort;
        this.dTerminal = dTerminal;
        this.aTerminal = aTerminal;
        this.duration = duration;
        this.hour = hour;
        this.min = min;
        this.flightStopInfoList = flightStopInfoList;
        this.stopDurationStr = stopDurationStr;
        this.differentAirportPoint = differentAirportPoint;
        this.shareAirLinePoint = shareAirLinePoint;
        this.carrierAirLine = carrierAirLine;
        this.carrierFligntNo = carrierFligntNo;
        this.sequence = sequence;
        this.oriNo = oriNo;
    }

    public DetailColunmInfo() {
    }

    @FieldDoc("航段序号")
    @JsonProperty("SegNo")
    @XmlElement(name = "SegNo")
    private int segNo;

    @FieldDoc("主舱")
    @JsonProperty("Class")
    @XmlElement(name = "Class")
    private GaCabinClassType clazz;

    @FieldDoc("子仓位")
    @JsonProperty("SubClass")
    @XmlElement(name = "SubClass")
    private String subClass;

    @FieldDoc("航班备注")
    @JsonProperty("Remarks")
    @XmlElement(name = "Remarks")
    private String remarks;

    @FieldDoc("舱位多语言名称")
    @JsonProperty("ClassName")
    @XmlElement(name = "ClassName")
    private String className;

    @FieldDoc("航班号")
    @JsonProperty("FligntNo")
    @XmlElement(name = "FligntNo")
    private String fligntNo;

    @FieldDoc("机型信息")
    @JsonProperty("CraftTypeInfo")
    @XmlElement(name = "CraftTypeInfo")
    private CraftTypeInfo craftTypeInfo;

    @FieldDoc("航空公司")
    @JsonProperty("AirLine")
    @XmlElement(name = "AirLine")
    private AirLineInfo airLine;

    @FieldDoc("出发时间")
    @JsonProperty("DDate")
    @XmlElement(name = "DDate")
    private long dDate;

    @FieldDoc("到达时间")
    @JsonProperty("ADate")
    @XmlElement(name = "ADate")
    private long aDate;

    @FieldDoc("出发城市")
    @JsonProperty("DCity")
    @XmlElement(name = "DCity")
    private CityInfo dCity;

    @FieldDoc("到达城市")
    @JsonProperty("ACity")
    @XmlElement(name = "ACity")
    private CityInfo aCity;

    @FieldDoc("出发机场")
    @JsonProperty("DPort")
    @XmlElement(name = "DPort")
    private AirPortInfo dPort;

    @FieldDoc("到达机场")
    @JsonProperty("APort")
    @XmlElement(name = "APort")
    private AirPortInfo aPort;

    @FieldDoc("出发航站楼")
    @JsonProperty("DTerminal")
    @XmlElement(name = "DTerminal")
    private TerminalInfo dTerminal;

    @FieldDoc("到达航站楼")
    @JsonProperty("ATerminal")
    @XmlElement(name = "ATerminal")
    private TerminalInfo aTerminal;

    @FieldDoc("飞行总时间/分钟")
    @JsonProperty("Duration")
    @XmlElement(name = "Duration")
    private int duration;

    @FieldDoc("飞行小时/总时间换算")
    @JsonProperty("Hour")
    @XmlElement(name = "Hour")
    private int hour;

    @FieldDoc("飞行除去小时后剩余分钟数")
    @JsonProperty("Min")
    @XmlElement(name = "Min")
    private int min;

    @FieldDoc("航班经停信息")
    @JsonProperty("FlightStopInfoList")
    @XmlElement(name = "FlightStopInfoList")
    private List<FlightStopInfo> flightStopInfoList;

    @FieldDoc("中转停留时间")
    @JsonProperty("StopDurationStr")
    @XmlElement(name = "StopDurationStr")
    private String stopDurationStr;

    @FieldDoc("不同机场中转提示")
    @JsonProperty("DifferentAirportPoint")
    @XmlElement(name = "DifferentAirportPoint")
    private String differentAirportPoint;

    @FieldDoc("实际承运航班提示")
    @JsonProperty("ShareAirLinePoint")
    @XmlElement(name = "ShareAirLinePoint")
    private String shareAirLinePoint;

    @FieldDoc("承运航司")
    @JsonProperty("CarrierAirLine")
    @XmlElement(name = "CarrierAirLine")
    private String carrierAirLine;

    @FieldDoc("承运航班号")
    @JsonProperty("CarrierFligntNo")
    @XmlElement(name = "CarrierFligntNo")
    private String carrierFligntNo;

    @FieldDoc("对应中文接口的航班序号Sequence")
    @JsonProperty("Sequence")
    @XmlElement(name = "Sequence")
    private int sequence;

    @FieldDoc("用来对应PolicyInfo 航线序号")
    @JsonProperty("OriNo")
    @XmlElement(name = "OriNo")
    private int oriNo;

    /**
     * 航段序号
     */
    public int getSegNo() {
        return this.segNo;
    }

    public void setSegNo(int segNo) {
        this.segNo = segNo;
    }

    /**
     * 主舱
     */
    public GaCabinClassType getClazz() {
        return this.clazz;
    }

    public void setClazz(GaCabinClassType clazz) {
        this.clazz = clazz;
    }

    /**
     * 子仓位
     */
    public String getSubClass() {
        return this.subClass;
    }

    public void setSubClass(String subClass) {
        this.subClass = subClass;
    }

    /**
     * 航班备注
     */
    public String getRemarks() {
        return this.remarks;
    }

    public void setRemarks(String remarks) {
        this.remarks = remarks;
    }

    /**
     * 舱位多语言名称
     */
    public String getClassName() {
        return this.className;
    }

    public void setClassName(String className) {
        this.className = className;
    }

    /**
     * 航班号
     */
    public String getFligntNo() {
        return this.fligntNo;
    }

    public void setFligntNo(String fligntNo) {
        this.fligntNo = fligntNo;
    }

    /**
     * 机型信息
     */
    public CraftTypeInfo getCraftTypeInfo() {
        return this.craftTypeInfo;
    }

    public void setCraftTypeInfo(CraftTypeInfo craftTypeInfo) {
        this.craftTypeInfo = craftTypeInfo;
    }

    /**
     * 航空公司
     */
    public AirLineInfo getAirLine() {
        return this.airLine;
    }

    public void setAirLine(AirLineInfo airLine) {
        this.airLine = airLine;
    }

    /**
     * 出发时间
     */
    public long getDDate() {
        return this.dDate;
    }

    public void setDDate(long dDate) {
        this.dDate = dDate;
    }

    /**
     * 到达时间
     */
    public long getADate() {
        return this.aDate;
    }

    public void setADate(long aDate) {
        this.aDate = aDate;
    }

    /**
     * 出发城市
     */
    public CityInfo getDCity() {
        return this.dCity;
    }

    public void setDCity(CityInfo dCity) {
        this.dCity = dCity;
    }

    /**
     * 到达城市
     */
    public CityInfo getACity() {
        return this.aCity;
    }

    public void setACity(CityInfo aCity) {
        this.aCity = aCity;
    }

    /**
     * 出发机场
     */
    public AirPortInfo getDPort() {
        return this.dPort;
    }

    public void setDPort(AirPortInfo dPort) {
        this.dPort = dPort;
    }

    /**
     * 到达机场
     */
    public AirPortInfo getAPort() {
        return this.aPort;
    }

    public void setAPort(AirPortInfo aPort) {
        this.aPort = aPort;
    }

    /**
     * 出发航站楼
     */
    public TerminalInfo getDTerminal() {
        return this.dTerminal;
    }

    public void setDTerminal(TerminalInfo dTerminal) {
        this.dTerminal = dTerminal;
    }

    /**
     * 到达航站楼
     */
    public TerminalInfo getATerminal() {
        return this.aTerminal;
    }

    public void setATerminal(TerminalInfo aTerminal) {
        this.aTerminal = aTerminal;
    }

    /**
     * 飞行总时间/分钟
     */
    public int getDuration() {
        return this.duration;
    }

    public void setDuration(int duration) {
        this.duration = duration;
    }

    /**
     * 飞行小时/总时间换算
     */
    public int getHour() {
        return this.hour;
    }

    public void setHour(int hour) {
        this.hour = hour;
    }

    /**
     * 飞行除去小时后剩余分钟数
     */
    public int getMin() {
        return this.min;
    }

    public void setMin(int min) {
        this.min = min;
    }

    /**
     * 航班经停信息
     */
    public List<FlightStopInfo> getFlightStopInfoList() {
        return this.flightStopInfoList;
    }

    public void setFlightStopInfoList(List<FlightStopInfo> flightStopInfoList) {
        this.flightStopInfoList = flightStopInfoList;
    }

    /**
     * 中转停留时间
     */
    public String getStopDurationStr() {
        return this.stopDurationStr;
    }

    public void setStopDurationStr(String stopDurationStr) {
        this.stopDurationStr = stopDurationStr;
    }

    /**
     * 不同机场中转提示
     */
    public String getDifferentAirportPoint() {
        return this.differentAirportPoint;
    }

    public void setDifferentAirportPoint(String differentAirportPoint) {
        this.differentAirportPoint = differentAirportPoint;
    }

    /**
     * 实际承运航班提示
     */
    public String getShareAirLinePoint() {
        return this.shareAirLinePoint;
    }

    public void setShareAirLinePoint(String shareAirLinePoint) {
        this.shareAirLinePoint = shareAirLinePoint;
    }

    /**
     * 承运航司
     */
    public String getCarrierAirLine() {
        return this.carrierAirLine;
    }

    public void setCarrierAirLine(String carrierAirLine) {
        this.carrierAirLine = carrierAirLine;
    }

    /**
     * 承运航班号
     */
    public String getCarrierFligntNo() {
        return this.carrierFligntNo;
    }

    public void setCarrierFligntNo(String carrierFligntNo) {
        this.carrierFligntNo = carrierFligntNo;
    }

    /**
     * 对应中文接口的航班序号Sequence
     */
    public int getSequence() {
        return this.sequence;
    }

    public void setSequence(int sequence) {
        this.sequence = sequence;
    }

    /**
     * 用来对应PolicyInfo 航线序号
     */
    public int getOriNo() {
        return this.oriNo;
    }

    public void setOriNo(int oriNo) {
        this.oriNo = oriNo;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final DetailColunmInfo other = (DetailColunmInfo)obj;
        return
            Objects.equal(this.segNo, other.segNo) && 
            Objects.equal(this.clazz, other.clazz) && 
            Objects.equal(this.subClass, other.subClass) && 
            Objects.equal(this.remarks, other.remarks) && 
            Objects.equal(this.className, other.className) && 
            Objects.equal(this.fligntNo, other.fligntNo) && 
            Objects.equal(this.craftTypeInfo, other.craftTypeInfo) && 
            Objects.equal(this.airLine, other.airLine) && 
            Objects.equal(this.dDate, other.dDate) && 
            Objects.equal(this.aDate, other.aDate) && 
            Objects.equal(this.dCity, other.dCity) && 
            Objects.equal(this.aCity, other.aCity) && 
            Objects.equal(this.dPort, other.dPort) && 
            Objects.equal(this.aPort, other.aPort) && 
            Objects.equal(this.dTerminal, other.dTerminal) && 
            Objects.equal(this.aTerminal, other.aTerminal) && 
            Objects.equal(this.duration, other.duration) && 
            Objects.equal(this.hour, other.hour) && 
            Objects.equal(this.min, other.min) && 
            Objects.equal(this.flightStopInfoList, other.flightStopInfoList) && 
            Objects.equal(this.stopDurationStr, other.stopDurationStr) && 
            Objects.equal(this.differentAirportPoint, other.differentAirportPoint) && 
            Objects.equal(this.shareAirLinePoint, other.shareAirLinePoint) && 
            Objects.equal(this.carrierAirLine, other.carrierAirLine) && 
            Objects.equal(this.carrierFligntNo, other.carrierFligntNo) && 
            Objects.equal(this.sequence, other.sequence) && 
            Objects.equal(this.oriNo, other.oriNo);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.segNo);
        result = 31 * result + Objects.hashCode(this.clazz);
        result = 31 * result + Objects.hashCode(this.subClass);
        result = 31 * result + Objects.hashCode(this.remarks);
        result = 31 * result + Objects.hashCode(this.className);
        result = 31 * result + Objects.hashCode(this.fligntNo);
        result = 31 * result + Objects.hashCode(this.craftTypeInfo);
        result = 31 * result + Objects.hashCode(this.airLine);
        result = 31 * result + Objects.hashCode(this.dDate);
        result = 31 * result + Objects.hashCode(this.aDate);
        result = 31 * result + Objects.hashCode(this.dCity);
        result = 31 * result + Objects.hashCode(this.aCity);
        result = 31 * result + Objects.hashCode(this.dPort);
        result = 31 * result + Objects.hashCode(this.aPort);
        result = 31 * result + Objects.hashCode(this.dTerminal);
        result = 31 * result + Objects.hashCode(this.aTerminal);
        result = 31 * result + Objects.hashCode(this.duration);
        result = 31 * result + Objects.hashCode(this.hour);
        result = 31 * result + Objects.hashCode(this.min);
        result = 31 * result + Objects.hashCode(this.flightStopInfoList);
        result = 31 * result + Objects.hashCode(this.stopDurationStr);
        result = 31 * result + Objects.hashCode(this.differentAirportPoint);
        result = 31 * result + Objects.hashCode(this.shareAirLinePoint);
        result = 31 * result + Objects.hashCode(this.carrierAirLine);
        result = 31 * result + Objects.hashCode(this.carrierFligntNo);
        result = 31 * result + Objects.hashCode(this.sequence);
        result = 31 * result + Objects.hashCode(this.oriNo);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("segNo", segNo)
            .add("clazz", clazz)
            .add("subClass", subClass)
            .add("remarks", remarks)
            .add("className", className)
            .add("fligntNo", fligntNo)
            .add("craftTypeInfo", craftTypeInfo)
            .add("airLine", airLine)
            .add("dDate", dDate)
            .add("aDate", aDate)
            .add("dCity", dCity)
            .add("aCity", aCity)
            .add("dPort", dPort)
            .add("aPort", aPort)
            .add("dTerminal", dTerminal)
            .add("aTerminal", aTerminal)
            .add("duration", duration)
            .add("hour", hour)
            .add("min", min)
            .add("flightStopInfoList", flightStopInfoList)
            .add("stopDurationStr", stopDurationStr)
            .add("differentAirportPoint", differentAirportPoint)
            .add("shareAirLinePoint", shareAirLinePoint)
            .add("carrierAirLine", carrierAirLine)
            .add("carrierFligntNo", carrierFligntNo)
            .add("sequence", sequence)
            .add("oriNo", oriNo)
            .toString();
    }
}