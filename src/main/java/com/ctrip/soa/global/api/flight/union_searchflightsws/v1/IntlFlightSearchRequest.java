/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.flight.union_searchflightsws.v1;

import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlRootElement(name = "IntlFlightSearchRequest", namespace = "http://soa.ctrip.com/Global/API/Flight/Union_SearchFlightsWS/v1")
@XmlType(name = "IntlFlightSearchRequest", propOrder = {
    "searchCriteria",
    "resultControl",
    "searchContext",
    "header"
})
@SuppressWarnings("all")
public class IntlFlightSearchRequest  {

    private static final long serialVersionUID = 1L;

    public IntlFlightSearchRequest(
        SearchCriteriaType searchCriteria, 
        ResultControlType resultControl, 
        SearchContextType searchContext, 
        Header header) {
        this.searchCriteria = searchCriteria;
        this.resultControl = resultControl;
        this.searchContext = searchContext;
        this.header = header;
    }

    public IntlFlightSearchRequest() {
    }

    @FieldDoc("Parameter directly set by the final user")
    @JsonProperty("SearchCriteria")
    @XmlElement(name = "SearchCriteria")
    private SearchCriteriaType searchCriteria;

    @JsonProperty("ResultControl")
    @XmlElement(name = "ResultControl")
    private ResultControlType resultControl;

    @JsonProperty("SearchContext")
    @XmlElement(name = "SearchContext")
    private SearchContextType searchContext;

    @JsonProperty("Header")
    @XmlElement(name = "Header")
    private Header header;

    /**
     * Parameter directly set by the final user
     */
    public SearchCriteriaType getSearchCriteria() {
        return this.searchCriteria;
    }

    public void setSearchCriteria(SearchCriteriaType searchCriteria) {
        this.searchCriteria = searchCriteria;
    }

    public ResultControlType getResultControl() {
        return this.resultControl;
    }

    public void setResultControl(ResultControlType resultControl) {
        this.resultControl = resultControl;
    }

    public SearchContextType getSearchContext() {
        return this.searchContext;
    }

    public void setSearchContext(SearchContextType searchContext) {
        this.searchContext = searchContext;
    }

    public Header getHeader() {
        return this.header;
    }

    public void setHeader(Header header) {
        this.header = header;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final IntlFlightSearchRequest other = (IntlFlightSearchRequest)obj;
        return
            Objects.equal(this.searchCriteria, other.searchCriteria) && 
            Objects.equal(this.resultControl, other.resultControl) && 
            Objects.equal(this.searchContext, other.searchContext) && 
            Objects.equal(this.header, other.header);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.searchCriteria);
        result = 31 * result + Objects.hashCode(this.resultControl);
        result = 31 * result + Objects.hashCode(this.searchContext);
        result = 31 * result + Objects.hashCode(this.header);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("searchCriteria", searchCriteria)
            .add("resultControl", resultControl)
            .add("searchContext", searchContext)
            .add("header", header)
            .toString();
    }
}