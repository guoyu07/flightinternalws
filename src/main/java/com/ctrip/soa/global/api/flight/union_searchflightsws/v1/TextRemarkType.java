/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.flight.union_searchflightsws.v1;

import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TextRemarkType", propOrder = {
    "remarkID",
    "textCN",
    "textEN"
})
@SuppressWarnings("all")
public class TextRemarkType  {

    private static final long serialVersionUID = 1L;

    public TextRemarkType(
        int remarkID, 
        String textCN, 
        String textEN) {
        this.remarkID = remarkID;
        this.textCN = textCN;
        this.textEN = textEN;
    }

    public TextRemarkType() {
    }

    @FieldDoc("备注ID")
    @JsonProperty("RemarkID")
    @XmlElement(name = "RemarkID")
    private int remarkID;

    @JsonProperty("TextCN")
    @XmlElement(name = "TextCN")
    private String textCN;

    @JsonProperty("TextEN")
    @XmlElement(name = "TextEN")
    private String textEN;

    /**
     * 备注ID
     */
    public int getRemarkID() {
        return this.remarkID;
    }

    public void setRemarkID(int remarkID) {
        this.remarkID = remarkID;
    }

    public String getTextCN() {
        return this.textCN;
    }

    public void setTextCN(String textCN) {
        this.textCN = textCN;
    }

    public String getTextEN() {
        return this.textEN;
    }

    public void setTextEN(String textEN) {
        this.textEN = textEN;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final TextRemarkType other = (TextRemarkType)obj;
        return
            Objects.equal(this.remarkID, other.remarkID) && 
            Objects.equal(this.textCN, other.textCN) && 
            Objects.equal(this.textEN, other.textEN);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.remarkID);
        result = 31 * result + Objects.hashCode(this.textCN);
        result = 31 * result + Objects.hashCode(this.textEN);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("remarkID", remarkID)
            .add("textCN", textCN)
            .add("textEN", textEN)
            .toString();
    }
}