/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.flight.transfersrecommandation.v1;

import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.math.BigDecimal;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 乘客类型（费用）
 */
@DtoDoc("乘客类型（费用）")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PassengerFee", propOrder = {
    "adult",
    "child",
    "baby"
})
@SuppressWarnings("all")
public class PassengerFee  {

    private static final long serialVersionUID = 1L;

    public PassengerFee(
        BigDecimal adult, 
        BigDecimal child, 
        BigDecimal baby) {
        this.adult = adult;
        this.child = child;
        this.baby = baby;
    }

    public PassengerFee() {
    }

    @FieldDoc("成人费用")
    @JsonProperty("Adult")
    @XmlElement(name = "Adult")
    private BigDecimal adult;

    @FieldDoc("儿童费用")
    @JsonProperty("Child")
    @XmlElement(name = "Child")
    private BigDecimal child;

    @FieldDoc("婴儿费用")
    @JsonProperty("Baby")
    @XmlElement(name = "Baby")
    private BigDecimal baby;

    /**
     * 成人费用
     */
    public BigDecimal getAdult() {
        return this.adult;
    }

    public void setAdult(BigDecimal adult) {
        this.adult = adult;
    }

    /**
     * 儿童费用
     */
    public BigDecimal getChild() {
        return this.child;
    }

    public void setChild(BigDecimal child) {
        this.child = child;
    }

    /**
     * 婴儿费用
     */
    public BigDecimal getBaby() {
        return this.baby;
    }

    public void setBaby(BigDecimal baby) {
        this.baby = baby;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final PassengerFee other = (PassengerFee)obj;
        return
            Objects.equal(this.adult, other.adult) && 
            Objects.equal(this.child, other.child) && 
            Objects.equal(this.baby, other.baby);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.adult);
        result = 31 * result + Objects.hashCode(this.child);
        result = 31 * result + Objects.hashCode(this.baby);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("adult", adult)
            .add("child", child)
            .add("baby", baby)
            .toString();
    }
}