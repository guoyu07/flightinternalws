/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.gagetflightverify.v1;

import com.ctrip.soa.global.api.comm.head.v1.Head;
import com.ctrip.soa.global.api.flightcommon.v1.ProductKeyInfo;
import com.ctrip.soa.global.api.flightcommon.v1.TravelerInfo;
import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.math.BigDecimal;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 移动端专用国际国内验舱验价请求
 */
@DtoDoc("移动端专用国际国内验舱验价请求")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlRootElement(name = "GaGetFlightVerifyRequest", namespace = "http://soa.ctrip.com/Global/API/GaGetFlightVerify/v1")
@XmlType(name = "GaGetFlightVerifyRequest", propOrder = {
    "head",
    "flightClass",
    "productID",
    "cnyDomesticTexFee",
    "productKeyInfo",
    "travelerInfo",
    "verifyTokenNumber",
    "isSynchronized"
})
@SuppressWarnings("all")
public class GaGetFlightVerifyRequest  {

    private static final long serialVersionUID = 1L;

    public GaGetFlightVerifyRequest(
        Head head, 
        String flightClass, 
        String productID, 
        BigDecimal cnyDomesticTexFee, 
        ProductKeyInfo productKeyInfo, 
        TravelerInfo travelerInfo, 
        String verifyTokenNumber, 
        boolean isSynchronized) {
        this.head = head;
        this.flightClass = flightClass;
        this.productID = productID;
        this.cnyDomesticTexFee = cnyDomesticTexFee;
        this.productKeyInfo = productKeyInfo;
        this.travelerInfo = travelerInfo;
        this.verifyTokenNumber = verifyTokenNumber;
        this.isSynchronized = isSynchronized;
    }

    public GaGetFlightVerifyRequest() {
    }

    @FieldDoc("SOA2.0请求头部信息")
    @JsonProperty("Head")
    @XmlElement(name = "Head")
    private Head head;

    @FieldDoc("I：国际，N：国内")
    @JsonProperty("FlightClass")
    @XmlElement(name = "FlightClass")
    private String flightClass;

    @FieldDoc("国内机票验舱验价必传，来源于GetBookingInfo接口中")
    @JsonProperty("ProductID")
    @XmlElement(name = "ProductID")
    private String productID;

    @FieldDoc("国内机票验舱需要传")
    @JsonProperty("CNYDomesticTexFee")
    @XmlElement(name = "CNYDomesticTexFee")
    private BigDecimal cnyDomesticTexFee;

    @FieldDoc("国际机票验舱验价必传，来源于GetBookingInfo接口中")
    @JsonProperty("ProductKeyInfo")
    @XmlElement(name = "ProductKeyInfo")
    private ProductKeyInfo productKeyInfo;

    @FieldDoc("国际机票验舱验价必传，来源于GetBookingInfo接口中")
    @JsonProperty("TravelerInfo")
    @XmlElement(name = "TravelerInfo")
    private TravelerInfo travelerInfo;

    @FieldDoc("可定检查TokenNumber")
    @JsonProperty("VerifyTokenNumber")
    @XmlElement(name = "VerifyTokenNumber")
    private String verifyTokenNumber;

    @FieldDoc("是否同步")
    @JsonProperty("IsSynchronized")
    @XmlElement(name = "IsSynchronized")
    private boolean isSynchronized;

    /**
     * SOA2.0请求头部信息
     */
    public Head getHead() {
        return this.head;
    }

    public void setHead(Head head) {
        this.head = head;
    }

    /**
     * I：国际，N：国内
     */
    public String getFlightClass() {
        return this.flightClass;
    }

    public void setFlightClass(String flightClass) {
        this.flightClass = flightClass;
    }

    /**
     * 国内机票验舱验价必传，来源于GetBookingInfo接口中
     */
    public String getProductID() {
        return this.productID;
    }

    public void setProductID(String productID) {
        this.productID = productID;
    }

    /**
     * 国内机票验舱需要传
     */
    public BigDecimal getCnyDomesticTexFee() {
        return this.cnyDomesticTexFee;
    }

    public void setCnyDomesticTexFee(BigDecimal cnyDomesticTexFee) {
        this.cnyDomesticTexFee = cnyDomesticTexFee;
    }

    /**
     * 国际机票验舱验价必传，来源于GetBookingInfo接口中
     */
    public ProductKeyInfo getProductKeyInfo() {
        return this.productKeyInfo;
    }

    public void setProductKeyInfo(ProductKeyInfo productKeyInfo) {
        this.productKeyInfo = productKeyInfo;
    }

    /**
     * 国际机票验舱验价必传，来源于GetBookingInfo接口中
     */
    public TravelerInfo getTravelerInfo() {
        return this.travelerInfo;
    }

    public void setTravelerInfo(TravelerInfo travelerInfo) {
        this.travelerInfo = travelerInfo;
    }

    /**
     * 可定检查TokenNumber
     */
    public String getVerifyTokenNumber() {
        return this.verifyTokenNumber;
    }

    public void setVerifyTokenNumber(String verifyTokenNumber) {
        this.verifyTokenNumber = verifyTokenNumber;
    }

    /**
     * 是否同步
     */
    public boolean getIsSynchronized() {
        return this.isSynchronized;
    }

    public void setIsSynchronized(boolean isSynchronized) {
        this.isSynchronized = isSynchronized;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final GaGetFlightVerifyRequest other = (GaGetFlightVerifyRequest)obj;
        return
            Objects.equal(this.head, other.head) && 
            Objects.equal(this.flightClass, other.flightClass) && 
            Objects.equal(this.productID, other.productID) && 
            Objects.equal(this.cnyDomesticTexFee, other.cnyDomesticTexFee) && 
            Objects.equal(this.productKeyInfo, other.productKeyInfo) && 
            Objects.equal(this.travelerInfo, other.travelerInfo) && 
            Objects.equal(this.verifyTokenNumber, other.verifyTokenNumber) && 
            Objects.equal(this.isSynchronized, other.isSynchronized);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.head);
        result = 31 * result + Objects.hashCode(this.flightClass);
        result = 31 * result + Objects.hashCode(this.productID);
        result = 31 * result + Objects.hashCode(this.cnyDomesticTexFee);
        result = 31 * result + Objects.hashCode(this.productKeyInfo);
        result = 31 * result + Objects.hashCode(this.travelerInfo);
        result = 31 * result + Objects.hashCode(this.verifyTokenNumber);
        result = 31 * result + Objects.hashCode(this.isSynchronized);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("head", head)
            .add("flightClass", flightClass)
            .add("productID", productID)
            .add("cnyDomesticTexFee", cnyDomesticTexFee)
            .add("productKeyInfo", productKeyInfo)
            .add("travelerInfo", travelerInfo)
            .add("verifyTokenNumber", verifyTokenNumber)
            .add("isSynchronized", isSynchronized)
            .toString();
    }
}