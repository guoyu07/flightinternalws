/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.orderdetailsearch.v1;

import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.math.BigDecimal;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 行李额价格信息
 */
@DtoDoc("行李额价格信息")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "BaggagePriceEntity", propOrder = {
    "currency",
    "exchangeRate",
    "salePrice",
    "printPrice",
    "costPrice",
    "airportSalePrice"
})
@SuppressWarnings("all")
public class BaggagePriceEntity  {

    private static final long serialVersionUID = 1L;

    public BaggagePriceEntity(
        String currency, 
        BigDecimal exchangeRate, 
        BigDecimal salePrice, 
        BigDecimal printPrice, 
        BigDecimal costPrice, 
        BigDecimal airportSalePrice) {
        this.currency = currency;
        this.exchangeRate = exchangeRate;
        this.salePrice = salePrice;
        this.printPrice = printPrice;
        this.costPrice = costPrice;
        this.airportSalePrice = airportSalePrice;
    }

    public BaggagePriceEntity() {
    }

    @FieldDoc("币种")
    @JsonProperty("Currency")
    @XmlElement(name = "Currency")
    private String currency;

    @FieldDoc("当前币种对CNY的汇率(下单时的汇率,非实时汇率)")
    @JsonProperty("ExchangeRate")
    @XmlElement(name = "ExchangeRate")
    private BigDecimal exchangeRate;

    @FieldDoc("预定价格")
    @JsonProperty("SalePrice")
    @XmlElement(name = "SalePrice")
    private BigDecimal salePrice;

    @FieldDoc("票面价格")
    @JsonProperty("PrintPrice")
    @XmlElement(name = "PrintPrice")
    private BigDecimal printPrice;

    @FieldDoc("底价")
    @JsonProperty("CostPrice")
    @XmlElement(name = "CostPrice")
    private BigDecimal costPrice;

    @FieldDoc("机场售卖价格")
    @JsonProperty("AirportSalePrice")
    @XmlElement(name = "AirportSalePrice")
    private BigDecimal airportSalePrice;

    /**
     * 币种
     */
    public String getCurrency() {
        return this.currency;
    }

    public void setCurrency(String currency) {
        this.currency = currency;
    }

    /**
     * 当前币种对CNY的汇率(下单时的汇率,非实时汇率)
     */
    public BigDecimal getExchangeRate() {
        return this.exchangeRate;
    }

    public void setExchangeRate(BigDecimal exchangeRate) {
        this.exchangeRate = exchangeRate;
    }

    /**
     * 预定价格
     */
    public BigDecimal getSalePrice() {
        return this.salePrice;
    }

    public void setSalePrice(BigDecimal salePrice) {
        this.salePrice = salePrice;
    }

    /**
     * 票面价格
     */
    public BigDecimal getPrintPrice() {
        return this.printPrice;
    }

    public void setPrintPrice(BigDecimal printPrice) {
        this.printPrice = printPrice;
    }

    /**
     * 底价
     */
    public BigDecimal getCostPrice() {
        return this.costPrice;
    }

    public void setCostPrice(BigDecimal costPrice) {
        this.costPrice = costPrice;
    }

    /**
     * 机场售卖价格
     */
    public BigDecimal getAirportSalePrice() {
        return this.airportSalePrice;
    }

    public void setAirportSalePrice(BigDecimal airportSalePrice) {
        this.airportSalePrice = airportSalePrice;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final BaggagePriceEntity other = (BaggagePriceEntity)obj;
        return
            Objects.equal(this.currency, other.currency) && 
            Objects.equal(this.exchangeRate, other.exchangeRate) && 
            Objects.equal(this.salePrice, other.salePrice) && 
            Objects.equal(this.printPrice, other.printPrice) && 
            Objects.equal(this.costPrice, other.costPrice) && 
            Objects.equal(this.airportSalePrice, other.airportSalePrice);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.currency);
        result = 31 * result + Objects.hashCode(this.exchangeRate);
        result = 31 * result + Objects.hashCode(this.salePrice);
        result = 31 * result + Objects.hashCode(this.printPrice);
        result = 31 * result + Objects.hashCode(this.costPrice);
        result = 31 * result + Objects.hashCode(this.airportSalePrice);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("currency", currency)
            .add("exchangeRate", exchangeRate)
            .add("salePrice", salePrice)
            .add("printPrice", printPrice)
            .add("costPrice", costPrice)
            .add("airportSalePrice", airportSalePrice)
            .toString();
    }
}