// Generated by eBay Common SDK Platform
package com.ctrip.soa.global.api.flightcommon.v1;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlEnumValue;

/**
 * 创建订单状态(国内国际通用)
 */
@XmlType(name = "GaCreateOrderStatus")
@XmlEnum
@SuppressWarnings("all")
public enum GaCreateOrderStatus {

    @XmlEnumValue("Success")
    Success(0, "Success"),

    @XmlEnumValue("ParameterError")
    ParameterError(1, "ParameterError"),

    @XmlEnumValue("FullWarehouse")
    FullWarehouse(2, "FullWarehouse"),

    @XmlEnumValue("PriceChange")
    PriceChange(3, "PriceChange"),

    @XmlEnumValue("FullWarehouseAndPriceChange")
    FullWarehouseAndPriceChange(4, "FullWarehouseAndPriceChange"),

    @XmlEnumValue("FligthSearchError")
    FligthSearchError(5, "FligthSearchError"),

    @XmlEnumValue("SOACreateOrderFail")
    SOACreateOrderFail(6, "SOACreateOrderFail"),

    @XmlEnumValue("HasRepeatOrder")
    HasRepeatOrder(7, "HasRepeatOrder"),

    @XmlEnumValue("Unknown")
    Unknown(8, "Unknown");

    private final int intValue;
    private final String value;

    GaCreateOrderStatus(int intValue, String value) {
        this.intValue = intValue;
        this.value = value;
    }

    public int getValue() {
        return intValue;
    }

    @JsonValue
    public String value() {
        return value;
    }

    @JsonCreator
    public static GaCreateOrderStatus fromValue(String v) {
        for (GaCreateOrderStatus e: GaCreateOrderStatus.values()) {
            if (e.value.equals(v)) {
                return e;
            }
        }
        throw new IllegalArgumentException(v);
    }

    public static GaCreateOrderStatus findByValue(int value) {
        switch (value) {
            case 0:
                return Success;
            case 1:
                return ParameterError;
            case 2:
                return FullWarehouse;
            case 3:
                return PriceChange;
            case 4:
                return FullWarehouseAndPriceChange;
            case 5:
                return FligthSearchError;
            case 6:
                return SOACreateOrderFail;
            case 7:
                return HasRepeatOrder;
            case 8:
                return Unknown;
            default:
                return null;
        }
    }
}