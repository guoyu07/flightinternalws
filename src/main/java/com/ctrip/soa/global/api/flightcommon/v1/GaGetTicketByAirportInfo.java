/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.flightcommon.v1;

import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.util.Calendar;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 机场自取地址实体
 */
@DtoDoc("机场自取地址实体")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "GaGetTicketByAirportInfo", propOrder = {
    "city",
    "districtID",
    "address",
    "addressID",
    "fetchAirport",
    "fetchEarlyTime",
    "fetchLastTime"
})
@SuppressWarnings("all")
public class GaGetTicketByAirportInfo  {

    private static final long serialVersionUID = 1L;

    public GaGetTicketByAirportInfo(
        String city, 
        int districtID, 
        String address, 
        int addressID, 
        String fetchAirport, 
        Calendar fetchEarlyTime, 
        Calendar fetchLastTime) {
        this.city = city;
        this.districtID = districtID;
        this.address = address;
        this.addressID = addressID;
        this.fetchAirport = fetchAirport;
        this.fetchEarlyTime = fetchEarlyTime;
        this.fetchLastTime = fetchLastTime;
    }

    public GaGetTicketByAirportInfo() {
    }

    @FieldDoc("城市")
    @JsonProperty("City")
    @XmlElement(name = "City")
    private String city;

    @FieldDoc("区ID")
    @JsonProperty("DistrictID")
    @XmlElement(name = "DistrictID")
    private int districtID;

    @FieldDoc("地址")
    @JsonProperty("Address")
    @XmlElement(name = "Address")
    private String address;

    @FieldDoc("地址ID")
    @JsonProperty("AddressID")
    @XmlElement(name = "AddressID")
    private int addressID;

    @FieldDoc("自取票机场三字码")
    @JsonProperty("FetchAirport")
    @XmlElement(name = "FetchAirport")
    private String fetchAirport;

    @FieldDoc("最早取票时间")
    @JsonProperty("FetchEarlyTime")
    @XmlElement(name = "FetchEarlyTime")
    private Calendar fetchEarlyTime;

    @FieldDoc("最晚取票时间")
    @JsonProperty("FetchLastTime")
    @XmlElement(name = "FetchLastTime")
    private Calendar fetchLastTime;

    /**
     * 城市
     */
    public String getCity() {
        return this.city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    /**
     * 区ID
     */
    public int getDistrictID() {
        return this.districtID;
    }

    public void setDistrictID(int districtID) {
        this.districtID = districtID;
    }

    /**
     * 地址
     */
    public String getAddress() {
        return this.address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    /**
     * 地址ID
     */
    public int getAddressID() {
        return this.addressID;
    }

    public void setAddressID(int addressID) {
        this.addressID = addressID;
    }

    /**
     * 自取票机场三字码
     */
    public String getFetchAirport() {
        return this.fetchAirport;
    }

    public void setFetchAirport(String fetchAirport) {
        this.fetchAirport = fetchAirport;
    }

    /**
     * 最早取票时间
     */
    public Calendar getFetchEarlyTime() {
        return this.fetchEarlyTime;
    }

    public void setFetchEarlyTime(Calendar fetchEarlyTime) {
        this.fetchEarlyTime = fetchEarlyTime;
    }

    /**
     * 最晚取票时间
     */
    public Calendar getFetchLastTime() {
        return this.fetchLastTime;
    }

    public void setFetchLastTime(Calendar fetchLastTime) {
        this.fetchLastTime = fetchLastTime;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final GaGetTicketByAirportInfo other = (GaGetTicketByAirportInfo)obj;
        return
            Objects.equal(this.city, other.city) && 
            Objects.equal(this.districtID, other.districtID) && 
            Objects.equal(this.address, other.address) && 
            Objects.equal(this.addressID, other.addressID) && 
            Objects.equal(this.fetchAirport, other.fetchAirport) && 
            Objects.equal(this.fetchEarlyTime, other.fetchEarlyTime) && 
            Objects.equal(this.fetchLastTime, other.fetchLastTime);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.city);
        result = 31 * result + Objects.hashCode(this.districtID);
        result = 31 * result + Objects.hashCode(this.address);
        result = 31 * result + Objects.hashCode(this.addressID);
        result = 31 * result + Objects.hashCode(this.fetchAirport);
        result = 31 * result + Objects.hashCode(this.fetchEarlyTime);
        result = 31 * result + Objects.hashCode(this.fetchLastTime);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("city", city)
            .add("districtID", districtID)
            .add("address", address)
            .add("addressID", addressID)
            .add("fetchAirport", fetchAirport)
            .add("fetchEarlyTime", fetchEarlyTime)
            .add("fetchLastTime", fetchLastTime)
            .toString();
    }
}