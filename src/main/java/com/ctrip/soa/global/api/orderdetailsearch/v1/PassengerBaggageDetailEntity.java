/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.orderdetailsearch.v1;

import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 行李额增值服务详细信息
 */
@DtoDoc("行李额增值服务详细信息")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PassengerBaggageDetailEntity", propOrder = {
    "passengerName",
    "selectedBaggageList"
})
@SuppressWarnings("all")
public class PassengerBaggageDetailEntity  {

    private static final long serialVersionUID = 1L;

    public PassengerBaggageDetailEntity(
        String passengerName, 
        List<ValueAddedBaggageDetailEntity> selectedBaggageList) {
        this.passengerName = passengerName;
        this.selectedBaggageList = selectedBaggageList;
    }

    public PassengerBaggageDetailEntity() {
    }

    @FieldDoc("乘客姓名")
    @JsonProperty("PassengerName")
    @XmlElement(name = "PassengerName")
    private String passengerName;

    @FieldDoc("已选行李额信息")
    @JsonProperty("SelectedBaggageList")
    @XmlElement(name = "SelectedBaggageList")
    private List<ValueAddedBaggageDetailEntity> selectedBaggageList;

    /**
     * 乘客姓名
     */
    public String getPassengerName() {
        return this.passengerName;
    }

    public void setPassengerName(String passengerName) {
        this.passengerName = passengerName;
    }

    /**
     * 已选行李额信息
     */
    public List<ValueAddedBaggageDetailEntity> getSelectedBaggageList() {
        return this.selectedBaggageList;
    }

    public void setSelectedBaggageList(List<ValueAddedBaggageDetailEntity> selectedBaggageList) {
        this.selectedBaggageList = selectedBaggageList;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final PassengerBaggageDetailEntity other = (PassengerBaggageDetailEntity)obj;
        return
            Objects.equal(this.passengerName, other.passengerName) && 
            Objects.equal(this.selectedBaggageList, other.selectedBaggageList);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.passengerName);
        result = 31 * result + Objects.hashCode(this.selectedBaggageList);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("passengerName", passengerName)
            .add("selectedBaggageList", selectedBaggageList)
            .toString();
    }
}