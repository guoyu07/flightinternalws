/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.flightcommon.v1;

import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.math.BigDecimal;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 存放不同乘客类型票价的实体
 */
@DtoDoc("存放不同乘客类型票价的实体")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "GaPassengerPriceInfo", propOrder = {
    "totalPrice",
    "flightPrice",
    "tax",
    "oil",
    "cnyTotalPrice",
    "cnyFlightPrice",
    "cnyTax",
    "cnyOil",
    "gaPassengerType",
    "unkownTax",
    "isContainsTax"
})
@SuppressWarnings("all")
public class GaPassengerPriceInfo  {

    private static final long serialVersionUID = 1L;

    public GaPassengerPriceInfo(
        BigDecimal totalPrice, 
        BigDecimal flightPrice, 
        BigDecimal tax, 
        BigDecimal oil, 
        BigDecimal cnyTotalPrice, 
        BigDecimal cnyFlightPrice, 
        BigDecimal cnyTax, 
        BigDecimal cnyOil, 
        GaPassengerType gaPassengerType, 
        String unkownTax, 
        boolean isContainsTax) {
        this.totalPrice = totalPrice;
        this.flightPrice = flightPrice;
        this.tax = tax;
        this.oil = oil;
        this.cnyTotalPrice = cnyTotalPrice;
        this.cnyFlightPrice = cnyFlightPrice;
        this.cnyTax = cnyTax;
        this.cnyOil = cnyOil;
        this.gaPassengerType = gaPassengerType;
        this.unkownTax = unkownTax;
        this.isContainsTax = isContainsTax;
    }

    public GaPassengerPriceInfo() {
    }

    @FieldDoc("机票含税、燃油的总价")
    @JsonProperty("TotalPrice")
    @XmlElement(name = "TotalPrice")
    private BigDecimal totalPrice;

    @FieldDoc("机票票面价")
    @JsonProperty("FlightPrice")
    @XmlElement(name = "FlightPrice")
    private BigDecimal flightPrice;

    @FieldDoc("税费")
    @JsonProperty("Tax")
    @XmlElement(name = "Tax")
    private BigDecimal tax;

    @FieldDoc("燃油费")
    @JsonProperty("Oil")
    @XmlElement(name = "Oil")
    private BigDecimal oil;

    @FieldDoc("机票含税、燃油的总价")
    @JsonProperty("CNYTotalPrice")
    @XmlElement(name = "CNYTotalPrice")
    private BigDecimal cnyTotalPrice;

    @FieldDoc("机票票面价")
    @JsonProperty("CNYFlightPrice")
    @XmlElement(name = "CNYFlightPrice")
    private BigDecimal cnyFlightPrice;

    @FieldDoc("税费")
    @JsonProperty("CNYTax")
    @XmlElement(name = "CNYTax")
    private BigDecimal cnyTax;

    @FieldDoc("燃油费")
    @JsonProperty("CNYOil")
    @XmlElement(name = "CNYOil")
    private BigDecimal cnyOil;

    @FieldDoc("价格适用乘客类型")
    @JsonProperty("GaPassengerType")
    @XmlElement(name = "GaPassengerType")
    private GaPassengerType gaPassengerType;

    @FieldDoc("未知税费描述")
    @JsonProperty("UnkownTax")
    @XmlElement(name = "UnkownTax")
    private String unkownTax;

    @FieldDoc("是否含税")
    @JsonProperty("IsContainsTax")
    @XmlElement(name = "IsContainsTax")
    private boolean isContainsTax;

    /**
     * 机票含税、燃油的总价
     */
    public BigDecimal getTotalPrice() {
        return this.totalPrice;
    }

    public void setTotalPrice(BigDecimal totalPrice) {
        this.totalPrice = totalPrice;
    }

    /**
     * 机票票面价
     */
    public BigDecimal getFlightPrice() {
        return this.flightPrice;
    }

    public void setFlightPrice(BigDecimal flightPrice) {
        this.flightPrice = flightPrice;
    }

    /**
     * 税费
     */
    public BigDecimal getTax() {
        return this.tax;
    }

    public void setTax(BigDecimal tax) {
        this.tax = tax;
    }

    /**
     * 燃油费
     */
    public BigDecimal getOil() {
        return this.oil;
    }

    public void setOil(BigDecimal oil) {
        this.oil = oil;
    }

    /**
     * 机票含税、燃油的总价
     */
    public BigDecimal getCnyTotalPrice() {
        return this.cnyTotalPrice;
    }

    public void setCnyTotalPrice(BigDecimal cnyTotalPrice) {
        this.cnyTotalPrice = cnyTotalPrice;
    }

    /**
     * 机票票面价
     */
    public BigDecimal getCnyFlightPrice() {
        return this.cnyFlightPrice;
    }

    public void setCnyFlightPrice(BigDecimal cnyFlightPrice) {
        this.cnyFlightPrice = cnyFlightPrice;
    }

    /**
     * 税费
     */
    public BigDecimal getCnyTax() {
        return this.cnyTax;
    }

    public void setCnyTax(BigDecimal cnyTax) {
        this.cnyTax = cnyTax;
    }

    /**
     * 燃油费
     */
    public BigDecimal getCnyOil() {
        return this.cnyOil;
    }

    public void setCnyOil(BigDecimal cnyOil) {
        this.cnyOil = cnyOil;
    }

    /**
     * 价格适用乘客类型
     */
    public GaPassengerType getGaPassengerType() {
        return this.gaPassengerType;
    }

    public void setGaPassengerType(GaPassengerType gaPassengerType) {
        this.gaPassengerType = gaPassengerType;
    }

    /**
     * 未知税费描述
     */
    public String getUnkownTax() {
        return this.unkownTax;
    }

    public void setUnkownTax(String unkownTax) {
        this.unkownTax = unkownTax;
    }

    /**
     * 是否含税
     */
    public boolean getIsContainsTax() {
        return this.isContainsTax;
    }

    public void setIsContainsTax(boolean isContainsTax) {
        this.isContainsTax = isContainsTax;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final GaPassengerPriceInfo other = (GaPassengerPriceInfo)obj;
        return
            Objects.equal(this.totalPrice, other.totalPrice) && 
            Objects.equal(this.flightPrice, other.flightPrice) && 
            Objects.equal(this.tax, other.tax) && 
            Objects.equal(this.oil, other.oil) && 
            Objects.equal(this.cnyTotalPrice, other.cnyTotalPrice) && 
            Objects.equal(this.cnyFlightPrice, other.cnyFlightPrice) && 
            Objects.equal(this.cnyTax, other.cnyTax) && 
            Objects.equal(this.cnyOil, other.cnyOil) && 
            Objects.equal(this.gaPassengerType, other.gaPassengerType) && 
            Objects.equal(this.unkownTax, other.unkownTax) && 
            Objects.equal(this.isContainsTax, other.isContainsTax);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.totalPrice);
        result = 31 * result + Objects.hashCode(this.flightPrice);
        result = 31 * result + Objects.hashCode(this.tax);
        result = 31 * result + Objects.hashCode(this.oil);
        result = 31 * result + Objects.hashCode(this.cnyTotalPrice);
        result = 31 * result + Objects.hashCode(this.cnyFlightPrice);
        result = 31 * result + Objects.hashCode(this.cnyTax);
        result = 31 * result + Objects.hashCode(this.cnyOil);
        result = 31 * result + Objects.hashCode(this.gaPassengerType);
        result = 31 * result + Objects.hashCode(this.unkownTax);
        result = 31 * result + Objects.hashCode(this.isContainsTax);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("totalPrice", totalPrice)
            .add("flightPrice", flightPrice)
            .add("tax", tax)
            .add("oil", oil)
            .add("cnyTotalPrice", cnyTotalPrice)
            .add("cnyFlightPrice", cnyFlightPrice)
            .add("cnyTax", cnyTax)
            .add("cnyOil", cnyOil)
            .add("gaPassengerType", gaPassengerType)
            .add("unkownTax", unkownTax)
            .add("isContainsTax", isContainsTax)
            .toString();
    }
}