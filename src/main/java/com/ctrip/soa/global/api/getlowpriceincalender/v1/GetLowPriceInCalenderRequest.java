/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.getlowpriceincalender.v1;

import com.ctrip.soa.global.api.comm.head.v1.Head;
import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 低价日历请求
 */
@DtoDoc("低价日历请求")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlRootElement(name = "GetLowPriceInCalenderRequest", namespace = "http://soa.ctrip.com/Global/API/GetLowPriceInCalender/v1")
@XmlType(name = "GetLowPriceInCalenderRequest", propOrder = {
    "head",
    "dDate",
    "dCity",
    "aCity",
    "offSet"
})
@SuppressWarnings("all")
public class GetLowPriceInCalenderRequest  {

    private static final long serialVersionUID = 1L;

    public GetLowPriceInCalenderRequest(
        Head head, 
        long dDate, 
        String dCity, 
        String aCity, 
        int offSet) {
        this.head = head;
        this.dDate = dDate;
        this.dCity = dCity;
        this.aCity = aCity;
        this.offSet = offSet;
    }

    public GetLowPriceInCalenderRequest() {
    }

    @FieldDoc("SOA2.0请求头部信息")
    @JsonProperty("Head")
    @XmlElement(name = "Head")
    private Head head;

    @FieldDoc("出发日期")
    @JsonProperty("DDate")
    @XmlElement(name = "DDate")
    private long dDate;

    @FieldDoc("出发城市三字码")
    @JsonProperty("DCity")
    @XmlElement(name = "DCity")
    private String dCity;

    @FieldDoc("到达城市三字码")
    @JsonProperty("ACity")
    @XmlElement(name = "ACity")
    private String aCity;

    @FieldDoc("为0时返回默认配置天数的低价数据（目前单程90天；往返-去程45天，回程2-8天），" +
            "大于0且查询单程时表示返回输 入日期正负offset天的数据（但不早于当前日期），" +
            "如输入2015/12/3，offset=3，则返回2015/11/30-2015/12/6的 数据，" +
            "若当前日期2015/12/1，返回2015/12/1-2015/12/6的数据.")
    @JsonProperty("OffSet")
    @XmlElement(name = "OffSet")
    private int offSet;

    /**
     * SOA2.0请求头部信息
     */
    public Head getHead() {
        return this.head;
    }

    public void setHead(Head head) {
        this.head = head;
    }

    /**
     * 出发日期
     */
    public long getDDate() {
        return this.dDate;
    }

    public void setDDate(long dDate) {
        this.dDate = dDate;
    }

    /**
     * 出发城市三字码
     */
    public String getDCity() {
        return this.dCity;
    }

    public void setDCity(String dCity) {
        this.dCity = dCity;
    }

    /**
     * 到达城市三字码
     */
    public String getACity() {
        return this.aCity;
    }

    public void setACity(String aCity) {
        this.aCity = aCity;
    }

    /**
     * 为0时返回默认配置天数的低价数据（目前单程90天；往返-去程45天，回程2-8天），
     *             大于0且查询单程时表示返回输 入日期正负offset天的数据（但不早于当前日期），
     *             如输入2015/12/3，offset=3，则返回2015/11/30-2015/12/6的 数据，
     *             若当前日期2015/12/1，返回2015/12/1-2015/12/6的数据.
     */
    public int getOffSet() {
        return this.offSet;
    }

    public void setOffSet(int offSet) {
        this.offSet = offSet;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final GetLowPriceInCalenderRequest other = (GetLowPriceInCalenderRequest)obj;
        return
            Objects.equal(this.head, other.head) && 
            Objects.equal(this.dDate, other.dDate) && 
            Objects.equal(this.dCity, other.dCity) && 
            Objects.equal(this.aCity, other.aCity) && 
            Objects.equal(this.offSet, other.offSet);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.head);
        result = 31 * result + Objects.hashCode(this.dDate);
        result = 31 * result + Objects.hashCode(this.dCity);
        result = 31 * result + Objects.hashCode(this.aCity);
        result = 31 * result + Objects.hashCode(this.offSet);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("head", head)
            .add("dDate", dDate)
            .add("dCity", dCity)
            .add("aCity", aCity)
            .add("offSet", offSet)
            .toString();
    }
}