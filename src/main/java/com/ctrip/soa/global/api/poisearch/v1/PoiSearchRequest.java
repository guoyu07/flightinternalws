/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.poisearch.v1;

import com.ctrip.soa.global.api.comm.head.v1.Head;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.math.BigDecimal;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlRootElement(name = "PoiSearchRequest", namespace = "http://soa.ctrip.com/Global/API/PoiSearch/v1")
@XmlType(name = "PoiSearchRequest", propOrder = {
    "head",
    "key",
    "mode",
    "lat",
    "lon"
})
@SuppressWarnings("all")
public class PoiSearchRequest  {

    private static final long serialVersionUID = 1L;

    public PoiSearchRequest(
        Head head, 
        String key, 
        int mode, 
        BigDecimal lat, 
        BigDecimal lon) {
        this.head = head;
        this.key = key;
        this.mode = mode;
        this.lat = lat;
        this.lon = lon;
    }

    public PoiSearchRequest() {
    }

    @JsonProperty("Head")
    @XmlElement(name = "Head")
    private Head head;

    @FieldDoc("查询字符串 mode为3时候，传的是城市ID，城市ID必须大于0")
    @JsonProperty("Key")
    @XmlElement(name = "Key")
    private String key;

    @FieldDoc("查询模式 0 关键字查询 1 经度纬度查询 2关键字查询 只搜机场-给航班动态用 3根据城市ID获取城市POI数据，只获取有机场城市，其他返回报文的result为空")
    @JsonProperty("Mode")
    @XmlElement(name = "Mode")
    private int mode;

    @FieldDoc("纬度")
    @JsonProperty("Lat")
    @XmlElement(name = "Lat")
    private BigDecimal lat;

    @FieldDoc("经度")
    @JsonProperty("Lon")
    @XmlElement(name = "Lon")
    private BigDecimal lon;

    public Head getHead() {
        return this.head;
    }

    public void setHead(Head head) {
        this.head = head;
    }

    /**
     * 查询字符串 mode为3时候，传的是城市ID，城市ID必须大于0
     */
    public String getKey() {
        return this.key;
    }

    public void setKey(String key) {
        this.key = key;
    }

    /**
     * 查询模式 0 关键字查询 1 经度纬度查询 2关键字查询 只搜机场-给航班动态用 3根据城市ID获取城市POI数据，只获取有机场城市，其他返回报文的result为空
     */
    public int getMode() {
        return this.mode;
    }

    public void setMode(int mode) {
        this.mode = mode;
    }

    /**
     * 纬度
     */
    public BigDecimal getLat() {
        return this.lat;
    }

    public void setLat(BigDecimal lat) {
        this.lat = lat;
    }

    /**
     * 经度
     */
    public BigDecimal getLon() {
        return this.lon;
    }

    public void setLon(BigDecimal lon) {
        this.lon = lon;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final PoiSearchRequest other = (PoiSearchRequest)obj;
        return
            Objects.equal(this.head, other.head) && 
            Objects.equal(this.key, other.key) && 
            Objects.equal(this.mode, other.mode) && 
            Objects.equal(this.lat, other.lat) && 
            Objects.equal(this.lon, other.lon);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.head);
        result = 31 * result + Objects.hashCode(this.key);
        result = 31 * result + Objects.hashCode(this.mode);
        result = 31 * result + Objects.hashCode(this.lat);
        result = 31 * result + Objects.hashCode(this.lon);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("head", head)
            .add("key", key)
            .add("mode", mode)
            .add("lat", lat)
            .add("lon", lon)
            .toString();
    }
}