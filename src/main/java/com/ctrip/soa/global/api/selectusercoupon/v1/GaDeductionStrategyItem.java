/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.selectusercoupon.v1;

import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.math.BigDecimal;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 优惠券优惠策略
 */
@DtoDoc("优惠券优惠策略")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "GaDeductionStrategyItem", propOrder = {
    "startAmount",
    "deductionType",
    "deductionAmount"
})
@SuppressWarnings("all")
public class GaDeductionStrategyItem  {

    private static final long serialVersionUID = 1L;

    public GaDeductionStrategyItem(
        BigDecimal startAmount, 
        Integer deductionType, 
        BigDecimal deductionAmount) {
        this.startAmount = startAmount;
        this.deductionType = deductionType;
        this.deductionAmount = deductionAmount;
    }

    public GaDeductionStrategyItem() {
    }

    @FieldDoc("满金额")
    @JsonProperty("StartAmount")
    @XmlElement(name = "StartAmount", nillable = true)
    private BigDecimal startAmount;

    @FieldDoc("优惠扣减类型(由业务来划分类型，人为操作不能作为最终参考值)" +
" +
 "0-金额 2-按条件(金额) 满xx元优惠xx元" +
"1-百分比 3-按条件(百分比) 满xx元优惠百分之xx")
    @JsonProperty("DeductionType")
    @XmlElement(name = "DeductionType", nillable = true)
    private Integer deductionType;

    @FieldDoc("优惠金额或百分比")
    @JsonProperty("DeductionAmount")
    @XmlElement(name = "DeductionAmount", nillable = true)
    private BigDecimal deductionAmount;

    /**
     * 满金额
     */
    public BigDecimal getStartAmount() {
        return this.startAmount;
    }

    public void setStartAmount(BigDecimal startAmount) {
        this.startAmount = startAmount;
    }

    /**
     * 优惠扣减类型(由业务来划分类型，人为操作不能作为最终参考值)
     * 
     *  0-金额 2-按条件(金额) 满xx元优惠xx元
     * 1-百分比 3-按条件(百分比) 满xx元优惠百分之xx
     */
    public Integer getDeductionType() {
        return this.deductionType;
    }

    public void setDeductionType(Integer deductionType) {
        this.deductionType = deductionType;
    }

    /**
     * 优惠金额或百分比
     */
    public BigDecimal getDeductionAmount() {
        return this.deductionAmount;
    }

    public void setDeductionAmount(BigDecimal deductionAmount) {
        this.deductionAmount = deductionAmount;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final GaDeductionStrategyItem other = (GaDeductionStrategyItem)obj;
        return
            Objects.equal(this.startAmount, other.startAmount) && 
            Objects.equal(this.deductionType, other.deductionType) && 
            Objects.equal(this.deductionAmount, other.deductionAmount);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.startAmount);
        result = 31 * result + Objects.hashCode(this.deductionType);
        result = 31 * result + Objects.hashCode(this.deductionAmount);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("startAmount", startAmount)
            .add("deductionType", deductionType)
            .add("deductionAmount", deductionAmount)
            .toString();
    }
}