// Generated by eBay Common SDK Platform
package com.ctrip.soa.global.api.flightcommon.v1;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlEnumValue;

/**
 * 机票支付价格类型
 */
@XmlType(name = "FlightPriceType")
@XmlEnum
@SuppressWarnings("all")
public enum FlightPriceType {

    /**
     * 机票其他类型价格，未知
     */
    @XmlEnumValue("FNON")
    FNON(0, "FNON"),

    /**
     * 机票成人价格，包含税费
     */
    @XmlEnumValue("FAP")
    FAP(1, "FAP"),

    /**
     * 机票成人票价
     */
    @XmlEnumValue("FATP")
    FATP(2, "FATP"),

    /**
     * 机票成人税费价格
     */
    @XmlEnumValue("FATFP")
    FATFP(3, "FATFP"),

    /**
     * 机票儿童价格，包含税费
     */
    @XmlEnumValue("FCP")
    FCP(4, "FCP"),

    /**
     * 机票儿童票价
     */
    @XmlEnumValue("FCTP")
    FCTP(5, "FCTP"),

    /**
     * 机票儿童税费价格
     */
    @XmlEnumValue("FCTFP")
    FCTFP(6, "FCTFP"),

    /**
     * 机票婴儿价格，包含税费
     */
    @XmlEnumValue("FIP")
    FIP(7, "FIP"),

    /**
     * 机票婴儿票价
     */
    @XmlEnumValue("FITP")
    FITP(8, "FITP"),

    /**
     * 机票婴儿税费价
     */
    @XmlEnumValue("FITFP")
    FITFP(9, "FITFP"),

    /**
     * 机票绑定优惠券价格
     */
    @XmlEnumValue("FBPC")
    FBPC(10, "FBPC"),

    /**
     * 机票单卖优惠券价格
     */
    @XmlEnumValue("FSPC")
    FSPC(11, "FSPC"),

    /**
     * 机票国际旅行险价格
     */
    @XmlEnumValue("FITI")
    FITI(12, "FITI"),

    /**
     * 机票意外险价格
     */
    @XmlEnumValue("FAII")
    FAII(13, "FAII"),

    /**
     * 机票休息室价格
     */
    @XmlEnumValue("FVL")
    FVL(14, "FVL"),

    /**
     * 机票行李额价格
     */
    @XmlEnumValue("FBA")
    FBA(15, "FBA"),

    /**
     * 机票配送价格
     */
    @XmlEnumValue("FDF")
    FDF(16, "FDF"),

    /**
     * 机票使用优惠券价格
     */
    @XmlEnumValue("FUPC")
    FUPC(17, "FUPC"),

    /**
     * 机票差价
     */
    @XmlEnumValue("FPDF")
    FPDF(18, "FPDF"),

    /**
     * 改期服务费
     */
    @XmlEnumValue("FCSF")
    FCSF(19, "FCSF"),

    /**
     * 机票升舱服务费
     */
    @XmlEnumValue("FCUF")
    FCUF(20, "FCUF"),

    /**
     * 机票税费差价
     */
    @XmlEnumValue("FTDF")
    FTDF(21, "FTDF");

    private final int intValue;
    private final String value;

    FlightPriceType(int intValue, String value) {
        this.intValue = intValue;
        this.value = value;
    }

    public int getValue() {
        return intValue;
    }

    @JsonValue
    public String value() {
        return value;
    }

    @JsonCreator
    public static FlightPriceType fromValue(String v) {
        for (FlightPriceType e: FlightPriceType.values()) {
            if (e.value.equals(v)) {
                return e;
            }
        }
        throw new IllegalArgumentException(v);
    }

    public static FlightPriceType findByValue(int value) {
        switch (value) {
            case 0:
                return FNON;
            case 1:
                return FAP;
            case 2:
                return FATP;
            case 3:
                return FATFP;
            case 4:
                return FCP;
            case 5:
                return FCTP;
            case 6:
                return FCTFP;
            case 7:
                return FIP;
            case 8:
                return FITP;
            case 9:
                return FITFP;
            case 10:
                return FBPC;
            case 11:
                return FSPC;
            case 12:
                return FITI;
            case 13:
                return FAII;
            case 14:
                return FVL;
            case 15:
                return FBA;
            case 16:
                return FDF;
            case 17:
                return FUPC;
            case 18:
                return FPDF;
            case 19:
                return FCSF;
            case 20:
                return FCUF;
            case 21:
                return FTDF;
            default:
                return null;
        }
    }
}