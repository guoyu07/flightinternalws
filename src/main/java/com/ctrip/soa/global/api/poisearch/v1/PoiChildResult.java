/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.poisearch.v1;

import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.math.BigDecimal;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * POI结果子类型
 */
@DtoDoc("POI结果子类型")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PoiChildResult", propOrder = {
    "id",
    "name",
    "cityCode",
    "cityName",
    "provinceName",
    "provinceCode",
    "countryName",
    "airportCode",
    "dataType",
    "distance",
    "index",
    "isDomestic",
    "airportShortName",
    "cityEName"
})
@SuppressWarnings("all")
public class PoiChildResult  {

    private static final long serialVersionUID = 1L;

    public PoiChildResult(
        long id, 
        String name, 
        String cityCode, 
        String cityName, 
        String provinceName, 
        String provinceCode, 
        String countryName, 
        String airportCode, 
        int dataType, 
        BigDecimal distance, 
        int index, 
        int isDomestic, 
        String airportShortName, 
        String cityEName) {
        this.id = id;
        this.name = name;
        this.cityCode = cityCode;
        this.cityName = cityName;
        this.provinceName = provinceName;
        this.provinceCode = provinceCode;
        this.countryName = countryName;
        this.airportCode = airportCode;
        this.dataType = dataType;
        this.distance = distance;
        this.index = index;
        this.isDomestic = isDomestic;
        this.airportShortName = airportShortName;
        this.cityEName = cityEName;
    }

    public PoiChildResult() {
    }

    @FieldDoc("ID值")
    @JsonProperty("ID")
    @XmlElement(name = "ID")
    private long id;

    @FieldDoc("当前语言搜索项名称，当当前语言不存在时候，用英文替换")
    @JsonProperty("Name")
    @XmlElement(name = "Name")
    private String name;

    @FieldDoc("城市三字码")
    @JsonProperty("CityCode")
    @XmlElement(name = "CityCode")
    private String cityCode;

    @FieldDoc("城市名称")
    @JsonProperty("CityName")
    @XmlElement(name = "CityName")
    private String cityName;

    @FieldDoc("省的当前语言名称，不存在用英文名称代替")
    @JsonProperty("ProvinceName")
    @XmlElement(name = "ProvinceName")
    private String provinceName;

    @FieldDoc("省二代")
    @JsonProperty("ProvinceCode")
    @XmlElement(name = "ProvinceCode")
    private String provinceCode;

    @FieldDoc("当前语言国家名称，不存在用英文替换")
    @JsonProperty("CountryName")
    @XmlElement(name = "CountryName")
    private String countryName;

    @FieldDoc("机场三字码")
    @JsonProperty("AirportCode")
    @XmlElement(name = "AirportCode")
    private String airportCode;

    @FieldDoc("数据类型 1 国家 2省 3有机场城市 4 无机场城市 5机场 6 景点 7周边地区")
    @JsonProperty("DataType")
    @XmlElement(name = "DataType")
    private int dataType;

    @FieldDoc("距离，单位km，-1时候 代表改字段无效")
    @JsonProperty("Distance")
    @XmlElement(name = "Distance")
    private BigDecimal distance;

    @FieldDoc("第几个")
    @JsonProperty("Index")
    @XmlElement(name = "Index")
    private int index;

    @FieldDoc("是否是国内 1国内 0国际")
    @JsonProperty("IsDomestic")
    @XmlElement(name = "IsDomestic")
    private int isDomestic;

    @FieldDoc("机场短名称")
    @JsonProperty("AirportShortName")
    @XmlElement(name = "AirportShortName")
    private String airportShortName;

    @FieldDoc("城市英文名称")
    @JsonProperty("CityEName")
    @XmlElement(name = "CityEName")
    private String cityEName;

    /**
     * ID值
     */
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    /**
     * 当前语言搜索项名称，当当前语言不存在时候，用英文替换
     */
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    /**
     * 城市三字码
     */
    public String getCityCode() {
        return this.cityCode;
    }

    public void setCityCode(String cityCode) {
        this.cityCode = cityCode;
    }

    /**
     * 城市名称
     */
    public String getCityName() {
        return this.cityName;
    }

    public void setCityName(String cityName) {
        this.cityName = cityName;
    }

    /**
     * 省的当前语言名称，不存在用英文名称代替
     */
    public String getProvinceName() {
        return this.provinceName;
    }

    public void setProvinceName(String provinceName) {
        this.provinceName = provinceName;
    }

    /**
     * 省二代
     */
    public String getProvinceCode() {
        return this.provinceCode;
    }

    public void setProvinceCode(String provinceCode) {
        this.provinceCode = provinceCode;
    }

    /**
     * 当前语言国家名称，不存在用英文替换
     */
    public String getCountryName() {
        return this.countryName;
    }

    public void setCountryName(String countryName) {
        this.countryName = countryName;
    }

    /**
     * 机场三字码
     */
    public String getAirportCode() {
        return this.airportCode;
    }

    public void setAirportCode(String airportCode) {
        this.airportCode = airportCode;
    }

    /**
     * 数据类型 1 国家 2省 3有机场城市 4 无机场城市 5机场 6 景点 7周边地区
     */
    public int getDataType() {
        return this.dataType;
    }

    public void setDataType(int dataType) {
        this.dataType = dataType;
    }

    /**
     * 距离，单位km，-1时候 代表改字段无效
     */
    public BigDecimal getDistance() {
        return this.distance;
    }

    public void setDistance(BigDecimal distance) {
        this.distance = distance;
    }

    /**
     * 第几个
     */
    public int getIndex() {
        return this.index;
    }

    public void setIndex(int index) {
        this.index = index;
    }

    /**
     * 是否是国内 1国内 0国际
     */
    public int getIsDomestic() {
        return this.isDomestic;
    }

    public void setIsDomestic(int isDomestic) {
        this.isDomestic = isDomestic;
    }

    /**
     * 机场短名称
     */
    public String getAirportShortName() {
        return this.airportShortName;
    }

    public void setAirportShortName(String airportShortName) {
        this.airportShortName = airportShortName;
    }

    /**
     * 城市英文名称
     */
    public String getCityEName() {
        return this.cityEName;
    }

    public void setCityEName(String cityEName) {
        this.cityEName = cityEName;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final PoiChildResult other = (PoiChildResult)obj;
        return
            Objects.equal(this.id, other.id) && 
            Objects.equal(this.name, other.name) && 
            Objects.equal(this.cityCode, other.cityCode) && 
            Objects.equal(this.cityName, other.cityName) && 
            Objects.equal(this.provinceName, other.provinceName) && 
            Objects.equal(this.provinceCode, other.provinceCode) && 
            Objects.equal(this.countryName, other.countryName) && 
            Objects.equal(this.airportCode, other.airportCode) && 
            Objects.equal(this.dataType, other.dataType) && 
            Objects.equal(this.distance, other.distance) && 
            Objects.equal(this.index, other.index) && 
            Objects.equal(this.isDomestic, other.isDomestic) && 
            Objects.equal(this.airportShortName, other.airportShortName) && 
            Objects.equal(this.cityEName, other.cityEName);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.id);
        result = 31 * result + Objects.hashCode(this.name);
        result = 31 * result + Objects.hashCode(this.cityCode);
        result = 31 * result + Objects.hashCode(this.cityName);
        result = 31 * result + Objects.hashCode(this.provinceName);
        result = 31 * result + Objects.hashCode(this.provinceCode);
        result = 31 * result + Objects.hashCode(this.countryName);
        result = 31 * result + Objects.hashCode(this.airportCode);
        result = 31 * result + Objects.hashCode(this.dataType);
        result = 31 * result + Objects.hashCode(this.distance);
        result = 31 * result + Objects.hashCode(this.index);
        result = 31 * result + Objects.hashCode(this.isDomestic);
        result = 31 * result + Objects.hashCode(this.airportShortName);
        result = 31 * result + Objects.hashCode(this.cityEName);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("id", id)
            .add("name", name)
            .add("cityCode", cityCode)
            .add("cityName", cityName)
            .add("provinceName", provinceName)
            .add("provinceCode", provinceCode)
            .add("countryName", countryName)
            .add("airportCode", airportCode)
            .add("dataType", dataType)
            .add("distance", distance)
            .add("index", index)
            .add("isDomestic", isDomestic)
            .add("airportShortName", airportShortName)
            .add("cityEName", cityEName)
            .toString();
    }
}