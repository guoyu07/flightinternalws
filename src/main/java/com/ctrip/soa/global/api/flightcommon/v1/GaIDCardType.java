// Generated by eBay Common SDK Platform
package com.ctrip.soa.global.api.flightcommon.v1;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlEnumValue;

/**
 * 证件类型
 */
@XmlType(name = "GaIDCardType")
@XmlEnum
@SuppressWarnings("all")
public enum GaIDCardType {

    /**
     * 身份证
     */
    @XmlEnumValue("ID")
    ID(0, "ID"),

    /**
     * 护照
     */
    @XmlEnumValue("PASSPORT")
    PASSPORT(1, "PASSPORT"),

    /**
     * 学生证
     */
    @XmlEnumValue("STC")
    STC(2, "STC"),

    /**
     * 军人
     */
    @XmlEnumValue("MTC")
    MTC(3, "MTC"),

    /**
     * 驾驶证
     */
    @XmlEnumValue("DRLC")
    DRLC(4, "DRLC"),

    /**
     * 回乡证
     */
    @XmlEnumValue("RP")
    RP(5, "RP"),

    /**
     * 台胞证
     */
    @XmlEnumValue("MTP")
    MTP(6, "MTP"),

    /**
     * 港澳通行证
     */
    @XmlEnumValue("HMP")
    HMP(7, "HMP"),

    /**
     * 国际海员证
     */
    @XmlEnumValue("ISC")
    ISC(8, "ISC"),

    /**
     * 外国人永久拘留证
     */
    @XmlEnumValue("PRC")
    PRC(9, "PRC"),

    /**
     * 出生证明
     */
    @XmlEnumValue("BRC")
    BRC(10, "BRC"),

    /**
     * 其他
     */
    @XmlEnumValue("OTHER")
    OTHER(11, "OTHER"),

    /**
     * 台湾通行证
     */
    @XmlEnumValue("TP")
    TP(12, "TP");

    private final int intValue;
    private final String value;

    GaIDCardType(int intValue, String value) {
        this.intValue = intValue;
        this.value = value;
    }

    public int getValue() {
        return intValue;
    }

    @JsonValue
    public String value() {
        return value;
    }

    @JsonCreator
    public static GaIDCardType fromValue(String v) {
        for (GaIDCardType e: GaIDCardType.values()) {
            if (e.value.equals(v)) {
                return e;
            }
        }
        throw new IllegalArgumentException(v);
    }

    public static GaIDCardType findByValue(int value) {
        switch (value) {
            case 0:
                return ID;
            case 1:
                return PASSPORT;
            case 2:
                return STC;
            case 3:
                return MTC;
            case 4:
                return DRLC;
            case 5:
                return RP;
            case 6:
                return MTP;
            case 7:
                return HMP;
            case 8:
                return ISC;
            case 9:
                return PRC;
            case 10:
                return BRC;
            case 11:
                return OTHER;
            case 12:
                return TP;
            default:
                return null;
        }
    }
}