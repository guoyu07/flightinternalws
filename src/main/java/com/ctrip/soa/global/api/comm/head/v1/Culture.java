// Generated by eBay Common SDK Platform
package com.ctrip.soa.global.api.comm.head.v1;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlEnumValue;

/**
 * 当前文化
 */
@XmlType(name = "Culture")
@XmlEnum
@SuppressWarnings("all")
public enum Culture {

    @XmlEnumValue("en_us")
    en_us(0, "en_us"),

    @XmlEnumValue("zh_hk")
    zh_hk(1, "zh_hk"),

    @XmlEnumValue("en_hk")
    en_hk(2, "en_hk"),

    @XmlEnumValue("ko_kr")
    ko_kr(3, "ko_kr"),

    @XmlEnumValue("ja_jp")
    ja_jp(4, "ja_jp"),

    @XmlEnumValue("en_sg")
    en_sg(5, "en_sg"),

    @XmlEnumValue("de_de")
    de_de(6, "de_de"),

    @XmlEnumValue("fr_fr")
    fr_fr(7, "fr_fr"),

    @XmlEnumValue("es_es")
    es_es(8, "es_es"),

    @XmlEnumValue("ru_ru")
    ru_ru(9, "ru_ru"),

    @XmlEnumValue("id_id")
    id_id(10, "id_id"),

    @XmlEnumValue("th_th")
    th_th(11, "th_th"),

    @XmlEnumValue("ms_my")
    ms_my(12, "ms_my"),

    @XmlEnumValue("zh_cn")
    zh_cn(13, "zh_cn"),

    @XmlEnumValue("zh_tw")
    zh_tw(14, "zh_tw");

    private final int intValue;
    private final String value;

    Culture(int intValue, String value) {
        this.intValue = intValue;
        this.value = value;
    }

    public int getValue() {
        return intValue;
    }

    @JsonValue
    public String value() {
        return value;
    }

    @JsonCreator
    public static Culture fromValue(String v) {
        for (Culture e: Culture.values()) {
            if (e.value.equals(v)) {
                return e;
            }
        }
        throw new IllegalArgumentException(v);
    }

    public static Culture findByValue(int value) {
        switch (value) {
            case 0:
                return en_us;
            case 1:
                return zh_hk;
            case 2:
                return en_hk;
            case 3:
                return ko_kr;
            case 4:
                return ja_jp;
            case 5:
                return en_sg;
            case 6:
                return de_de;
            case 7:
                return fr_fr;
            case 8:
                return es_es;
            case 9:
                return ru_ru;
            case 10:
                return id_id;
            case 11:
                return th_th;
            case 12:
                return ms_my;
            case 13:
                return zh_cn;
            case 14:
                return zh_tw;
            default:
                return null;
        }
    }
}