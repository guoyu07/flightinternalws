/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.flight.union_searchflightsws.v1;

import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementWrapper;
import javax.xml.bind.annotation.XmlType;

@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PriceType", propOrder = {
    "priceUnitID",
    "routeSearchToken",
    "flyerFlag",
    "baggageList"
})
@SuppressWarnings("all")
public class PriceType  {

    private static final long serialVersionUID = 1L;

    public PriceType(
        String priceUnitID, 
        String routeSearchToken, 
        String flyerFlag, 
        List<BaggageType> baggageList) {
        this.priceUnitID = priceUnitID;
        this.routeSearchToken = routeSearchToken;
        this.flyerFlag = flyerFlag;
        this.baggageList = baggageList;
    }

    public PriceType() {
    }

    @FieldDoc("Price unique ID")
    @JsonProperty("PriceUnitID")
    @XmlElement(name = "PriceUnitID")
    private String priceUnitID;

    @FieldDoc("Current price complete route (flight/class)")
    @JsonProperty("RouteSearchToken")
    @XmlElement(name = "RouteSearchToken")
    private String routeSearchToken;

    @FieldDoc("Flyer flight logo")
    @JsonProperty("FlyerFlag")
    @XmlElement(name = "FlyerFlag")
    private String flyerFlag;

    @JsonProperty("BaggageList")
    @XmlElement(name = "Baggage")
    @XmlElementWrapper(name = "BaggageList")
    private List<BaggageType> baggageList;

    /**
     * Price unique ID
     */
    public String getPriceUnitID() {
        return this.priceUnitID;
    }

    public void setPriceUnitID(String priceUnitID) {
        this.priceUnitID = priceUnitID;
    }

    /**
     * Current price complete route (flight/class)
     */
    public String getRouteSearchToken() {
        return this.routeSearchToken;
    }

    public void setRouteSearchToken(String routeSearchToken) {
        this.routeSearchToken = routeSearchToken;
    }

    /**
     * Flyer flight logo
     */
    public String getFlyerFlag() {
        return this.flyerFlag;
    }

    public void setFlyerFlag(String flyerFlag) {
        this.flyerFlag = flyerFlag;
    }

    public List<BaggageType> getBaggageList() {
        return this.baggageList;
    }

    public void setBaggageList(List<BaggageType> baggageList) {
        this.baggageList = baggageList;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final PriceType other = (PriceType)obj;
        return
            Objects.equal(this.priceUnitID, other.priceUnitID) && 
            Objects.equal(this.routeSearchToken, other.routeSearchToken) && 
            Objects.equal(this.flyerFlag, other.flyerFlag) && 
            Objects.equal(this.baggageList, other.baggageList);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.priceUnitID);
        result = 31 * result + Objects.hashCode(this.routeSearchToken);
        result = 31 * result + Objects.hashCode(this.flyerFlag);
        result = 31 * result + Objects.hashCode(this.baggageList);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("priceUnitID", priceUnitID)
            .add("routeSearchToken", routeSearchToken)
            .add("flyerFlag", flyerFlag)
            .add("baggageList", baggageList)
            .toString();
    }
}