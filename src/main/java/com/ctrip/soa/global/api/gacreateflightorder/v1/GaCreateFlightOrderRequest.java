/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.gacreateflightorder.v1;

import com.ctrip.soa.global.api.comm.head.v1.Head;
import com.ctrip.soa.global.api.flightcommon.v1.FlightOrderCouponInfo;
import com.ctrip.soa.global.api.flightcommon.v1.FlightSearchInfo;
import com.ctrip.soa.global.api.flightcommon.v1.GaAlertMessageType;
import com.ctrip.soa.global.api.flightcommon.v1.GaContactInfo;
import com.ctrip.soa.global.api.flightcommon.v1.GaDeliveryInfo;
import com.ctrip.soa.global.api.flightcommon.v1.GaFlightPaymentInfo;
import com.ctrip.soa.global.api.flightcommon.v1.GaPassengerInfo;
import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 国内机票提交订单
 */
@DtoDoc("国内机票提交订单")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlRootElement(name = "GaCreateFlightOrderRequest", namespace = "http://soa.ctrip.com/Global/API/GaCreateFlightOrder/v1")
@XmlType(name = "GaCreateFlightOrderRequest", propOrder = {
    "head",
    "isQuickBooking",
    "isRealTimePay",
    "packageAttachList",
    "orderID",
    "productID",
    "flightPassengerList",
    "contactInfo",
    "verifyTokenNumber",
    "verifyPhoneNumber",
    "verifyCode",
    "isVerify",
    "invoiceInfoList",
    "orderRemark",
    "flightSearchInfo",
    "couponInfo",
    "deliveryInfo",
    "paymentInfo",
    "alertMessageTypeList",
    "allianceInfo",
    "xProductInfoList",
    "isVerifyRepeatOrder",
    "serverFrom",
    "abTestingVersions",
    "rmsToken"
})
@SuppressWarnings("all")
public class GaCreateFlightOrderRequest  {

    private static final long serialVersionUID = 1L;

    public GaCreateFlightOrderRequest(
        Head head, 
        boolean isQuickBooking, 
        boolean isRealTimePay, 
        List<PackageAttachItem> packageAttachList, 
        long orderID, 
        String productID, 
        List<GaPassengerInfo> flightPassengerList, 
        GaContactInfo contactInfo, 
        String verifyTokenNumber, 
        String verifyPhoneNumber, 
        String verifyCode, 
        boolean isVerify, 
        List<String> invoiceInfoList, 
        String orderRemark, 
        FlightSearchInfo flightSearchInfo, 
        FlightOrderCouponInfo couponInfo, 
        GaDeliveryInfo deliveryInfo, 
        GaFlightPaymentInfo paymentInfo, 
        List<GaAlertMessageType> alertMessageTypeList, 
        AllianceInfo allianceInfo, 
        List<XProductInfo> xProductInfoList, 
        int isVerifyRepeatOrder, 
        String serverFrom, 
        String abTestingVersions, 
        String rmsToken) {
        this.head = head;
        this.isQuickBooking = isQuickBooking;
        this.isRealTimePay = isRealTimePay;
        this.packageAttachList = packageAttachList;
        this.orderID = orderID;
        this.productID = productID;
        this.flightPassengerList = flightPassengerList;
        this.contactInfo = contactInfo;
        this.verifyTokenNumber = verifyTokenNumber;
        this.verifyPhoneNumber = verifyPhoneNumber;
        this.verifyCode = verifyCode;
        this.isVerify = isVerify;
        this.invoiceInfoList = invoiceInfoList;
        this.orderRemark = orderRemark;
        this.flightSearchInfo = flightSearchInfo;
        this.couponInfo = couponInfo;
        this.deliveryInfo = deliveryInfo;
        this.paymentInfo = paymentInfo;
        this.alertMessageTypeList = alertMessageTypeList;
        this.allianceInfo = allianceInfo;
        this.xProductInfoList = xProductInfoList;
        this.isVerifyRepeatOrder = isVerifyRepeatOrder;
        this.serverFrom = serverFrom;
        this.abTestingVersions = abTestingVersions;
        this.rmsToken = rmsToken;
    }

    public GaCreateFlightOrderRequest() {
    }

    @FieldDoc("SOA2.0请求头部信息")
    @JsonProperty("Head")
    @XmlElement(name = "Head")
    private Head head;

    @FieldDoc("是否快速预订")
    @JsonProperty("IsQuickBooking")
    @XmlElement(name = "IsQuickBooking")
    private boolean isQuickBooking;

    @FieldDoc("是否实时支付")
    @JsonProperty("IsRealTimePay")
    @XmlElement(name = "IsRealTimePay")
    private boolean isRealTimePay;

    @FieldDoc("捆绑套餐信息")
    @JsonProperty("PackageAttachList")
    @XmlElement(name = "PackageAttachList")
    private List<PackageAttachItem> packageAttachList;

    @FieldDoc("订单ID")
    @JsonProperty("OrderID")
    @XmlElement(name = "OrderID")
    private long orderID;

    @FieldDoc("国内机票倒查唯一KEY")
    @JsonProperty("ProductID")
    @XmlElement(name = "ProductID")
    private String productID;

    @FieldDoc("常旅客")
    @JsonProperty("FlightPassengerList")
    @XmlElement(name = "FlightPassengerList")
    private List<GaPassengerInfo> flightPassengerList;

    @FieldDoc("联系人信息")
    @JsonProperty("ContactInfo")
    @XmlElement(name = "ContactInfo")
    private GaContactInfo contactInfo;

    @FieldDoc("运价满仓检查TokenNumber")
    @JsonProperty("VerifyTokenNumber")
    @XmlElement(name = "VerifyTokenNumber")
    private String verifyTokenNumber;

    @FieldDoc("验证码手机号")
    @JsonProperty("VerifyPhoneNumber")
    @XmlElement(name = "VerifyPhoneNumber")
    private String verifyPhoneNumber;

    @FieldDoc("验证码")
    @JsonProperty("VerifyCode")
    @XmlElement(name = "VerifyCode")
    private String verifyCode;

    @FieldDoc("是否需要满仓检查")
    @JsonProperty("IsVerify")
    @XmlElement(name = "IsVerify")
    private boolean isVerify;

    @FieldDoc("发票Title")
    @JsonProperty("InvoiceInfoList")
    @XmlElement(name = "InvoiceInfoList")
    private List<String> invoiceInfoList;

    @FieldDoc("订单备注")
    @JsonProperty("OrderRemark")
    @XmlElement(name = "OrderRemark")
    private String orderRemark;

    @FieldDoc("查询、返查关键信息")
    @JsonProperty("FlightSearchInfo")
    @XmlElement(name = "FlightSearchInfo")
    private FlightSearchInfo flightSearchInfo;

    @FieldDoc("优惠券信息")
    @JsonProperty("CouponInfo")
    @XmlElement(name = "CouponInfo")
    private FlightOrderCouponInfo couponInfo;

    @FieldDoc("配送信息")
    @JsonProperty("DeliveryInfo")
    @XmlElement(name = "DeliveryInfo")
    private GaDeliveryInfo deliveryInfo;

    @FieldDoc("支付信息")
    @JsonProperty("PaymentInfo")
    @XmlElement(name = "PaymentInfo")
    private GaFlightPaymentInfo paymentInfo;

    @FieldDoc("记录客户端提示过的消息")
    @JsonProperty("AlertMessageTypeList")
    @XmlElement(name = "AlertMessageTypeList")
    private List<GaAlertMessageType> alertMessageTypeList;

    @FieldDoc("分销")
    @JsonProperty("AllianceInfo")
    @XmlElement(name = "AllianceInfo")
    private AllianceInfo allianceInfo;

    @FieldDoc("休息室预定列表（单程、返程）")
    @JsonProperty("XProductInfoList")
    @XmlElement(name = "XProductInfoList")
    private List<XProductInfo> xProductInfoList;

    @FieldDoc("是否需要验证重复订单:0不需要,1需要")
    @JsonProperty("IsVerifyRepeatOrder")
    @XmlElement(name = "IsVerifyRepeatOrder")
    private int isVerifyRepeatOrder;

    @FieldDoc("客户端来源，传值就用，不传就服务端拼")
    @JsonProperty("ServerFrom")
    @XmlElement(name = "ServerFrom")
    private String serverFrom;

    @FieldDoc("客户端ABTesting版本标识，多个实验叠加时用{M:72,160224_enf_ARUIS:C;}|{M:73,160225_enf_ARUIS:B;}分隔，如，传值就用")
    @JsonProperty("ABTestingVersions")
    @XmlElement(name = "ABTestingVersions")
    private String abTestingVersions;

    @FieldDoc("设备指纹（风控用）")
    @JsonProperty("RmsToken")
    @XmlElement(name = "RmsToken")
    private String rmsToken;

    /**
     * SOA2.0请求头部信息
     */
    public Head getHead() {
        return this.head;
    }

    public void setHead(Head head) {
        this.head = head;
    }

    /**
     * 是否快速预订
     */
    public boolean getIsQuickBooking() {
        return this.isQuickBooking;
    }

    public void setIsQuickBooking(boolean isQuickBooking) {
        this.isQuickBooking = isQuickBooking;
    }

    /**
     * 是否实时支付
     */
    public boolean getIsRealTimePay() {
        return this.isRealTimePay;
    }

    public void setIsRealTimePay(boolean isRealTimePay) {
        this.isRealTimePay = isRealTimePay;
    }

    /**
     * 捆绑套餐信息
     */
    public List<PackageAttachItem> getPackageAttachList() {
        return this.packageAttachList;
    }

    public void setPackageAttachList(List<PackageAttachItem> packageAttachList) {
        this.packageAttachList = packageAttachList;
    }

    /**
     * 订单ID
     */
    public long getOrderID() {
        return this.orderID;
    }

    public void setOrderID(long orderID) {
        this.orderID = orderID;
    }

    /**
     * 国内机票倒查唯一KEY
     */
    public String getProductID() {
        return this.productID;
    }

    public void setProductID(String productID) {
        this.productID = productID;
    }

    /**
     * 常旅客
     */
    public List<GaPassengerInfo> getFlightPassengerList() {
        return this.flightPassengerList;
    }

    public void setFlightPassengerList(List<GaPassengerInfo> flightPassengerList) {
        this.flightPassengerList = flightPassengerList;
    }

    /**
     * 联系人信息
     */
    public GaContactInfo getContactInfo() {
        return this.contactInfo;
    }

    public void setContactInfo(GaContactInfo contactInfo) {
        this.contactInfo = contactInfo;
    }

    /**
     * 运价满仓检查TokenNumber
     */
    public String getVerifyTokenNumber() {
        return this.verifyTokenNumber;
    }

    public void setVerifyTokenNumber(String verifyTokenNumber) {
        this.verifyTokenNumber = verifyTokenNumber;
    }

    /**
     * 验证码手机号
     */
    public String getVerifyPhoneNumber() {
        return this.verifyPhoneNumber;
    }

    public void setVerifyPhoneNumber(String verifyPhoneNumber) {
        this.verifyPhoneNumber = verifyPhoneNumber;
    }

    /**
     * 验证码
     */
    public String getVerifyCode() {
        return this.verifyCode;
    }

    public void setVerifyCode(String verifyCode) {
        this.verifyCode = verifyCode;
    }

    /**
     * 是否需要满仓检查
     */
    public boolean getIsVerify() {
        return this.isVerify;
    }

    public void setIsVerify(boolean isVerify) {
        this.isVerify = isVerify;
    }

    /**
     * 发票Title
     */
    public List<String> getInvoiceInfoList() {
        return this.invoiceInfoList;
    }

    public void setInvoiceInfoList(List<String> invoiceInfoList) {
        this.invoiceInfoList = invoiceInfoList;
    }

    /**
     * 订单备注
     */
    public String getOrderRemark() {
        return this.orderRemark;
    }

    public void setOrderRemark(String orderRemark) {
        this.orderRemark = orderRemark;
    }

    /**
     * 查询、返查关键信息
     */
    public FlightSearchInfo getFlightSearchInfo() {
        return this.flightSearchInfo;
    }

    public void setFlightSearchInfo(FlightSearchInfo flightSearchInfo) {
        this.flightSearchInfo = flightSearchInfo;
    }

    /**
     * 优惠券信息
     */
    public FlightOrderCouponInfo getCouponInfo() {
        return this.couponInfo;
    }

    public void setCouponInfo(FlightOrderCouponInfo couponInfo) {
        this.couponInfo = couponInfo;
    }

    /**
     * 配送信息
     */
    public GaDeliveryInfo getDeliveryInfo() {
        return this.deliveryInfo;
    }

    public void setDeliveryInfo(GaDeliveryInfo deliveryInfo) {
        this.deliveryInfo = deliveryInfo;
    }

    /**
     * 支付信息
     */
    public GaFlightPaymentInfo getPaymentInfo() {
        return this.paymentInfo;
    }

    public void setPaymentInfo(GaFlightPaymentInfo paymentInfo) {
        this.paymentInfo = paymentInfo;
    }

    /**
     * 记录客户端提示过的消息
     */
    public List<GaAlertMessageType> getAlertMessageTypeList() {
        return this.alertMessageTypeList;
    }

    public void setAlertMessageTypeList(List<GaAlertMessageType> alertMessageTypeList) {
        this.alertMessageTypeList = alertMessageTypeList;
    }

    /**
     * 分销
     */
    public AllianceInfo getAllianceInfo() {
        return this.allianceInfo;
    }

    public void setAllianceInfo(AllianceInfo allianceInfo) {
        this.allianceInfo = allianceInfo;
    }

    /**
     * 休息室预定列表（单程、返程）
     */
    public List<XProductInfo> getXProductInfoList() {
        return this.xProductInfoList;
    }

    public void setXProductInfoList(List<XProductInfo> xProductInfoList) {
        this.xProductInfoList = xProductInfoList;
    }

    /**
     * 是否需要验证重复订单:0不需要,1需要
     */
    public int getIsVerifyRepeatOrder() {
        return this.isVerifyRepeatOrder;
    }

    public void setIsVerifyRepeatOrder(int isVerifyRepeatOrder) {
        this.isVerifyRepeatOrder = isVerifyRepeatOrder;
    }

    /**
     * 客户端来源，传值就用，不传就服务端拼
     */
    public String getServerFrom() {
        return this.serverFrom;
    }

    public void setServerFrom(String serverFrom) {
        this.serverFrom = serverFrom;
    }

    /**
     * 客户端ABTesting版本标识，多个实验叠加时用{M:72,160224_enf_ARUIS:C;}|{M:73,160225_enf_ARUIS:B;}分隔，如，传值就用
     */
    public String getAbTestingVersions() {
        return this.abTestingVersions;
    }

    public void setAbTestingVersions(String abTestingVersions) {
        this.abTestingVersions = abTestingVersions;
    }

    /**
     * 设备指纹（风控用）
     */
    public String getRmsToken() {
        return this.rmsToken;
    }

    public void setRmsToken(String rmsToken) {
        this.rmsToken = rmsToken;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final GaCreateFlightOrderRequest other = (GaCreateFlightOrderRequest)obj;
        return
            Objects.equal(this.head, other.head) && 
            Objects.equal(this.isQuickBooking, other.isQuickBooking) && 
            Objects.equal(this.isRealTimePay, other.isRealTimePay) && 
            Objects.equal(this.packageAttachList, other.packageAttachList) && 
            Objects.equal(this.orderID, other.orderID) && 
            Objects.equal(this.productID, other.productID) && 
            Objects.equal(this.flightPassengerList, other.flightPassengerList) && 
            Objects.equal(this.contactInfo, other.contactInfo) && 
            Objects.equal(this.verifyTokenNumber, other.verifyTokenNumber) && 
            Objects.equal(this.verifyPhoneNumber, other.verifyPhoneNumber) && 
            Objects.equal(this.verifyCode, other.verifyCode) && 
            Objects.equal(this.isVerify, other.isVerify) && 
            Objects.equal(this.invoiceInfoList, other.invoiceInfoList) && 
            Objects.equal(this.orderRemark, other.orderRemark) && 
            Objects.equal(this.flightSearchInfo, other.flightSearchInfo) && 
            Objects.equal(this.couponInfo, other.couponInfo) && 
            Objects.equal(this.deliveryInfo, other.deliveryInfo) && 
            Objects.equal(this.paymentInfo, other.paymentInfo) && 
            Objects.equal(this.alertMessageTypeList, other.alertMessageTypeList) && 
            Objects.equal(this.allianceInfo, other.allianceInfo) && 
            Objects.equal(this.xProductInfoList, other.xProductInfoList) && 
            Objects.equal(this.isVerifyRepeatOrder, other.isVerifyRepeatOrder) && 
            Objects.equal(this.serverFrom, other.serverFrom) && 
            Objects.equal(this.abTestingVersions, other.abTestingVersions) && 
            Objects.equal(this.rmsToken, other.rmsToken);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.head);
        result = 31 * result + Objects.hashCode(this.isQuickBooking);
        result = 31 * result + Objects.hashCode(this.isRealTimePay);
        result = 31 * result + Objects.hashCode(this.packageAttachList);
        result = 31 * result + Objects.hashCode(this.orderID);
        result = 31 * result + Objects.hashCode(this.productID);
        result = 31 * result + Objects.hashCode(this.flightPassengerList);
        result = 31 * result + Objects.hashCode(this.contactInfo);
        result = 31 * result + Objects.hashCode(this.verifyTokenNumber);
        result = 31 * result + Objects.hashCode(this.verifyPhoneNumber);
        result = 31 * result + Objects.hashCode(this.verifyCode);
        result = 31 * result + Objects.hashCode(this.isVerify);
        result = 31 * result + Objects.hashCode(this.invoiceInfoList);
        result = 31 * result + Objects.hashCode(this.orderRemark);
        result = 31 * result + Objects.hashCode(this.flightSearchInfo);
        result = 31 * result + Objects.hashCode(this.couponInfo);
        result = 31 * result + Objects.hashCode(this.deliveryInfo);
        result = 31 * result + Objects.hashCode(this.paymentInfo);
        result = 31 * result + Objects.hashCode(this.alertMessageTypeList);
        result = 31 * result + Objects.hashCode(this.allianceInfo);
        result = 31 * result + Objects.hashCode(this.xProductInfoList);
        result = 31 * result + Objects.hashCode(this.isVerifyRepeatOrder);
        result = 31 * result + Objects.hashCode(this.serverFrom);
        result = 31 * result + Objects.hashCode(this.abTestingVersions);
        result = 31 * result + Objects.hashCode(this.rmsToken);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("head", head)
            .add("isQuickBooking", isQuickBooking)
            .add("isRealTimePay", isRealTimePay)
            .add("packageAttachList", packageAttachList)
            .add("orderID", orderID)
            .add("productID", productID)
            .add("flightPassengerList", flightPassengerList)
            .add("contactInfo", contactInfo)
            .add("verifyTokenNumber", verifyTokenNumber)
            .add("verifyPhoneNumber", verifyPhoneNumber)
            .add("verifyCode", verifyCode)
            .add("isVerify", isVerify)
            .add("invoiceInfoList", invoiceInfoList)
            .add("orderRemark", orderRemark)
            .add("flightSearchInfo", flightSearchInfo)
            .add("couponInfo", couponInfo)
            .add("deliveryInfo", deliveryInfo)
            .add("paymentInfo", paymentInfo)
            .add("alertMessageTypeList", alertMessageTypeList)
            .add("allianceInfo", allianceInfo)
            .add("xProductInfoList", xProductInfoList)
            .add("isVerifyRepeatOrder", isVerifyRepeatOrder)
            .add("serverFrom", serverFrom)
            .add("abTestingVersions", abTestingVersions)
            .add("rmsToken", rmsToken)
            .toString();
    }
}