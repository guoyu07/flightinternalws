/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.orderdetailsearch.v1;

import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.math.BigDecimal;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 改签费用信息
 */
@DtoDoc("改签费用信息")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RebookingPayDetailInfo", propOrder = {
    "currency",
    "currencyRate",
    "totalRebookFee",
    "dateChangeFee",
    "priceDifferential",
    "taxDifferential",
    "supplierServiceFeeForCustom",
    "ctripServiceFeeForCustom",
    "airlineServiceFeeForCustom",
    "fCardServiceFee"
})
@SuppressWarnings("all")
public class RebookingPayDetailInfo  {

    private static final long serialVersionUID = 1L;

    public RebookingPayDetailInfo(
        String currency, 
        BigDecimal currencyRate, 
        BigDecimal totalRebookFee, 
        BigDecimal dateChangeFee, 
        BigDecimal priceDifferential, 
        BigDecimal taxDifferential, 
        BigDecimal supplierServiceFeeForCustom, 
        BigDecimal ctripServiceFeeForCustom, 
        BigDecimal airlineServiceFeeForCustom, 
        BigDecimal fCardServiceFee) {
        this.currency = currency;
        this.currencyRate = currencyRate;
        this.totalRebookFee = totalRebookFee;
        this.dateChangeFee = dateChangeFee;
        this.priceDifferential = priceDifferential;
        this.taxDifferential = taxDifferential;
        this.supplierServiceFeeForCustom = supplierServiceFeeForCustom;
        this.ctripServiceFeeForCustom = ctripServiceFeeForCustom;
        this.airlineServiceFeeForCustom = airlineServiceFeeForCustom;
        this.fCardServiceFee = fCardServiceFee;
    }

    public RebookingPayDetailInfo() {
    }

    @FieldDoc("币种（RMB,HKD,USD等）")
    @JsonProperty("Currency")
    @XmlElement(name = "Currency")
    private String currency;

    @FieldDoc("汇率")
    @JsonProperty("CurrencyRate")
    @XmlElement(name = "CurrencyRate")
    private BigDecimal currencyRate;

    @FieldDoc("改签总费用")
    @JsonProperty("TotalRebookFee")
    @XmlElement(name = "TotalRebookFee")
    private BigDecimal totalRebookFee;

    @FieldDoc("改期费")
    @JsonProperty("DateChangeFee")
    @XmlElement(name = "DateChangeFee")
    private BigDecimal dateChangeFee;

    @FieldDoc("机票差价")
    @JsonProperty("PriceDifferential")
    @XmlElement(name = "PriceDifferential")
    private BigDecimal priceDifferential;

    @FieldDoc("税差")
    @JsonProperty("TaxDifferential")
    @XmlElement(name = "TaxDifferential")
    private BigDecimal taxDifferential;

    @FieldDoc("供应商服务费，用于结算，-客人，来自o_refrevservicefee表")
    @JsonProperty("SupplierServiceFeeForCustom")
    @XmlElement(name = "SupplierServiceFeeForCustom")
    private BigDecimal supplierServiceFeeForCustom;

    @FieldDoc("携程服务费，用于结算，-客人，来自o_refrevservicefee表")
    @JsonProperty("CtripServiceFeeForCustom")
    @XmlElement(name = "CtripServiceFeeForCustom")
    private BigDecimal ctripServiceFeeForCustom;

    @FieldDoc("航司服务费，用于结算，-客人，来自o_refrevservicefee表")
    @JsonProperty("AirlineServiceFeeForCustom")
    @XmlElement(name = "AirlineServiceFeeForCustom")
    private BigDecimal airlineServiceFeeForCustom;

    @FieldDoc("外卡服务费")
    @JsonProperty("FCardServiceFee")
    @XmlElement(name = "FCardServiceFee")
    private BigDecimal fCardServiceFee;

    /**
     * 币种（RMB,HKD,USD等）
     */
    public String getCurrency() {
        return this.currency;
    }

    public void setCurrency(String currency) {
        this.currency = currency;
    }

    /**
     * 汇率
     */
    public BigDecimal getCurrencyRate() {
        return this.currencyRate;
    }

    public void setCurrencyRate(BigDecimal currencyRate) {
        this.currencyRate = currencyRate;
    }

    /**
     * 改签总费用
     */
    public BigDecimal getTotalRebookFee() {
        return this.totalRebookFee;
    }

    public void setTotalRebookFee(BigDecimal totalRebookFee) {
        this.totalRebookFee = totalRebookFee;
    }

    /**
     * 改期费
     */
    public BigDecimal getDateChangeFee() {
        return this.dateChangeFee;
    }

    public void setDateChangeFee(BigDecimal dateChangeFee) {
        this.dateChangeFee = dateChangeFee;
    }

    /**
     * 机票差价
     */
    public BigDecimal getPriceDifferential() {
        return this.priceDifferential;
    }

    public void setPriceDifferential(BigDecimal priceDifferential) {
        this.priceDifferential = priceDifferential;
    }

    /**
     * 税差
     */
    public BigDecimal getTaxDifferential() {
        return this.taxDifferential;
    }

    public void setTaxDifferential(BigDecimal taxDifferential) {
        this.taxDifferential = taxDifferential;
    }

    /**
     * 供应商服务费，用于结算，-客人，来自o_refrevservicefee表
     */
    public BigDecimal getSupplierServiceFeeForCustom() {
        return this.supplierServiceFeeForCustom;
    }

    public void setSupplierServiceFeeForCustom(BigDecimal supplierServiceFeeForCustom) {
        this.supplierServiceFeeForCustom = supplierServiceFeeForCustom;
    }

    /**
     * 携程服务费，用于结算，-客人，来自o_refrevservicefee表
     */
    public BigDecimal getCtripServiceFeeForCustom() {
        return this.ctripServiceFeeForCustom;
    }

    public void setCtripServiceFeeForCustom(BigDecimal ctripServiceFeeForCustom) {
        this.ctripServiceFeeForCustom = ctripServiceFeeForCustom;
    }

    /**
     * 航司服务费，用于结算，-客人，来自o_refrevservicefee表
     */
    public BigDecimal getAirlineServiceFeeForCustom() {
        return this.airlineServiceFeeForCustom;
    }

    public void setAirlineServiceFeeForCustom(BigDecimal airlineServiceFeeForCustom) {
        this.airlineServiceFeeForCustom = airlineServiceFeeForCustom;
    }

    /**
     * 外卡服务费
     */
    public BigDecimal getFCardServiceFee() {
        return this.fCardServiceFee;
    }

    public void setFCardServiceFee(BigDecimal fCardServiceFee) {
        this.fCardServiceFee = fCardServiceFee;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final RebookingPayDetailInfo other = (RebookingPayDetailInfo)obj;
        return
            Objects.equal(this.currency, other.currency) && 
            Objects.equal(this.currencyRate, other.currencyRate) && 
            Objects.equal(this.totalRebookFee, other.totalRebookFee) && 
            Objects.equal(this.dateChangeFee, other.dateChangeFee) && 
            Objects.equal(this.priceDifferential, other.priceDifferential) && 
            Objects.equal(this.taxDifferential, other.taxDifferential) && 
            Objects.equal(this.supplierServiceFeeForCustom, other.supplierServiceFeeForCustom) && 
            Objects.equal(this.ctripServiceFeeForCustom, other.ctripServiceFeeForCustom) && 
            Objects.equal(this.airlineServiceFeeForCustom, other.airlineServiceFeeForCustom) && 
            Objects.equal(this.fCardServiceFee, other.fCardServiceFee);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.currency);
        result = 31 * result + Objects.hashCode(this.currencyRate);
        result = 31 * result + Objects.hashCode(this.totalRebookFee);
        result = 31 * result + Objects.hashCode(this.dateChangeFee);
        result = 31 * result + Objects.hashCode(this.priceDifferential);
        result = 31 * result + Objects.hashCode(this.taxDifferential);
        result = 31 * result + Objects.hashCode(this.supplierServiceFeeForCustom);
        result = 31 * result + Objects.hashCode(this.ctripServiceFeeForCustom);
        result = 31 * result + Objects.hashCode(this.airlineServiceFeeForCustom);
        result = 31 * result + Objects.hashCode(this.fCardServiceFee);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("currency", currency)
            .add("currencyRate", currencyRate)
            .add("totalRebookFee", totalRebookFee)
            .add("dateChangeFee", dateChangeFee)
            .add("priceDifferential", priceDifferential)
            .add("taxDifferential", taxDifferential)
            .add("supplierServiceFeeForCustom", supplierServiceFeeForCustom)
            .add("ctripServiceFeeForCustom", ctripServiceFeeForCustom)
            .add("airlineServiceFeeForCustom", airlineServiceFeeForCustom)
            .add("fCardServiceFee", fCardServiceFee)
            .toString();
    }
}