/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.searchflightpolicyinfo.v1;

import com.ctrip.soa.global.api.comm.head.v1.Head;
import com.ctrip.soa.global.api.flightcommon.v1.GaCabinClassType;
import com.ctrip.soa.global.api.flightcommon.v1.GaFlightWayType;
import com.ctrip.soa.global.api.flightcommon.v1.ProductKeyInfo;
import com.ctrip.soa.global.api.flightcommon.v1.SegmentParameterInfo;
import com.ctrip.soa.global.api.flightcommon.v1.TravelerInfo;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlRootElement(name = "GaSearchFlightPolicyInfoRequest", namespace = "http://soa.ctrip.com/Global/API/SearchFlightPolicyInfo/v1")
@XmlType(name = "GaSearchFlightPolicyInfoRequest", propOrder = {
    "head",
    "tripType",
    "classType",
    "travelerNumber",
    "segmentParameterList",
    "productKeyInfo"
})
@SuppressWarnings("all")
public class GaSearchFlightPolicyInfoRequest  {

    private static final long serialVersionUID = 1L;

    public GaSearchFlightPolicyInfoRequest(
        Head head, 
        GaFlightWayType tripType, 
        GaCabinClassType classType, 
        TravelerInfo travelerNumber, 
        List<SegmentParameterInfo> segmentParameterList, 
        ProductKeyInfo productKeyInfo) {
        this.head = head;
        this.tripType = tripType;
        this.classType = classType;
        this.travelerNumber = travelerNumber;
        this.segmentParameterList = segmentParameterList;
        this.productKeyInfo = productKeyInfo;
    }

    public GaSearchFlightPolicyInfoRequest() {
    }

    @JsonProperty("Head")
    @XmlElement(name = "Head")
    private Head head;

    @FieldDoc("航程类型")
    @JsonProperty("TripType")
    @XmlElement(name = "TripType")
    private GaFlightWayType tripType;

    @FieldDoc("舱位类型")
    @JsonProperty("ClassType")
    @XmlElement(name = "ClassType")
    private GaCabinClassType classType;

    @FieldDoc("乘客人数")
    @JsonProperty("TravelerNumber")
    @XmlElement(name = "TravelerNumber")
    private TravelerInfo travelerNumber;

    @FieldDoc("航段信息")
    @JsonProperty("SegmentParameterList")
    @XmlElement(name = "SegmentParameterList")
    private List<SegmentParameterInfo> segmentParameterList;

    @FieldDoc("定位产品的关键参数，响应中返回")
    @JsonProperty("ProductKeyInfo")
    @XmlElement(name = "ProductKeyInfo")
    private ProductKeyInfo productKeyInfo;

    public Head getHead() {
        return this.head;
    }

    public void setHead(Head head) {
        this.head = head;
    }

    /**
     * 航程类型
     */
    public GaFlightWayType getTripType() {
        return this.tripType;
    }

    public void setTripType(GaFlightWayType tripType) {
        this.tripType = tripType;
    }

    /**
     * 舱位类型
     */
    public GaCabinClassType getClassType() {
        return this.classType;
    }

    public void setClassType(GaCabinClassType classType) {
        this.classType = classType;
    }

    /**
     * 乘客人数
     */
    public TravelerInfo getTravelerNumber() {
        return this.travelerNumber;
    }

    public void setTravelerNumber(TravelerInfo travelerNumber) {
        this.travelerNumber = travelerNumber;
    }

    /**
     * 航段信息
     */
    public List<SegmentParameterInfo> getSegmentParameterList() {
        return this.segmentParameterList;
    }

    public void setSegmentParameterList(List<SegmentParameterInfo> segmentParameterList) {
        this.segmentParameterList = segmentParameterList;
    }

    /**
     * 定位产品的关键参数，响应中返回
     */
    public ProductKeyInfo getProductKeyInfo() {
        return this.productKeyInfo;
    }

    public void setProductKeyInfo(ProductKeyInfo productKeyInfo) {
        this.productKeyInfo = productKeyInfo;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final GaSearchFlightPolicyInfoRequest other = (GaSearchFlightPolicyInfoRequest)obj;
        return
            Objects.equal(this.head, other.head) && 
            Objects.equal(this.tripType, other.tripType) && 
            Objects.equal(this.classType, other.classType) && 
            Objects.equal(this.travelerNumber, other.travelerNumber) && 
            Objects.equal(this.segmentParameterList, other.segmentParameterList) && 
            Objects.equal(this.productKeyInfo, other.productKeyInfo);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.head);
        result = 31 * result + Objects.hashCode(this.tripType);
        result = 31 * result + Objects.hashCode(this.classType);
        result = 31 * result + Objects.hashCode(this.travelerNumber);
        result = 31 * result + Objects.hashCode(this.segmentParameterList);
        result = 31 * result + Objects.hashCode(this.productKeyInfo);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("head", head)
            .add("tripType", tripType)
            .add("classType", classType)
            .add("travelerNumber", travelerNumber)
            .add("segmentParameterList", segmentParameterList)
            .add("productKeyInfo", productKeyInfo)
            .toString();
    }
}