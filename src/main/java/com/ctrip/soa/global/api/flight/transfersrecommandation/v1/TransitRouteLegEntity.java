/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.flight.transfersrecommandation.v1;

import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.util.Calendar;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 中转联程航段实体
 */
@DtoDoc("中转联程航段实体")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TransitRouteLegEntity", propOrder = {
    "departureCity",
    "arrivalCity",
    "departureDate",
    "flightInfoList"
})
@SuppressWarnings("all")
public class TransitRouteLegEntity  {

    private static final long serialVersionUID = 1L;

    public TransitRouteLegEntity(
        String departureCity, 
        String arrivalCity, 
        Calendar departureDate, 
        List<FlightInfoEntity> flightInfoList) {
        this.departureCity = departureCity;
        this.arrivalCity = arrivalCity;
        this.departureDate = departureDate;
        this.flightInfoList = flightInfoList;
    }

    public TransitRouteLegEntity() {
    }

    @FieldDoc("出发城市")
    @JsonProperty("DepartureCity")
    @XmlElement(name = "DepartureCity")
    private String departureCity;

    @FieldDoc("到达城市")
    @JsonProperty("ArrivalCity")
    @XmlElement(name = "ArrivalCity")
    private String arrivalCity;

    @FieldDoc("出发日期")
    @JsonProperty("DepartureDate")
    @XmlElement(name = "DepartureDate")
    private Calendar departureDate;

    @FieldDoc("中转联程航班实体列表")
    @JsonProperty("FlightInfoList")
    @XmlElement(name = "FlightInfoList")
    private List<FlightInfoEntity> flightInfoList;

    /**
     * 出发城市
     */
    public String getDepartureCity() {
        return this.departureCity;
    }

    public void setDepartureCity(String departureCity) {
        this.departureCity = departureCity;
    }

    /**
     * 到达城市
     */
    public String getArrivalCity() {
        return this.arrivalCity;
    }

    public void setArrivalCity(String arrivalCity) {
        this.arrivalCity = arrivalCity;
    }

    /**
     * 出发日期
     */
    public Calendar getDepartureDate() {
        return this.departureDate;
    }

    public void setDepartureDate(Calendar departureDate) {
        this.departureDate = departureDate;
    }

    /**
     * 中转联程航班实体列表
     */
    public List<FlightInfoEntity> getFlightInfoList() {
        return this.flightInfoList;
    }

    public void setFlightInfoList(List<FlightInfoEntity> flightInfoList) {
        this.flightInfoList = flightInfoList;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final TransitRouteLegEntity other = (TransitRouteLegEntity)obj;
        return
            Objects.equal(this.departureCity, other.departureCity) && 
            Objects.equal(this.arrivalCity, other.arrivalCity) && 
            Objects.equal(this.departureDate, other.departureDate) && 
            Objects.equal(this.flightInfoList, other.flightInfoList);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.departureCity);
        result = 31 * result + Objects.hashCode(this.arrivalCity);
        result = 31 * result + Objects.hashCode(this.departureDate);
        result = 31 * result + Objects.hashCode(this.flightInfoList);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("departureCity", departureCity)
            .add("arrivalCity", arrivalCity)
            .add("departureDate", departureDate)
            .add("flightInfoList", flightInfoList)
            .toString();
    }
}