/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.gareschedulecondition.v1;

import com.ctrip.soa.global.api.flightcommon.v1.GaPassengerType;
import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 人乘可退改信息
 */
@DtoDoc("人乘可退改信息")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PsgRescheduleCondition", propOrder = {
    "sequence",
    "passengerName",
    "ticketTypeEnum",
    "rescheduleAble",
    "unRescheduleAbleReason",
    "isUsed",
    "isFlightChangeCanRebook",
    "xProductProcessDesc"
})
@SuppressWarnings("all")
public class PsgRescheduleCondition  {

    private static final long serialVersionUID = 1L;

    public PsgRescheduleCondition(
        int sequence, 
        String passengerName, 
        GaPassengerType ticketTypeEnum, 
        boolean rescheduleAble, 
        String unRescheduleAbleReason, 
        boolean isUsed, 
        boolean isFlightChangeCanRebook, 
        List<RCXProductDesc> xProductProcessDesc) {
        this.sequence = sequence;
        this.passengerName = passengerName;
        this.ticketTypeEnum = ticketTypeEnum;
        this.rescheduleAble = rescheduleAble;
        this.unRescheduleAbleReason = unRescheduleAbleReason;
        this.isUsed = isUsed;
        this.isFlightChangeCanRebook = isFlightChangeCanRebook;
        this.xProductProcessDesc = xProductProcessDesc;
    }

    public PsgRescheduleCondition() {
    }

    @FieldDoc("航段号")
    @JsonProperty("Sequence")
    @XmlElement(name = "Sequence")
    private int sequence;

    @FieldDoc("乘客姓名")
    @JsonProperty("PassengerName")
    @XmlElement(name = "PassengerName")
    private String passengerName;

    @FieldDoc("票类型")
    @JsonProperty("TicketTypeEnum")
    @XmlElement(name = "TicketTypeEnum")
    private GaPassengerType ticketTypeEnum;

    @FieldDoc("是否可以提交改签")
    @JsonProperty("RescheduleAble")
    @XmlElement(name = "RescheduleAble")
    private boolean rescheduleAble;

    @FieldDoc("不可改原因")
    @JsonProperty("UnRescheduleAbleReason")
    @XmlElement(name = "UnRescheduleAbleReason")
    private String unRescheduleAbleReason;

    @FieldDoc("是否已使用")
    @JsonProperty("IsUsed")
    @XmlElement(name = "IsUsed")
    private boolean isUsed;

    @FieldDoc("航变是否可改")
    @JsonProperty("IsFlightChangeCanRebook")
    @XmlElement(name = "IsFlightChangeCanRebook")
    private boolean isFlightChangeCanRebook;

    @FieldDoc("X产品改签后如何处理说明")
    @JsonProperty("XProductProcessDesc")
    @XmlElement(name = "XProductProcessDesc")
    private List<RCXProductDesc> xProductProcessDesc;

    /**
     * 航段号
     */
    public int getSequence() {
        return this.sequence;
    }

    public void setSequence(int sequence) {
        this.sequence = sequence;
    }

    /**
     * 乘客姓名
     */
    public String getPassengerName() {
        return this.passengerName;
    }

    public void setPassengerName(String passengerName) {
        this.passengerName = passengerName;
    }

    /**
     * 票类型
     */
    public GaPassengerType getTicketTypeEnum() {
        return this.ticketTypeEnum;
    }

    public void setTicketTypeEnum(GaPassengerType ticketTypeEnum) {
        this.ticketTypeEnum = ticketTypeEnum;
    }

    /**
     * 是否可以提交改签
     */
    public boolean getRescheduleAble() {
        return this.rescheduleAble;
    }

    public void setRescheduleAble(boolean rescheduleAble) {
        this.rescheduleAble = rescheduleAble;
    }

    /**
     * 不可改原因
     */
    public String getUnRescheduleAbleReason() {
        return this.unRescheduleAbleReason;
    }

    public void setUnRescheduleAbleReason(String unRescheduleAbleReason) {
        this.unRescheduleAbleReason = unRescheduleAbleReason;
    }

    /**
     * 是否已使用
     */
    public boolean getIsUsed() {
        return this.isUsed;
    }

    public void setIsUsed(boolean isUsed) {
        this.isUsed = isUsed;
    }

    /**
     * 航变是否可改
     */
    public boolean getIsFlightChangeCanRebook() {
        return this.isFlightChangeCanRebook;
    }

    public void setIsFlightChangeCanRebook(boolean isFlightChangeCanRebook) {
        this.isFlightChangeCanRebook = isFlightChangeCanRebook;
    }

    /**
     * X产品改签后如何处理说明
     */
    public List<RCXProductDesc> getXProductProcessDesc() {
        return this.xProductProcessDesc;
    }

    public void setXProductProcessDesc(List<RCXProductDesc> xProductProcessDesc) {
        this.xProductProcessDesc = xProductProcessDesc;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final PsgRescheduleCondition other = (PsgRescheduleCondition)obj;
        return
            Objects.equal(this.sequence, other.sequence) && 
            Objects.equal(this.passengerName, other.passengerName) && 
            Objects.equal(this.ticketTypeEnum, other.ticketTypeEnum) && 
            Objects.equal(this.rescheduleAble, other.rescheduleAble) && 
            Objects.equal(this.unRescheduleAbleReason, other.unRescheduleAbleReason) && 
            Objects.equal(this.isUsed, other.isUsed) && 
            Objects.equal(this.isFlightChangeCanRebook, other.isFlightChangeCanRebook) && 
            Objects.equal(this.xProductProcessDesc, other.xProductProcessDesc);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.sequence);
        result = 31 * result + Objects.hashCode(this.passengerName);
        result = 31 * result + Objects.hashCode(this.ticketTypeEnum);
        result = 31 * result + Objects.hashCode(this.rescheduleAble);
        result = 31 * result + Objects.hashCode(this.unRescheduleAbleReason);
        result = 31 * result + Objects.hashCode(this.isUsed);
        result = 31 * result + Objects.hashCode(this.isFlightChangeCanRebook);
        result = 31 * result + Objects.hashCode(this.xProductProcessDesc);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("sequence", sequence)
            .add("passengerName", passengerName)
            .add("ticketTypeEnum", ticketTypeEnum)
            .add("rescheduleAble", rescheduleAble)
            .add("unRescheduleAbleReason", unRescheduleAbleReason)
            .add("isUsed", isUsed)
            .add("isFlightChangeCanRebook", isFlightChangeCanRebook)
            .add("xProductProcessDesc", xProductProcessDesc)
            .toString();
    }
}