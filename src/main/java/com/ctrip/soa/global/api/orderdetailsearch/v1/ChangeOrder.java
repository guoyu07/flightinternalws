/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.orderdetailsearch.v1;

import com.ctrip.soa.global.api.flightcommon.v1.AirLineInfo;
import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 航变信息
 */
@DtoDoc("航变信息")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ChangeOrder", propOrder = {
    "changeOrderID",
    "flightChangeType",
    "changeRange",
    "flightClass",
    "sequence",
    "changeStatus",
    "afterStatus",
    "smsStatus",
    "rrStatus",
    "orderStatus",
    "passengers",
    "originFlight",
    "originAirLine",
    "originDdate",
    "originAdate",
    "originDPort",
    "originDPortName",
    "originAPort",
    "originAPortName",
    "originDBuilding",
    "originABuilding",
    "originClass",
    "originClassDesc",
    "originSubClass",
    "originCraftType",
    "originDCityID",
    "originDCityName",
    "originACityID",
    "originACityName",
    "protectFlight",
    "protectDdate",
    "protectAdate",
    "protectDPort",
    "protectDPortName",
    "protectAPort",
    "protectAPortName",
    "protectDBuilding",
    "protectABuilding",
    "protectDCityID",
    "protectDCityName",
    "protectACityID",
    "protectACityName",
    "protectClass",
    "protectClassDesc",
    "protectSubClass",
    "protectCraftType",
    "protectAirLine",
    "flight",
    "ddate",
    "adate",
    "dPort",
    "dPortName",
    "aPort",
    "aPortName",
    "dBuilding",
    "aBuilding",
    "dCityID",
    "dCityName",
    "aCityID",
    "aCityName",
    "clazz",
    "classDesc",
    "subClass",
    "craftType",
    "airLine",
    "isOpen",
    "isAutomaticFlight",
    "isAgreeProtectFlight",
    "processControl",
    "isChangeOrderRebook",
    "isChangeOrderRefund",
    "canRefundAll",
    "source",
    "rebookSingleTalk",
    "rebookFlightDateFrom",
    "rebookFlightDateTo",
    "changeDesc",
    "containAllPsg"
})
@SuppressWarnings("all")
public class ChangeOrder  {

    private static final long serialVersionUID = 1L;

    public ChangeOrder(
        long changeOrderID, 
        int flightChangeType, 
        String changeRange, 
        String flightClass, 
        int sequence, 
        String changeStatus, 
        String afterStatus, 
        String smsStatus, 
        String rrStatus, 
        String orderStatus, 
        String passengers, 
        String originFlight, 
        AirLineInfo originAirLine, 
        long originDdate, 
        long originAdate, 
        String originDPort, 
        String originDPortName, 
        String originAPort, 
        String originAPortName, 
        String originDBuilding, 
        String originABuilding, 
        String originClass, 
        String originClassDesc, 
        String originSubClass, 
        String originCraftType, 
        int originDCityID, 
        String originDCityName, 
        int originACityID, 
        String originACityName, 
        String protectFlight, 
        long protectDdate, 
        long protectAdate, 
        String protectDPort, 
        String protectDPortName, 
        String protectAPort, 
        String protectAPortName, 
        String protectDBuilding, 
        String protectABuilding, 
        int protectDCityID, 
        String protectDCityName, 
        int protectACityID, 
        String protectACityName, 
        String protectClass, 
        String protectClassDesc, 
        String protectSubClass, 
        String protectCraftType, 
        AirLineInfo protectAirLine, 
        String flight, 
        long ddate, 
        long adate, 
        String dPort, 
        String dPortName, 
        String aPort, 
        String aPortName, 
        String dBuilding, 
        String aBuilding, 
        int dCityID, 
        String dCityName, 
        int aCityID, 
        String aCityName, 
        String clazz, 
        String classDesc, 
        String subClass, 
        String craftType, 
        AirLineInfo airLine, 
        String isOpen, 
        boolean isAutomaticFlight, 
        boolean isAgreeProtectFlight, 
        String processControl, 
        boolean isChangeOrderRebook, 
        boolean isChangeOrderRefund, 
        String canRefundAll, 
        int source, 
        String rebookSingleTalk, 
        String rebookFlightDateFrom, 
        String rebookFlightDateTo, 
        String changeDesc, 
        boolean containAllPsg) {
        this.changeOrderID = changeOrderID;
        this.flightChangeType = flightChangeType;
        this.changeRange = changeRange;
        this.flightClass = flightClass;
        this.sequence = sequence;
        this.changeStatus = changeStatus;
        this.afterStatus = afterStatus;
        this.smsStatus = smsStatus;
        this.rrStatus = rrStatus;
        this.orderStatus = orderStatus;
        this.passengers = passengers;
        this.originFlight = originFlight;
        this.originAirLine = originAirLine;
        this.originDdate = originDdate;
        this.originAdate = originAdate;
        this.originDPort = originDPort;
        this.originDPortName = originDPortName;
        this.originAPort = originAPort;
        this.originAPortName = originAPortName;
        this.originDBuilding = originDBuilding;
        this.originABuilding = originABuilding;
        this.originClass = originClass;
        this.originClassDesc = originClassDesc;
        this.originSubClass = originSubClass;
        this.originCraftType = originCraftType;
        this.originDCityID = originDCityID;
        this.originDCityName = originDCityName;
        this.originACityID = originACityID;
        this.originACityName = originACityName;
        this.protectFlight = protectFlight;
        this.protectDdate = protectDdate;
        this.protectAdate = protectAdate;
        this.protectDPort = protectDPort;
        this.protectDPortName = protectDPortName;
        this.protectAPort = protectAPort;
        this.protectAPortName = protectAPortName;
        this.protectDBuilding = protectDBuilding;
        this.protectABuilding = protectABuilding;
        this.protectDCityID = protectDCityID;
        this.protectDCityName = protectDCityName;
        this.protectACityID = protectACityID;
        this.protectACityName = protectACityName;
        this.protectClass = protectClass;
        this.protectClassDesc = protectClassDesc;
        this.protectSubClass = protectSubClass;
        this.protectCraftType = protectCraftType;
        this.protectAirLine = protectAirLine;
        this.flight = flight;
        this.ddate = ddate;
        this.adate = adate;
        this.dPort = dPort;
        this.dPortName = dPortName;
        this.aPort = aPort;
        this.aPortName = aPortName;
        this.dBuilding = dBuilding;
        this.aBuilding = aBuilding;
        this.dCityID = dCityID;
        this.dCityName = dCityName;
        this.aCityID = aCityID;
        this.aCityName = aCityName;
        this.clazz = clazz;
        this.classDesc = classDesc;
        this.subClass = subClass;
        this.craftType = craftType;
        this.airLine = airLine;
        this.isOpen = isOpen;
        this.isAutomaticFlight = isAutomaticFlight;
        this.isAgreeProtectFlight = isAgreeProtectFlight;
        this.processControl = processControl;
        this.isChangeOrderRebook = isChangeOrderRebook;
        this.isChangeOrderRefund = isChangeOrderRefund;
        this.canRefundAll = canRefundAll;
        this.source = source;
        this.rebookSingleTalk = rebookSingleTalk;
        this.rebookFlightDateFrom = rebookFlightDateFrom;
        this.rebookFlightDateTo = rebookFlightDateTo;
        this.changeDesc = changeDesc;
        this.containAllPsg = containAllPsg;
    }

    public ChangeOrder() {
    }

    @FieldDoc("航变订单处理流水号")
    @JsonProperty("ChangeOrderID")
    @XmlElement(name = "ChangeOrderID")
    private long changeOrderID;

    @FieldDoc("航变类型 0:航班变化;1:航班取消;2:待定延误;5:取消恢复")
    @JsonProperty("FlightChangeType")
    @XmlElement(name = "FlightChangeType")
    private int flightChangeType;

    @FieldDoc("航变范围 T:整个航班变化;C:航班+舱位;F:单个Pnr变化")
    @JsonProperty("ChangeRange")
    @XmlElement(name = "ChangeRange")
    private String changeRange;

    @FieldDoc("国内国际(N:国内;I:国际)")
    @JsonProperty("FlightClass")
    @XmlElement(name = "FlightClass")
    private String flightClass;

    @FieldDoc("航程")
    @JsonProperty("Sequence")
    @XmlElement(name = "Sequence")
    private int sequence;

    @FieldDoc("当前操作状态")
    @JsonProperty("ChangeStatus")
    @XmlElement(name = "ChangeStatus")
    private String changeStatus;

    @FieldDoc("后处理状态" +
            "(P:改签中F:改签失败S:改签成功" +
            "T:退票中 U:退票失败 V:退票成功)")
    @JsonProperty("AfterStatus")
    @XmlElement(name = "AfterStatus")
    private String afterStatus;

    @FieldDoc("短信状态")
    @JsonProperty("SmsStatus")
    @XmlElement(name = "SmsStatus")
    private String smsStatus;

    @FieldDoc("RR状态	A:自动RR成功；B:手工RR成功；R:RR失败")
    @JsonProperty("RRStatus")
    @XmlElement(name = "RRStatus")
    private String rrStatus;

    @FieldDoc("订单处理状态	W:待处理;P:处理中;S:完成")
    @JsonProperty("OrderStatus")
    @XmlElement(name = "OrderStatus")
    private String orderStatus;

    @FieldDoc("乘客?")
    @JsonProperty("Passengers")
    @XmlElement(name = "Passengers")
    private String passengers;

    @FieldDoc("带Origin为原始航变信息")
    @JsonProperty("OriginFlight")
    @XmlElement(name = "OriginFlight")
    private String originFlight;

    @FieldDoc("带Origin为原始航变信息")
    @JsonProperty("OriginAirLine")
    @XmlElement(name = "OriginAirLine")
    private AirLineInfo originAirLine;

    @FieldDoc("带Origin为原始航变信息")
    @JsonProperty("OriginDdate")
    @XmlElement(name = "OriginDdate")
    private long originDdate;

    @FieldDoc("带Origin为原始航变信息")
    @JsonProperty("OriginAdate")
    @XmlElement(name = "OriginAdate")
    private long originAdate;

    @FieldDoc("带Origin为原始航变信息")
    @JsonProperty("OriginDPort")
    @XmlElement(name = "OriginDPort")
    private String originDPort;

    @FieldDoc("带Origin为原始航变信息")
    @JsonProperty("OriginDPortName")
    @XmlElement(name = "OriginDPortName")
    private String originDPortName;

    @FieldDoc("带Origin为原始航变信息")
    @JsonProperty("OriginAPort")
    @XmlElement(name = "OriginAPort")
    private String originAPort;

    @FieldDoc("带Origin为原始航变信息")
    @JsonProperty("OriginAPortName")
    @XmlElement(name = "OriginAPortName")
    private String originAPortName;

    @FieldDoc("带Origin为原始航变信息")
    @JsonProperty("OriginDBuilding")
    @XmlElement(name = "OriginDBuilding")
    private String originDBuilding;

    @FieldDoc("带Origin为原始航变信息")
    @JsonProperty("OriginABuilding")
    @XmlElement(name = "OriginABuilding")
    private String originABuilding;

    @FieldDoc("带Origin为原始航变信息")
    @JsonProperty("OriginClass")
    @XmlElement(name = "OriginClass")
    private String originClass;

    @FieldDoc("带Origin为原始航变信息")
    @JsonProperty("OriginClassDesc")
    @XmlElement(name = "OriginClassDesc")
    private String originClassDesc;

    @FieldDoc("带Origin为原始航变信息")
    @JsonProperty("OriginSubClass")
    @XmlElement(name = "OriginSubClass")
    private String originSubClass;

    @FieldDoc("带Origin为原始航变信息")
    @JsonProperty("OriginCraftType")
    @XmlElement(name = "OriginCraftType")
    private String originCraftType;

    @FieldDoc("带Origin为原始航变信息")
    @JsonProperty("OriginDCityID")
    @XmlElement(name = "OriginDCityID")
    private int originDCityID;

    @FieldDoc("带Origin为原始航变信息")
    @JsonProperty("OriginDCityName")
    @XmlElement(name = "OriginDCityName")
    private String originDCityName;

    @FieldDoc("带Origin为原始航变信息")
    @JsonProperty("OriginACityID")
    @XmlElement(name = "OriginACityID")
    private int originACityID;

    @FieldDoc("带Origin为原始航变信息")
    @JsonProperty("OriginACityName")
    @XmlElement(name = "OriginACityName")
    private String originACityName;

    @FieldDoc("带Protect为保护航变信息")
    @JsonProperty("ProtectFlight")
    @XmlElement(name = "ProtectFlight")
    private String protectFlight;

    @FieldDoc("带Protect为保护航变信息")
    @JsonProperty("ProtectDdate")
    @XmlElement(name = "ProtectDdate")
    private long protectDdate;

    @FieldDoc("带Protect为保护航变信息")
    @JsonProperty("ProtectAdate")
    @XmlElement(name = "ProtectAdate")
    private long protectAdate;

    @FieldDoc("带Protect为保护航变信息")
    @JsonProperty("ProtectDPort")
    @XmlElement(name = "ProtectDPort")
    private String protectDPort;

    @FieldDoc("带Protect为保护航变信息")
    @JsonProperty("ProtectDPortName")
    @XmlElement(name = "ProtectDPortName")
    private String protectDPortName;

    @FieldDoc("带Protect为保护航变信息")
    @JsonProperty("ProtectAPort")
    @XmlElement(name = "ProtectAPort")
    private String protectAPort;

    @FieldDoc("带Protect为保护航变信息")
    @JsonProperty("ProtectAPortName")
    @XmlElement(name = "ProtectAPortName")
    private String protectAPortName;

    @FieldDoc("带Protect为保护航变信息")
    @JsonProperty("ProtectDBuilding")
    @XmlElement(name = "ProtectDBuilding")
    private String protectDBuilding;

    @FieldDoc("带Protect为保护航变信息")
    @JsonProperty("ProtectABuilding")
    @XmlElement(name = "ProtectABuilding")
    private String protectABuilding;

    @FieldDoc("带Protect为保护航变信息")
    @JsonProperty("ProtectDCityID")
    @XmlElement(name = "ProtectDCityID")
    private int protectDCityID;

    @FieldDoc("带Protect为保护航变信息")
    @JsonProperty("ProtectDCityName")
    @XmlElement(name = "ProtectDCityName")
    private String protectDCityName;

    @FieldDoc("带Protect为保护航变信息")
    @JsonProperty("ProtectACityID")
    @XmlElement(name = "ProtectACityID")
    private int protectACityID;

    @FieldDoc("带Protect为保护航变信息")
    @JsonProperty("ProtectACityName")
    @XmlElement(name = "ProtectACityName")
    private String protectACityName;

    @FieldDoc("带Protect为保护航变信息")
    @JsonProperty("ProtectClass")
    @XmlElement(name = "ProtectClass")
    private String protectClass;

    @FieldDoc("带Protect为保护航变信息")
    @JsonProperty("ProtectClassDesc")
    @XmlElement(name = "ProtectClassDesc")
    private String protectClassDesc;

    @FieldDoc("带Protect为保护航变信息")
    @JsonProperty("ProtectSubClass")
    @XmlElement(name = "ProtectSubClass")
    private String protectSubClass;

    @FieldDoc("带Protect为保护航变信息")
    @JsonProperty("ProtectCraftType")
    @XmlElement(name = "ProtectCraftType")
    private String protectCraftType;

    @FieldDoc("带Protect为原始航变信息")
    @JsonProperty("ProtectAirLine")
    @XmlElement(name = "ProtectAirLine")
    private AirLineInfo protectAirLine;

    @FieldDoc("不带Protect,Origin为成行航变信息")
    @JsonProperty("Flight")
    @XmlElement(name = "Flight")
    private String flight;

    @FieldDoc("不带Protect,Origin为成行航变信息")
    @JsonProperty("Ddate")
    @XmlElement(name = "Ddate")
    private long ddate;

    @FieldDoc("不带Protect,Origin为成行航变信息")
    @JsonProperty("Adate")
    @XmlElement(name = "Adate")
    private long adate;

    @FieldDoc("不带Protect,Origin为成行航变信息")
    @JsonProperty("DPort")
    @XmlElement(name = "DPort")
    private String dPort;

    @FieldDoc("不带Protect,Origin为成行航变信息")
    @JsonProperty("DPortName")
    @XmlElement(name = "DPortName")
    private String dPortName;

    @FieldDoc("不带Protect,Origin为成行航变信息")
    @JsonProperty("APort")
    @XmlElement(name = "APort")
    private String aPort;

    @FieldDoc("不带Protect,Origin为成行航变信息")
    @JsonProperty("APortName")
    @XmlElement(name = "APortName")
    private String aPortName;

    @FieldDoc("不带Protect,Origin为成行航变信息")
    @JsonProperty("DBuilding")
    @XmlElement(name = "DBuilding")
    private String dBuilding;

    @FieldDoc("不带Protect,Origin为成行航变信息")
    @JsonProperty("ABuilding")
    @XmlElement(name = "ABuilding")
    private String aBuilding;

    @FieldDoc("不带Protect,Origin为成行航变信息")
    @JsonProperty("DCityID")
    @XmlElement(name = "DCityID")
    private int dCityID;

    @FieldDoc("不带Protect,Origin为成行航变信息")
    @JsonProperty("DCityName")
    @XmlElement(name = "DCityName")
    private String dCityName;

    @FieldDoc("不带Protect,Origin为成行航变信息")
    @JsonProperty("ACityID")
    @XmlElement(name = "ACityID")
    private int aCityID;

    @FieldDoc("不带Protect,Origin为成行航变信息")
    @JsonProperty("ACityName")
    @XmlElement(name = "ACityName")
    private String aCityName;

    @FieldDoc("不带Protect,Origin为成行航变信息")
    @JsonProperty("Class")
    @XmlElement(name = "Class")
    private String clazz;

    @FieldDoc("不带Protect,Origin为成行航变信息")
    @JsonProperty("ClassDesc")
    @XmlElement(name = "ClassDesc")
    private String classDesc;

    @FieldDoc("不带Protect,Origin为成行航变信息")
    @JsonProperty("SubClass")
    @XmlElement(name = "SubClass")
    private String subClass;

    @FieldDoc("不带Protect,Origin为成行航变信息")
    @JsonProperty("CraftType")
    @XmlElement(name = "CraftType")
    private String craftType;

    @FieldDoc("不带Protect,Origin为成行航变信息")
    @JsonProperty("AirLine")
    @XmlElement(name = "AirLine")
    private AirLineInfo airLine;

    @FieldDoc("票面验证结果")
    @JsonProperty("IsOpen")
    @XmlElement(name = "IsOpen")
    private String isOpen;

    @FieldDoc("test")
    @JsonProperty("IsAutomaticFlight")
    @XmlElement(name = "IsAutomaticFlight")
    private boolean isAutomaticFlight;

    @FieldDoc("test")
    @JsonProperty("IsAgreeProtectFlight")
    @XmlElement(name = "IsAgreeProtectFlight")
    private boolean isAgreeProtectFlight;

    @FieldDoc("test")
    @JsonProperty("ProcessControl")
    @XmlElement(name = "ProcessControl")
    private String processControl;

    @FieldDoc("test")
    @JsonProperty("IsChangeOrderRebook")
    @XmlElement(name = "IsChangeOrderRebook")
    private boolean isChangeOrderRebook;

    @FieldDoc("test")
    @JsonProperty("IsChangeOrderRefund")
    @XmlElement(name = "IsChangeOrderRefund")
    private boolean isChangeOrderRefund;

    @FieldDoc("是否可航变改签")
    @JsonProperty("CanRefundAll")
    @XmlElement(name = "CanRefundAll")
    private String canRefundAll;

    @FieldDoc("来源：" +
            "1:短信  2:航司电话  3:Email  4:清Q  5:客人通知" +
            "6:QQ  7:微信  8:飞友  9:供应商  10:分销商" +
            "11:航司直推  12控位平台  13:Amadeus" +
            "14:Abacus  15:qunar  16:PNR注册  17:艺龙" +
            "18:退票单ID  19:改签单ID")
    @JsonProperty("Source")
    @XmlElement(name = "Source")
    private int source;

    @FieldDoc("改签是否一单一议 (F：不是； T：是)")
    @JsonProperty("RebookSingleTalk")
    @XmlElement(name = "RebookSingleTalk")
    private String rebookSingleTalk;

    @FieldDoc("改签有效起始日期")
    @JsonProperty("RebookFlightDateFrom")
    @XmlElement(name = "RebookFlightDateFrom")
    private String rebookFlightDateFrom;

    @FieldDoc("改签有效截止日期")
    @JsonProperty("RebookFlightDateTo")
    @XmlElement(name = "RebookFlightDateTo")
    private String rebookFlightDateTo;

    @FieldDoc("航变说明")
    @JsonProperty("ChangeDesc")
    @XmlElement(name = "ChangeDesc")
    private String changeDesc;

    @FieldDoc("航班包含所有乘客 是-所有人都航变  否-部分人航变")
    @JsonProperty("ContainAllPsg")
    @XmlElement(name = "ContainAllPsg")
    private boolean containAllPsg;

    /**
     * 航变订单处理流水号
     */
    public long getChangeOrderID() {
        return this.changeOrderID;
    }

    public void setChangeOrderID(long changeOrderID) {
        this.changeOrderID = changeOrderID;
    }

    /**
     * 航变类型 0:航班变化;1:航班取消;2:待定延误;5:取消恢复
     */
    public int getFlightChangeType() {
        return this.flightChangeType;
    }

    public void setFlightChangeType(int flightChangeType) {
        this.flightChangeType = flightChangeType;
    }

    /**
     * 航变范围 T:整个航班变化;C:航班+舱位;F:单个Pnr变化
     */
    public String getChangeRange() {
        return this.changeRange;
    }

    public void setChangeRange(String changeRange) {
        this.changeRange = changeRange;
    }

    /**
     * 国内国际(N:国内;I:国际)
     */
    public String getFlightClass() {
        return this.flightClass;
    }

    public void setFlightClass(String flightClass) {
        this.flightClass = flightClass;
    }

    /**
     * 航程
     */
    public int getSequence() {
        return this.sequence;
    }

    public void setSequence(int sequence) {
        this.sequence = sequence;
    }

    /**
     * 当前操作状态
     */
    public String getChangeStatus() {
        return this.changeStatus;
    }

    public void setChangeStatus(String changeStatus) {
        this.changeStatus = changeStatus;
    }

    /**
     * 后处理状态
     *             (P:改签中F:改签失败S:改签成功
     *             T:退票中 U:退票失败 V:退票成功)
     */
    public String getAfterStatus() {
        return this.afterStatus;
    }

    public void setAfterStatus(String afterStatus) {
        this.afterStatus = afterStatus;
    }

    /**
     * 短信状态
     */
    public String getSmsStatus() {
        return this.smsStatus;
    }

    public void setSmsStatus(String smsStatus) {
        this.smsStatus = smsStatus;
    }

    /**
     * RR状态A:自动RR成功；B:手工RR成功；R:RR失败
     */
    public String getRrStatus() {
        return this.rrStatus;
    }

    public void setRrStatus(String rrStatus) {
        this.rrStatus = rrStatus;
    }

    /**
     * 订单处理状态W:待处理;P:处理中;S:完成
     */
    public String getOrderStatus() {
        return this.orderStatus;
    }

    public void setOrderStatus(String orderStatus) {
        this.orderStatus = orderStatus;
    }

    /**
     * 乘客?
     */
    public String getPassengers() {
        return this.passengers;
    }

    public void setPassengers(String passengers) {
        this.passengers = passengers;
    }

    /**
     * 带Origin为原始航变信息
     */
    public String getOriginFlight() {
        return this.originFlight;
    }

    public void setOriginFlight(String originFlight) {
        this.originFlight = originFlight;
    }

    /**
     * 带Origin为原始航变信息
     */
    public AirLineInfo getOriginAirLine() {
        return this.originAirLine;
    }

    public void setOriginAirLine(AirLineInfo originAirLine) {
        this.originAirLine = originAirLine;
    }

    /**
     * 带Origin为原始航变信息
     */
    public long getOriginDdate() {
        return this.originDdate;
    }

    public void setOriginDdate(long originDdate) {
        this.originDdate = originDdate;
    }

    /**
     * 带Origin为原始航变信息
     */
    public long getOriginAdate() {
        return this.originAdate;
    }

    public void setOriginAdate(long originAdate) {
        this.originAdate = originAdate;
    }

    /**
     * 带Origin为原始航变信息
     */
    public String getOriginDPort() {
        return this.originDPort;
    }

    public void setOriginDPort(String originDPort) {
        this.originDPort = originDPort;
    }

    /**
     * 带Origin为原始航变信息
     */
    public String getOriginDPortName() {
        return this.originDPortName;
    }

    public void setOriginDPortName(String originDPortName) {
        this.originDPortName = originDPortName;
    }

    /**
     * 带Origin为原始航变信息
     */
    public String getOriginAPort() {
        return this.originAPort;
    }

    public void setOriginAPort(String originAPort) {
        this.originAPort = originAPort;
    }

    /**
     * 带Origin为原始航变信息
     */
    public String getOriginAPortName() {
        return this.originAPortName;
    }

    public void setOriginAPortName(String originAPortName) {
        this.originAPortName = originAPortName;
    }

    /**
     * 带Origin为原始航变信息
     */
    public String getOriginDBuilding() {
        return this.originDBuilding;
    }

    public void setOriginDBuilding(String originDBuilding) {
        this.originDBuilding = originDBuilding;
    }

    /**
     * 带Origin为原始航变信息
     */
    public String getOriginABuilding() {
        return this.originABuilding;
    }

    public void setOriginABuilding(String originABuilding) {
        this.originABuilding = originABuilding;
    }

    /**
     * 带Origin为原始航变信息
     */
    public String getOriginClass() {
        return this.originClass;
    }

    public void setOriginClass(String originClass) {
        this.originClass = originClass;
    }

    /**
     * 带Origin为原始航变信息
     */
    public String getOriginClassDesc() {
        return this.originClassDesc;
    }

    public void setOriginClassDesc(String originClassDesc) {
        this.originClassDesc = originClassDesc;
    }

    /**
     * 带Origin为原始航变信息
     */
    public String getOriginSubClass() {
        return this.originSubClass;
    }

    public void setOriginSubClass(String originSubClass) {
        this.originSubClass = originSubClass;
    }

    /**
     * 带Origin为原始航变信息
     */
    public String getOriginCraftType() {
        return this.originCraftType;
    }

    public void setOriginCraftType(String originCraftType) {
        this.originCraftType = originCraftType;
    }

    /**
     * 带Origin为原始航变信息
     */
    public int getOriginDCityID() {
        return this.originDCityID;
    }

    public void setOriginDCityID(int originDCityID) {
        this.originDCityID = originDCityID;
    }

    /**
     * 带Origin为原始航变信息
     */
    public String getOriginDCityName() {
        return this.originDCityName;
    }

    public void setOriginDCityName(String originDCityName) {
        this.originDCityName = originDCityName;
    }

    /**
     * 带Origin为原始航变信息
     */
    public int getOriginACityID() {
        return this.originACityID;
    }

    public void setOriginACityID(int originACityID) {
        this.originACityID = originACityID;
    }

    /**
     * 带Origin为原始航变信息
     */
    public String getOriginACityName() {
        return this.originACityName;
    }

    public void setOriginACityName(String originACityName) {
        this.originACityName = originACityName;
    }

    /**
     * 带Protect为保护航变信息
     */
    public String getProtectFlight() {
        return this.protectFlight;
    }

    public void setProtectFlight(String protectFlight) {
        this.protectFlight = protectFlight;
    }

    /**
     * 带Protect为保护航变信息
     */
    public long getProtectDdate() {
        return this.protectDdate;
    }

    public void setProtectDdate(long protectDdate) {
        this.protectDdate = protectDdate;
    }

    /**
     * 带Protect为保护航变信息
     */
    public long getProtectAdate() {
        return this.protectAdate;
    }

    public void setProtectAdate(long protectAdate) {
        this.protectAdate = protectAdate;
    }

    /**
     * 带Protect为保护航变信息
     */
    public String getProtectDPort() {
        return this.protectDPort;
    }

    public void setProtectDPort(String protectDPort) {
        this.protectDPort = protectDPort;
    }

    /**
     * 带Protect为保护航变信息
     */
    public String getProtectDPortName() {
        return this.protectDPortName;
    }

    public void setProtectDPortName(String protectDPortName) {
        this.protectDPortName = protectDPortName;
    }

    /**
     * 带Protect为保护航变信息
     */
    public String getProtectAPort() {
        return this.protectAPort;
    }

    public void setProtectAPort(String protectAPort) {
        this.protectAPort = protectAPort;
    }

    /**
     * 带Protect为保护航变信息
     */
    public String getProtectAPortName() {
        return this.protectAPortName;
    }

    public void setProtectAPortName(String protectAPortName) {
        this.protectAPortName = protectAPortName;
    }

    /**
     * 带Protect为保护航变信息
     */
    public String getProtectDBuilding() {
        return this.protectDBuilding;
    }

    public void setProtectDBuilding(String protectDBuilding) {
        this.protectDBuilding = protectDBuilding;
    }

    /**
     * 带Protect为保护航变信息
     */
    public String getProtectABuilding() {
        return this.protectABuilding;
    }

    public void setProtectABuilding(String protectABuilding) {
        this.protectABuilding = protectABuilding;
    }

    /**
     * 带Protect为保护航变信息
     */
    public int getProtectDCityID() {
        return this.protectDCityID;
    }

    public void setProtectDCityID(int protectDCityID) {
        this.protectDCityID = protectDCityID;
    }

    /**
     * 带Protect为保护航变信息
     */
    public String getProtectDCityName() {
        return this.protectDCityName;
    }

    public void setProtectDCityName(String protectDCityName) {
        this.protectDCityName = protectDCityName;
    }

    /**
     * 带Protect为保护航变信息
     */
    public int getProtectACityID() {
        return this.protectACityID;
    }

    public void setProtectACityID(int protectACityID) {
        this.protectACityID = protectACityID;
    }

    /**
     * 带Protect为保护航变信息
     */
    public String getProtectACityName() {
        return this.protectACityName;
    }

    public void setProtectACityName(String protectACityName) {
        this.protectACityName = protectACityName;
    }

    /**
     * 带Protect为保护航变信息
     */
    public String getProtectClass() {
        return this.protectClass;
    }

    public void setProtectClass(String protectClass) {
        this.protectClass = protectClass;
    }

    /**
     * 带Protect为保护航变信息
     */
    public String getProtectClassDesc() {
        return this.protectClassDesc;
    }

    public void setProtectClassDesc(String protectClassDesc) {
        this.protectClassDesc = protectClassDesc;
    }

    /**
     * 带Protect为保护航变信息
     */
    public String getProtectSubClass() {
        return this.protectSubClass;
    }

    public void setProtectSubClass(String protectSubClass) {
        this.protectSubClass = protectSubClass;
    }

    /**
     * 带Protect为保护航变信息
     */
    public String getProtectCraftType() {
        return this.protectCraftType;
    }

    public void setProtectCraftType(String protectCraftType) {
        this.protectCraftType = protectCraftType;
    }

    /**
     * 带Protect为原始航变信息
     */
    public AirLineInfo getProtectAirLine() {
        return this.protectAirLine;
    }

    public void setProtectAirLine(AirLineInfo protectAirLine) {
        this.protectAirLine = protectAirLine;
    }

    /**
     * 不带Protect,Origin为成行航变信息
     */
    public String getFlight() {
        return this.flight;
    }

    public void setFlight(String flight) {
        this.flight = flight;
    }

    /**
     * 不带Protect,Origin为成行航变信息
     */
    public long getDdate() {
        return this.ddate;
    }

    public void setDdate(long ddate) {
        this.ddate = ddate;
    }

    /**
     * 不带Protect,Origin为成行航变信息
     */
    public long getAdate() {
        return this.adate;
    }

    public void setAdate(long adate) {
        this.adate = adate;
    }

    /**
     * 不带Protect,Origin为成行航变信息
     */
    public String getDPort() {
        return this.dPort;
    }

    public void setDPort(String dPort) {
        this.dPort = dPort;
    }

    /**
     * 不带Protect,Origin为成行航变信息
     */
    public String getDPortName() {
        return this.dPortName;
    }

    public void setDPortName(String dPortName) {
        this.dPortName = dPortName;
    }

    /**
     * 不带Protect,Origin为成行航变信息
     */
    public String getAPort() {
        return this.aPort;
    }

    public void setAPort(String aPort) {
        this.aPort = aPort;
    }

    /**
     * 不带Protect,Origin为成行航变信息
     */
    public String getAPortName() {
        return this.aPortName;
    }

    public void setAPortName(String aPortName) {
        this.aPortName = aPortName;
    }

    /**
     * 不带Protect,Origin为成行航变信息
     */
    public String getDBuilding() {
        return this.dBuilding;
    }

    public void setDBuilding(String dBuilding) {
        this.dBuilding = dBuilding;
    }

    /**
     * 不带Protect,Origin为成行航变信息
     */
    public String getABuilding() {
        return this.aBuilding;
    }

    public void setABuilding(String aBuilding) {
        this.aBuilding = aBuilding;
    }

    /**
     * 不带Protect,Origin为成行航变信息
     */
    public int getDCityID() {
        return this.dCityID;
    }

    public void setDCityID(int dCityID) {
        this.dCityID = dCityID;
    }

    /**
     * 不带Protect,Origin为成行航变信息
     */
    public String getDCityName() {
        return this.dCityName;
    }

    public void setDCityName(String dCityName) {
        this.dCityName = dCityName;
    }

    /**
     * 不带Protect,Origin为成行航变信息
     */
    public int getACityID() {
        return this.aCityID;
    }

    public void setACityID(int aCityID) {
        this.aCityID = aCityID;
    }

    /**
     * 不带Protect,Origin为成行航变信息
     */
    public String getACityName() {
        return this.aCityName;
    }

    public void setACityName(String aCityName) {
        this.aCityName = aCityName;
    }

    /**
     * 不带Protect,Origin为成行航变信息
     */
    public String getClazz() {
        return this.clazz;
    }

    public void setClazz(String clazz) {
        this.clazz = clazz;
    }

    /**
     * 不带Protect,Origin为成行航变信息
     */
    public String getClassDesc() {
        return this.classDesc;
    }

    public void setClassDesc(String classDesc) {
        this.classDesc = classDesc;
    }

    /**
     * 不带Protect,Origin为成行航变信息
     */
    public String getSubClass() {
        return this.subClass;
    }

    public void setSubClass(String subClass) {
        this.subClass = subClass;
    }

    /**
     * 不带Protect,Origin为成行航变信息
     */
    public String getCraftType() {
        return this.craftType;
    }

    public void setCraftType(String craftType) {
        this.craftType = craftType;
    }

    /**
     * 不带Protect,Origin为成行航变信息
     */
    public AirLineInfo getAirLine() {
        return this.airLine;
    }

    public void setAirLine(AirLineInfo airLine) {
        this.airLine = airLine;
    }

    /**
     * 票面验证结果
     */
    public String getIsOpen() {
        return this.isOpen;
    }

    public void setIsOpen(String isOpen) {
        this.isOpen = isOpen;
    }

    /**
     * test
     */
    public boolean getIsAutomaticFlight() {
        return this.isAutomaticFlight;
    }

    public void setIsAutomaticFlight(boolean isAutomaticFlight) {
        this.isAutomaticFlight = isAutomaticFlight;
    }

    /**
     * test
     */
    public boolean getIsAgreeProtectFlight() {
        return this.isAgreeProtectFlight;
    }

    public void setIsAgreeProtectFlight(boolean isAgreeProtectFlight) {
        this.isAgreeProtectFlight = isAgreeProtectFlight;
    }

    /**
     * test
     */
    public String getProcessControl() {
        return this.processControl;
    }

    public void setProcessControl(String processControl) {
        this.processControl = processControl;
    }

    /**
     * test
     */
    public boolean getIsChangeOrderRebook() {
        return this.isChangeOrderRebook;
    }

    public void setIsChangeOrderRebook(boolean isChangeOrderRebook) {
        this.isChangeOrderRebook = isChangeOrderRebook;
    }

    /**
     * test
     */
    public boolean getIsChangeOrderRefund() {
        return this.isChangeOrderRefund;
    }

    public void setIsChangeOrderRefund(boolean isChangeOrderRefund) {
        this.isChangeOrderRefund = isChangeOrderRefund;
    }

    /**
     * 是否可航变改签
     */
    public String getCanRefundAll() {
        return this.canRefundAll;
    }

    public void setCanRefundAll(String canRefundAll) {
        this.canRefundAll = canRefundAll;
    }

    /**
     * 来源：
     *             1:短信  2:航司电话  3:Email  4:清Q  5:客人通知
     *             6:QQ  7:微信  8:飞友  9:供应商  10:分销商
     *             11:航司直推  12控位平台  13:Amadeus
     *             14:Abacus  15:qunar  16:PNR注册  17:艺龙
     *             18:退票单ID  19:改签单ID
     */
    public int getSource() {
        return this.source;
    }

    public void setSource(int source) {
        this.source = source;
    }

    /**
     * 改签是否一单一议 (F：不是； T：是)
     */
    public String getRebookSingleTalk() {
        return this.rebookSingleTalk;
    }

    public void setRebookSingleTalk(String rebookSingleTalk) {
        this.rebookSingleTalk = rebookSingleTalk;
    }

    /**
     * 改签有效起始日期
     */
    public String getRebookFlightDateFrom() {
        return this.rebookFlightDateFrom;
    }

    public void setRebookFlightDateFrom(String rebookFlightDateFrom) {
        this.rebookFlightDateFrom = rebookFlightDateFrom;
    }

    /**
     * 改签有效截止日期
     */
    public String getRebookFlightDateTo() {
        return this.rebookFlightDateTo;
    }

    public void setRebookFlightDateTo(String rebookFlightDateTo) {
        this.rebookFlightDateTo = rebookFlightDateTo;
    }

    /**
     * 航变说明
     */
    public String getChangeDesc() {
        return this.changeDesc;
    }

    public void setChangeDesc(String changeDesc) {
        this.changeDesc = changeDesc;
    }

    /**
     * 航班包含所有乘客 是-所有人都航变  否-部分人航变
     */
    public boolean getContainAllPsg() {
        return this.containAllPsg;
    }

    public void setContainAllPsg(boolean containAllPsg) {
        this.containAllPsg = containAllPsg;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final ChangeOrder other = (ChangeOrder)obj;
        return
            Objects.equal(this.changeOrderID, other.changeOrderID) && 
            Objects.equal(this.flightChangeType, other.flightChangeType) && 
            Objects.equal(this.changeRange, other.changeRange) && 
            Objects.equal(this.flightClass, other.flightClass) && 
            Objects.equal(this.sequence, other.sequence) && 
            Objects.equal(this.changeStatus, other.changeStatus) && 
            Objects.equal(this.afterStatus, other.afterStatus) && 
            Objects.equal(this.smsStatus, other.smsStatus) && 
            Objects.equal(this.rrStatus, other.rrStatus) && 
            Objects.equal(this.orderStatus, other.orderStatus) && 
            Objects.equal(this.passengers, other.passengers) && 
            Objects.equal(this.originFlight, other.originFlight) && 
            Objects.equal(this.originAirLine, other.originAirLine) && 
            Objects.equal(this.originDdate, other.originDdate) && 
            Objects.equal(this.originAdate, other.originAdate) && 
            Objects.equal(this.originDPort, other.originDPort) && 
            Objects.equal(this.originDPortName, other.originDPortName) && 
            Objects.equal(this.originAPort, other.originAPort) && 
            Objects.equal(this.originAPortName, other.originAPortName) && 
            Objects.equal(this.originDBuilding, other.originDBuilding) && 
            Objects.equal(this.originABuilding, other.originABuilding) && 
            Objects.equal(this.originClass, other.originClass) && 
            Objects.equal(this.originClassDesc, other.originClassDesc) && 
            Objects.equal(this.originSubClass, other.originSubClass) && 
            Objects.equal(this.originCraftType, other.originCraftType) && 
            Objects.equal(this.originDCityID, other.originDCityID) && 
            Objects.equal(this.originDCityName, other.originDCityName) && 
            Objects.equal(this.originACityID, other.originACityID) && 
            Objects.equal(this.originACityName, other.originACityName) && 
            Objects.equal(this.protectFlight, other.protectFlight) && 
            Objects.equal(this.protectDdate, other.protectDdate) && 
            Objects.equal(this.protectAdate, other.protectAdate) && 
            Objects.equal(this.protectDPort, other.protectDPort) && 
            Objects.equal(this.protectDPortName, other.protectDPortName) && 
            Objects.equal(this.protectAPort, other.protectAPort) && 
            Objects.equal(this.protectAPortName, other.protectAPortName) && 
            Objects.equal(this.protectDBuilding, other.protectDBuilding) && 
            Objects.equal(this.protectABuilding, other.protectABuilding) && 
            Objects.equal(this.protectDCityID, other.protectDCityID) && 
            Objects.equal(this.protectDCityName, other.protectDCityName) && 
            Objects.equal(this.protectACityID, other.protectACityID) && 
            Objects.equal(this.protectACityName, other.protectACityName) && 
            Objects.equal(this.protectClass, other.protectClass) && 
            Objects.equal(this.protectClassDesc, other.protectClassDesc) && 
            Objects.equal(this.protectSubClass, other.protectSubClass) && 
            Objects.equal(this.protectCraftType, other.protectCraftType) && 
            Objects.equal(this.protectAirLine, other.protectAirLine) && 
            Objects.equal(this.flight, other.flight) && 
            Objects.equal(this.ddate, other.ddate) && 
            Objects.equal(this.adate, other.adate) && 
            Objects.equal(this.dPort, other.dPort) && 
            Objects.equal(this.dPortName, other.dPortName) && 
            Objects.equal(this.aPort, other.aPort) && 
            Objects.equal(this.aPortName, other.aPortName) && 
            Objects.equal(this.dBuilding, other.dBuilding) && 
            Objects.equal(this.aBuilding, other.aBuilding) && 
            Objects.equal(this.dCityID, other.dCityID) && 
            Objects.equal(this.dCityName, other.dCityName) && 
            Objects.equal(this.aCityID, other.aCityID) && 
            Objects.equal(this.aCityName, other.aCityName) && 
            Objects.equal(this.clazz, other.clazz) && 
            Objects.equal(this.classDesc, other.classDesc) && 
            Objects.equal(this.subClass, other.subClass) && 
            Objects.equal(this.craftType, other.craftType) && 
            Objects.equal(this.airLine, other.airLine) && 
            Objects.equal(this.isOpen, other.isOpen) && 
            Objects.equal(this.isAutomaticFlight, other.isAutomaticFlight) && 
            Objects.equal(this.isAgreeProtectFlight, other.isAgreeProtectFlight) && 
            Objects.equal(this.processControl, other.processControl) && 
            Objects.equal(this.isChangeOrderRebook, other.isChangeOrderRebook) && 
            Objects.equal(this.isChangeOrderRefund, other.isChangeOrderRefund) && 
            Objects.equal(this.canRefundAll, other.canRefundAll) && 
            Objects.equal(this.source, other.source) && 
            Objects.equal(this.rebookSingleTalk, other.rebookSingleTalk) && 
            Objects.equal(this.rebookFlightDateFrom, other.rebookFlightDateFrom) && 
            Objects.equal(this.rebookFlightDateTo, other.rebookFlightDateTo) && 
            Objects.equal(this.changeDesc, other.changeDesc) && 
            Objects.equal(this.containAllPsg, other.containAllPsg);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.changeOrderID);
        result = 31 * result + Objects.hashCode(this.flightChangeType);
        result = 31 * result + Objects.hashCode(this.changeRange);
        result = 31 * result + Objects.hashCode(this.flightClass);
        result = 31 * result + Objects.hashCode(this.sequence);
        result = 31 * result + Objects.hashCode(this.changeStatus);
        result = 31 * result + Objects.hashCode(this.afterStatus);
        result = 31 * result + Objects.hashCode(this.smsStatus);
        result = 31 * result + Objects.hashCode(this.rrStatus);
        result = 31 * result + Objects.hashCode(this.orderStatus);
        result = 31 * result + Objects.hashCode(this.passengers);
        result = 31 * result + Objects.hashCode(this.originFlight);
        result = 31 * result + Objects.hashCode(this.originAirLine);
        result = 31 * result + Objects.hashCode(this.originDdate);
        result = 31 * result + Objects.hashCode(this.originAdate);
        result = 31 * result + Objects.hashCode(this.originDPort);
        result = 31 * result + Objects.hashCode(this.originDPortName);
        result = 31 * result + Objects.hashCode(this.originAPort);
        result = 31 * result + Objects.hashCode(this.originAPortName);
        result = 31 * result + Objects.hashCode(this.originDBuilding);
        result = 31 * result + Objects.hashCode(this.originABuilding);
        result = 31 * result + Objects.hashCode(this.originClass);
        result = 31 * result + Objects.hashCode(this.originClassDesc);
        result = 31 * result + Objects.hashCode(this.originSubClass);
        result = 31 * result + Objects.hashCode(this.originCraftType);
        result = 31 * result + Objects.hashCode(this.originDCityID);
        result = 31 * result + Objects.hashCode(this.originDCityName);
        result = 31 * result + Objects.hashCode(this.originACityID);
        result = 31 * result + Objects.hashCode(this.originACityName);
        result = 31 * result + Objects.hashCode(this.protectFlight);
        result = 31 * result + Objects.hashCode(this.protectDdate);
        result = 31 * result + Objects.hashCode(this.protectAdate);
        result = 31 * result + Objects.hashCode(this.protectDPort);
        result = 31 * result + Objects.hashCode(this.protectDPortName);
        result = 31 * result + Objects.hashCode(this.protectAPort);
        result = 31 * result + Objects.hashCode(this.protectAPortName);
        result = 31 * result + Objects.hashCode(this.protectDBuilding);
        result = 31 * result + Objects.hashCode(this.protectABuilding);
        result = 31 * result + Objects.hashCode(this.protectDCityID);
        result = 31 * result + Objects.hashCode(this.protectDCityName);
        result = 31 * result + Objects.hashCode(this.protectACityID);
        result = 31 * result + Objects.hashCode(this.protectACityName);
        result = 31 * result + Objects.hashCode(this.protectClass);
        result = 31 * result + Objects.hashCode(this.protectClassDesc);
        result = 31 * result + Objects.hashCode(this.protectSubClass);
        result = 31 * result + Objects.hashCode(this.protectCraftType);
        result = 31 * result + Objects.hashCode(this.protectAirLine);
        result = 31 * result + Objects.hashCode(this.flight);
        result = 31 * result + Objects.hashCode(this.ddate);
        result = 31 * result + Objects.hashCode(this.adate);
        result = 31 * result + Objects.hashCode(this.dPort);
        result = 31 * result + Objects.hashCode(this.dPortName);
        result = 31 * result + Objects.hashCode(this.aPort);
        result = 31 * result + Objects.hashCode(this.aPortName);
        result = 31 * result + Objects.hashCode(this.dBuilding);
        result = 31 * result + Objects.hashCode(this.aBuilding);
        result = 31 * result + Objects.hashCode(this.dCityID);
        result = 31 * result + Objects.hashCode(this.dCityName);
        result = 31 * result + Objects.hashCode(this.aCityID);
        result = 31 * result + Objects.hashCode(this.aCityName);
        result = 31 * result + Objects.hashCode(this.clazz);
        result = 31 * result + Objects.hashCode(this.classDesc);
        result = 31 * result + Objects.hashCode(this.subClass);
        result = 31 * result + Objects.hashCode(this.craftType);
        result = 31 * result + Objects.hashCode(this.airLine);
        result = 31 * result + Objects.hashCode(this.isOpen);
        result = 31 * result + Objects.hashCode(this.isAutomaticFlight);
        result = 31 * result + Objects.hashCode(this.isAgreeProtectFlight);
        result = 31 * result + Objects.hashCode(this.processControl);
        result = 31 * result + Objects.hashCode(this.isChangeOrderRebook);
        result = 31 * result + Objects.hashCode(this.isChangeOrderRefund);
        result = 31 * result + Objects.hashCode(this.canRefundAll);
        result = 31 * result + Objects.hashCode(this.source);
        result = 31 * result + Objects.hashCode(this.rebookSingleTalk);
        result = 31 * result + Objects.hashCode(this.rebookFlightDateFrom);
        result = 31 * result + Objects.hashCode(this.rebookFlightDateTo);
        result = 31 * result + Objects.hashCode(this.changeDesc);
        result = 31 * result + Objects.hashCode(this.containAllPsg);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("changeOrderID", changeOrderID)
            .add("flightChangeType", flightChangeType)
            .add("changeRange", changeRange)
            .add("flightClass", flightClass)
            .add("sequence", sequence)
            .add("changeStatus", changeStatus)
            .add("afterStatus", afterStatus)
            .add("smsStatus", smsStatus)
            .add("rrStatus", rrStatus)
            .add("orderStatus", orderStatus)
            .add("passengers", passengers)
            .add("originFlight", originFlight)
            .add("originAirLine", originAirLine)
            .add("originDdate", originDdate)
            .add("originAdate", originAdate)
            .add("originDPort", originDPort)
            .add("originDPortName", originDPortName)
            .add("originAPort", originAPort)
            .add("originAPortName", originAPortName)
            .add("originDBuilding", originDBuilding)
            .add("originABuilding", originABuilding)
            .add("originClass", originClass)
            .add("originClassDesc", originClassDesc)
            .add("originSubClass", originSubClass)
            .add("originCraftType", originCraftType)
            .add("originDCityID", originDCityID)
            .add("originDCityName", originDCityName)
            .add("originACityID", originACityID)
            .add("originACityName", originACityName)
            .add("protectFlight", protectFlight)
            .add("protectDdate", protectDdate)
            .add("protectAdate", protectAdate)
            .add("protectDPort", protectDPort)
            .add("protectDPortName", protectDPortName)
            .add("protectAPort", protectAPort)
            .add("protectAPortName", protectAPortName)
            .add("protectDBuilding", protectDBuilding)
            .add("protectABuilding", protectABuilding)
            .add("protectDCityID", protectDCityID)
            .add("protectDCityName", protectDCityName)
            .add("protectACityID", protectACityID)
            .add("protectACityName", protectACityName)
            .add("protectClass", protectClass)
            .add("protectClassDesc", protectClassDesc)
            .add("protectSubClass", protectSubClass)
            .add("protectCraftType", protectCraftType)
            .add("protectAirLine", protectAirLine)
            .add("flight", flight)
            .add("ddate", ddate)
            .add("adate", adate)
            .add("dPort", dPort)
            .add("dPortName", dPortName)
            .add("aPort", aPort)
            .add("aPortName", aPortName)
            .add("dBuilding", dBuilding)
            .add("aBuilding", aBuilding)
            .add("dCityID", dCityID)
            .add("dCityName", dCityName)
            .add("aCityID", aCityID)
            .add("aCityName", aCityName)
            .add("clazz", clazz)
            .add("classDesc", classDesc)
            .add("subClass", subClass)
            .add("craftType", craftType)
            .add("airLine", airLine)
            .add("isOpen", isOpen)
            .add("isAutomaticFlight", isAutomaticFlight)
            .add("isAgreeProtectFlight", isAgreeProtectFlight)
            .add("processControl", processControl)
            .add("isChangeOrderRebook", isChangeOrderRebook)
            .add("isChangeOrderRefund", isChangeOrderRefund)
            .add("canRefundAll", canRefundAll)
            .add("source", source)
            .add("rebookSingleTalk", rebookSingleTalk)
            .add("rebookFlightDateFrom", rebookFlightDateFrom)
            .add("rebookFlightDateTo", rebookFlightDateTo)
            .add("changeDesc", changeDesc)
            .add("containAllPsg", containAllPsg)
            .toString();
    }
}