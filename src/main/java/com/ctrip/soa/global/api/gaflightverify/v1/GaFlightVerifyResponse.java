/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.gaflightverify.v1;

import com.ctrip.soa.global.api.flightcommon.v1.GaVerifyFlightStatus;
import com.ctriposs.baiji.rpc.common.HasResponseStatus;
import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.ctriposs.baiji.rpc.common.types.ResponseStatusType;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.math.BigDecimal;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 国内机票满仓查询返回值
 */
@DtoDoc("国内机票满仓查询返回值")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlRootElement(name = "GaFlightVerifyResponse", namespace = "http://soa.ctrip.com/Global/API/GaFlightVerify/v1")
@XmlType(name = "GaFlightVerifyResponse", propOrder = {
    "responseStatus",
    "status",
    "favCheckRouteInfoList",
    "errorMsg",
    "tokenNumber",
    "newPrice"
})
@SuppressWarnings("all")
public class GaFlightVerifyResponse implements HasResponseStatus {

    private static final long serialVersionUID = 1L;

    public GaFlightVerifyResponse(
        ResponseStatusType responseStatus, 
        GaVerifyFlightStatus status, 
        List<FavCheckRouteInfo> favCheckRouteInfoList, 
        String errorMsg, 
        String tokenNumber, 
        BigDecimal newPrice) {
        this.responseStatus = responseStatus;
        this.status = status;
        this.favCheckRouteInfoList = favCheckRouteInfoList;
        this.errorMsg = errorMsg;
        this.tokenNumber = tokenNumber;
        this.newPrice = newPrice;
    }

    public GaFlightVerifyResponse() {
    }

    @FieldDoc("SOA2.0返回头部信息")
    @JsonProperty("ResponseStatus")
    @XmlElement(name = "ResponseStatus")
    private ResponseStatusType responseStatus;

    @FieldDoc("状态")
    @JsonProperty("Status")
    @XmlElement(name = "Status")
    private GaVerifyFlightStatus status;

    @FieldDoc("航线、剩余票量信息")
    @JsonProperty("FavCheckRouteInfoList")
    @XmlElement(name = "FavCheckRouteInfoList")
    private List<FavCheckRouteInfo> favCheckRouteInfoList;

    @FieldDoc("错误消息,正确为空")
    @JsonProperty("ErrorMsg")
    @XmlElement(name = "ErrorMsg")
    private String errorMsg;

    @JsonProperty("TokenNumber")
    @XmlElement(name = "TokenNumber")
    private String tokenNumber;

    @FieldDoc("最新价格")
    @JsonProperty("NewPrice")
    @XmlElement(name = "NewPrice")
    private BigDecimal newPrice;

    /**
     * SOA2.0返回头部信息
     */
    public ResponseStatusType getResponseStatus() {
        return this.responseStatus;
    }

    public void setResponseStatus(ResponseStatusType responseStatus) {
        this.responseStatus = responseStatus;
    }

    /**
     * 状态
     */
    public GaVerifyFlightStatus getStatus() {
        return this.status;
    }

    public void setStatus(GaVerifyFlightStatus status) {
        this.status = status;
    }

    /**
     * 航线、剩余票量信息
     */
    public List<FavCheckRouteInfo> getFavCheckRouteInfoList() {
        return this.favCheckRouteInfoList;
    }

    public void setFavCheckRouteInfoList(List<FavCheckRouteInfo> favCheckRouteInfoList) {
        this.favCheckRouteInfoList = favCheckRouteInfoList;
    }

    /**
     * 错误消息,正确为空
     */
    public String getErrorMsg() {
        return this.errorMsg;
    }

    public void setErrorMsg(String errorMsg) {
        this.errorMsg = errorMsg;
    }

    public String getTokenNumber() {
        return this.tokenNumber;
    }

    public void setTokenNumber(String tokenNumber) {
        this.tokenNumber = tokenNumber;
    }

    /**
     * 最新价格
     */
    public BigDecimal getNewPrice() {
        return this.newPrice;
    }

    public void setNewPrice(BigDecimal newPrice) {
        this.newPrice = newPrice;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final GaFlightVerifyResponse other = (GaFlightVerifyResponse)obj;
        return
            Objects.equal(this.responseStatus, other.responseStatus) && 
            Objects.equal(this.status, other.status) && 
            Objects.equal(this.favCheckRouteInfoList, other.favCheckRouteInfoList) && 
            Objects.equal(this.errorMsg, other.errorMsg) && 
            Objects.equal(this.tokenNumber, other.tokenNumber) && 
            Objects.equal(this.newPrice, other.newPrice);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.responseStatus);
        result = 31 * result + Objects.hashCode(this.status);
        result = 31 * result + Objects.hashCode(this.favCheckRouteInfoList);
        result = 31 * result + Objects.hashCode(this.errorMsg);
        result = 31 * result + Objects.hashCode(this.tokenNumber);
        result = 31 * result + Objects.hashCode(this.newPrice);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("responseStatus", responseStatus)
            .add("status", status)
            .add("favCheckRouteInfoList", favCheckRouteInfoList)
            .add("errorMsg", errorMsg)
            .add("tokenNumber", tokenNumber)
            .add("newPrice", newPrice)
            .toString();
    }
}