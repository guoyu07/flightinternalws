/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.getcitiesisintl.v1;

import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 是否国际城市实体
 */
@DtoDoc("是否国际城市实体")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CityIsIntlDto", propOrder = {
    "code",
    "isIntlResult"
})
@SuppressWarnings("all")
public class CityIsIntlDto  {

    private static final long serialVersionUID = 1L;

    public CityIsIntlDto(
        String code, 
        String isIntlResult) {
        this.code = code;
        this.isIntlResult = isIntlResult;
    }

    public CityIsIntlDto() {
    }

    @FieldDoc("城市或机场三字码")
    @JsonProperty("Code")
    @XmlElement(name = "Code")
    private String code;

    @FieldDoc("I:国际，N:国内，空:未知")
    @JsonProperty("IsIntlResult")
    @XmlElement(name = "IsIntlResult")
    private String isIntlResult;

    /**
     * 城市或机场三字码
     */
    public String getCode() {
        return this.code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    /**
     * I:国际，N:国内，空:未知
     */
    public String getIsIntlResult() {
        return this.isIntlResult;
    }

    public void setIsIntlResult(String isIntlResult) {
        this.isIntlResult = isIntlResult;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final CityIsIntlDto other = (CityIsIntlDto)obj;
        return
            Objects.equal(this.code, other.code) && 
            Objects.equal(this.isIntlResult, other.isIntlResult);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.code);
        result = 31 * result + Objects.hashCode(this.isIntlResult);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("code", code)
            .add("isIntlResult", isIntlResult)
            .toString();
    }
}