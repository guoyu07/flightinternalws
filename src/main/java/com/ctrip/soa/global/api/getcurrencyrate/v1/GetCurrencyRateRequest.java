/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.getcurrencyrate.v1;

import com.ctrip.soa.global.api.comm.head.v1.Head;
import com.ctrip.soa.global.api.flightcommon.v1.GaFlightSettlementCurrencyType;
import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 获取币种汇率请求
 */
@DtoDoc("获取币种汇率请求")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlRootElement(name = "GetCurrencyRateRequest", namespace = "http://soa.ctrip.com/Global/API/GetCurrencyRate/v1")
@XmlType(name = "GetCurrencyRateRequest", propOrder = {
    "head",
    "sourceCurrency",
    "targetCurrency",
    "exchangeRateType"
})
@SuppressWarnings("all")
public class GetCurrencyRateRequest  {

    private static final long serialVersionUID = 1L;

    public GetCurrencyRateRequest(
        Head head, 
        GaFlightSettlementCurrencyType sourceCurrency, 
        GaFlightSettlementCurrencyType targetCurrency, 
        String exchangeRateType) {
        this.head = head;
        this.sourceCurrency = sourceCurrency;
        this.targetCurrency = targetCurrency;
        this.exchangeRateType = exchangeRateType;
    }

    public GetCurrencyRateRequest() {
    }

    @FieldDoc("SOA2.0请求头部信息")
    @JsonProperty("Head")
    @XmlElement(name = "Head")
    private Head head;

    @FieldDoc("原币种")
    @JsonProperty("SourceCurrency")
    @XmlElement(name = "SourceCurrency")
    private GaFlightSettlementCurrencyType sourceCurrency;

    @FieldDoc("目标币种")
    @JsonProperty("TargetCurrency")
    @XmlElement(name = "TargetCurrency")
    private GaFlightSettlementCurrencyType targetCurrency;

    @FieldDoc("空为一般汇率；“PayPal”为PayPal支付用汇率")
    @JsonProperty("ExchangeRateType")
    @XmlElement(name = "ExchangeRateType")
    private String exchangeRateType;

    /**
     * SOA2.0请求头部信息
     */
    public Head getHead() {
        return this.head;
    }

    public void setHead(Head head) {
        this.head = head;
    }

    /**
     * 原币种
     */
    public GaFlightSettlementCurrencyType getSourceCurrency() {
        return this.sourceCurrency;
    }

    public void setSourceCurrency(GaFlightSettlementCurrencyType sourceCurrency) {
        this.sourceCurrency = sourceCurrency;
    }

    /**
     * 目标币种
     */
    public GaFlightSettlementCurrencyType getTargetCurrency() {
        return this.targetCurrency;
    }

    public void setTargetCurrency(GaFlightSettlementCurrencyType targetCurrency) {
        this.targetCurrency = targetCurrency;
    }

    /**
     * 空为一般汇率；“PayPal”为PayPal支付用汇率
     */
    public String getExchangeRateType() {
        return this.exchangeRateType;
    }

    public void setExchangeRateType(String exchangeRateType) {
        this.exchangeRateType = exchangeRateType;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final GetCurrencyRateRequest other = (GetCurrencyRateRequest)obj;
        return
            Objects.equal(this.head, other.head) && 
            Objects.equal(this.sourceCurrency, other.sourceCurrency) && 
            Objects.equal(this.targetCurrency, other.targetCurrency) && 
            Objects.equal(this.exchangeRateType, other.exchangeRateType);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.head);
        result = 31 * result + Objects.hashCode(this.sourceCurrency);
        result = 31 * result + Objects.hashCode(this.targetCurrency);
        result = 31 * result + Objects.hashCode(this.exchangeRateType);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("head", head)
            .add("sourceCurrency", sourceCurrency)
            .add("targetCurrency", targetCurrency)
            .add("exchangeRateType", exchangeRateType)
            .toString();
    }
}