/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.gaflightintlverify.v1;

import com.ctrip.soa.global.api.comm.head.v1.Head;
import com.ctrip.soa.global.api.flightcommon.v1.FlightSearchInfo;
import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 国际机票满仓查询
 */
@DtoDoc("国际机票满仓查询")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlRootElement(name = "GaFlightIntlVerifyRequest", namespace = "http://soa.ctrip.com/Global/API/GaFlightIntlVerify/v1")
@XmlType(name = "GaFlightIntlVerifyRequest", propOrder = {
    "head",
    "verifyOption",
    "orderID",
    "flightSearchInfo",
    "bookabilityTokenNumber",
    "reprincingTokenNumber",
    "isSynchronized"
})
@SuppressWarnings("all")
public class GaFlightIntlVerifyRequest  {

    private static final long serialVersionUID = 1L;

    public GaFlightIntlVerifyRequest(
        Head head, 
        int verifyOption, 
        long orderID, 
        FlightSearchInfo flightSearchInfo, 
        String bookabilityTokenNumber, 
        String reprincingTokenNumber, 
        boolean isSynchronized) {
        this.head = head;
        this.verifyOption = verifyOption;
        this.orderID = orderID;
        this.flightSearchInfo = flightSearchInfo;
        this.bookabilityTokenNumber = bookabilityTokenNumber;
        this.reprincingTokenNumber = reprincingTokenNumber;
        this.isSynchronized = isSynchronized;
    }

    public GaFlightIntlVerifyRequest() {
    }

    @FieldDoc("SOA2.0请求头部信息")
    @JsonProperty("Head")
    @XmlElement(name = "Head")
    private Head head;

    @FieldDoc("请求类型 1:满仓 2运价 3:满仓+运价")
    @JsonProperty("VerifyOption")
    @XmlElement(name = "VerifyOption")
    private int verifyOption;

    @FieldDoc("订单ID,简化接口不用")
    @JsonProperty("OrderID")
    @XmlElement(name = "OrderID")
    private long orderID;

    @FieldDoc("查询、反查关键信息")
    @JsonProperty("FlightSearchInfo")
    @XmlElement(name = "FlightSearchInfo")
    private FlightSearchInfo flightSearchInfo;

    @FieldDoc("可定检查TokenNumber")
    @JsonProperty("BookabilityTokenNumber")
    @XmlElement(name = "BookabilityTokenNumber")
    private String bookabilityTokenNumber;

    @FieldDoc("运价检查TokenNumber")
    @JsonProperty("ReprincingTokenNumber")
    @XmlElement(name = "ReprincingTokenNumber")
    private String reprincingTokenNumber;

    @FieldDoc("是否同步")
    @JsonProperty("IsSynchronized")
    @XmlElement(name = "IsSynchronized")
    private boolean isSynchronized;

    /**
     * SOA2.0请求头部信息
     */
    public Head getHead() {
        return this.head;
    }

    public void setHead(Head head) {
        this.head = head;
    }

    /**
     * 请求类型 1:满仓 2运价 3:满仓+运价
     */
    public int getVerifyOption() {
        return this.verifyOption;
    }

    public void setVerifyOption(int verifyOption) {
        this.verifyOption = verifyOption;
    }

    /**
     * 订单ID,简化接口不用
     */
    public long getOrderID() {
        return this.orderID;
    }

    public void setOrderID(long orderID) {
        this.orderID = orderID;
    }

    /**
     * 查询、反查关键信息
     */
    public FlightSearchInfo getFlightSearchInfo() {
        return this.flightSearchInfo;
    }

    public void setFlightSearchInfo(FlightSearchInfo flightSearchInfo) {
        this.flightSearchInfo = flightSearchInfo;
    }

    /**
     * 可定检查TokenNumber
     */
    public String getBookabilityTokenNumber() {
        return this.bookabilityTokenNumber;
    }

    public void setBookabilityTokenNumber(String bookabilityTokenNumber) {
        this.bookabilityTokenNumber = bookabilityTokenNumber;
    }

    /**
     * 运价检查TokenNumber
     */
    public String getReprincingTokenNumber() {
        return this.reprincingTokenNumber;
    }

    public void setReprincingTokenNumber(String reprincingTokenNumber) {
        this.reprincingTokenNumber = reprincingTokenNumber;
    }

    /**
     * 是否同步
     */
    public boolean getIsSynchronized() {
        return this.isSynchronized;
    }

    public void setIsSynchronized(boolean isSynchronized) {
        this.isSynchronized = isSynchronized;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final GaFlightIntlVerifyRequest other = (GaFlightIntlVerifyRequest)obj;
        return
            Objects.equal(this.head, other.head) && 
            Objects.equal(this.verifyOption, other.verifyOption) && 
            Objects.equal(this.orderID, other.orderID) && 
            Objects.equal(this.flightSearchInfo, other.flightSearchInfo) && 
            Objects.equal(this.bookabilityTokenNumber, other.bookabilityTokenNumber) && 
            Objects.equal(this.reprincingTokenNumber, other.reprincingTokenNumber) && 
            Objects.equal(this.isSynchronized, other.isSynchronized);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.head);
        result = 31 * result + Objects.hashCode(this.verifyOption);
        result = 31 * result + Objects.hashCode(this.orderID);
        result = 31 * result + Objects.hashCode(this.flightSearchInfo);
        result = 31 * result + Objects.hashCode(this.bookabilityTokenNumber);
        result = 31 * result + Objects.hashCode(this.reprincingTokenNumber);
        result = 31 * result + Objects.hashCode(this.isSynchronized);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("head", head)
            .add("verifyOption", verifyOption)
            .add("orderID", orderID)
            .add("flightSearchInfo", flightSearchInfo)
            .add("bookabilityTokenNumber", bookabilityTokenNumber)
            .add("reprincingTokenNumber", reprincingTokenNumber)
            .add("isSynchronized", isSynchronized)
            .toString();
    }
}