/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.gagetflightpicinfo.v1;

import com.ctrip.soa.global.api.comm.head.v1.Head;
import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementWrapper;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 国际机票提交订单
 */
@DtoDoc("国际机票提交订单")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlRootElement(name = "GaGetFlightPicInfoRequest", namespace = "http://soa.ctrip.com/Global/API/GaGetFlightPicInfo/v1")
@XmlType(name = "GaGetFlightPicInfoRequest", propOrder = {
    "head",
    "getFlightPicKeyInfoList"
})
@SuppressWarnings("all")
public class GaGetFlightPicInfoRequest  {

    private static final long serialVersionUID = 1L;

    public GaGetFlightPicInfoRequest(
        Head head, 
        List<GetFlightPicKeyInfo> getFlightPicKeyInfoList) {
        this.head = head;
        this.getFlightPicKeyInfoList = getFlightPicKeyInfoList;
    }

    public GaGetFlightPicInfoRequest() {
    }

    @FieldDoc("SOA2.0请求头部信息")
    @JsonProperty("Head")
    @XmlElement(name = "Head")
    private Head head;

    @FieldDoc("查询多航班舱内图")
    @JsonProperty("GetFlightPicKeyInfoList")
    @XmlElement(name = "GetFlightPicKeyInfo")
    @XmlElementWrapper(name = "GetFlightPicKeyInfoList")
    private List<GetFlightPicKeyInfo> getFlightPicKeyInfoList;

    /**
     * SOA2.0请求头部信息
     */
    public Head getHead() {
        return this.head;
    }

    public void setHead(Head head) {
        this.head = head;
    }

    /**
     * 查询多航班舱内图
     */
    public List<GetFlightPicKeyInfo> getGetFlightPicKeyInfoList() {
        return this.getFlightPicKeyInfoList;
    }

    public void setGetFlightPicKeyInfoList(List<GetFlightPicKeyInfo> getFlightPicKeyInfoList) {
        this.getFlightPicKeyInfoList = getFlightPicKeyInfoList;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final GaGetFlightPicInfoRequest other = (GaGetFlightPicInfoRequest)obj;
        return
            Objects.equal(this.head, other.head) && 
            Objects.equal(this.getFlightPicKeyInfoList, other.getFlightPicKeyInfoList);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.head);
        result = 31 * result + Objects.hashCode(this.getFlightPicKeyInfoList);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("head", head)
            .add("getFlightPicKeyInfoList", getFlightPicKeyInfoList)
            .toString();
    }
}