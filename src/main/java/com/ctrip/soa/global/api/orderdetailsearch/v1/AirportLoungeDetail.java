/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.orderdetailsearch.v1;

import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 休息室信息节点
 */
@DtoDoc("休息室信息节点")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AirportLoungeDetail", propOrder = {
    "hasPurchasedLoungeService",
    "airportLoungeList"
})
@SuppressWarnings("all")
public class AirportLoungeDetail  {

    private static final long serialVersionUID = 1L;

    public AirportLoungeDetail(
        boolean hasPurchasedLoungeService, 
        List<AirportLoungeEntity> airportLoungeList) {
        this.hasPurchasedLoungeService = hasPurchasedLoungeService;
        this.airportLoungeList = airportLoungeList;
    }

    public AirportLoungeDetail() {
    }

    @FieldDoc("是否购买了休息室")
    @JsonProperty("HasPurchasedLoungeService")
    @XmlElement(name = "HasPurchasedLoungeService")
    private boolean hasPurchasedLoungeService;

    @FieldDoc("休息室列表")
    @JsonProperty("AirportLoungeList")
    @XmlElement(name = "AirportLoungeList")
    private List<AirportLoungeEntity> airportLoungeList;

    /**
     * 是否购买了休息室
     */
    public boolean getHasPurchasedLoungeService() {
        return this.hasPurchasedLoungeService;
    }

    public void setHasPurchasedLoungeService(boolean hasPurchasedLoungeService) {
        this.hasPurchasedLoungeService = hasPurchasedLoungeService;
    }

    /**
     * 休息室列表
     */
    public List<AirportLoungeEntity> getAirportLoungeList() {
        return this.airportLoungeList;
    }

    public void setAirportLoungeList(List<AirportLoungeEntity> airportLoungeList) {
        this.airportLoungeList = airportLoungeList;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final AirportLoungeDetail other = (AirportLoungeDetail)obj;
        return
            Objects.equal(this.hasPurchasedLoungeService, other.hasPurchasedLoungeService) && 
            Objects.equal(this.airportLoungeList, other.airportLoungeList);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.hasPurchasedLoungeService);
        result = 31 * result + Objects.hashCode(this.airportLoungeList);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("hasPurchasedLoungeService", hasPurchasedLoungeService)
            .add("airportLoungeList", airportLoungeList)
            .toString();
    }
}