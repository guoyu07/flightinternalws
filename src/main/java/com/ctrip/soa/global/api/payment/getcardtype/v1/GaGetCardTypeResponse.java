/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.payment.getcardtype.v1;

import com.ctrip.soa.global.api.payment.paymentcommon.v1.PaymentWayEntity;
import com.ctriposs.baiji.rpc.common.HasResponseStatus;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.ctriposs.baiji.rpc.common.types.ResponseStatusType;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlRootElement(name = "GaGetCardTypeResponse", namespace = "http://soa.ctrip.com/Global/API/Payment/GetCardType/v1")
@XmlType(name = "GaGetCardTypeResponse", propOrder = {
    "responseStatus",
    "cardType",
    "getResult"
})
@SuppressWarnings("all")
public class GaGetCardTypeResponse implements HasResponseStatus {

    private static final long serialVersionUID = 1L;

    public GaGetCardTypeResponse(
        ResponseStatusType responseStatus, 
        PaymentWayEntity cardType, 
        int getResult) {
        this.responseStatus = responseStatus;
        this.cardType = cardType;
        this.getResult = getResult;
    }

    public GaGetCardTypeResponse() {
    }

    @JsonProperty("ResponseStatus")
    @XmlElement(name = "ResponseStatus")
    private ResponseStatusType responseStatus;

    @JsonProperty("CardType")
    @XmlElement(name = "CardType")
    private PaymentWayEntity cardType;

    @FieldDoc("获取结果 0 成功 -1 卡号黑名单 -2卡号不支持")
    @JsonProperty("GetResult")
    @XmlElement(name = "GetResult")
    private int getResult;

    public ResponseStatusType getResponseStatus() {
        return this.responseStatus;
    }

    public void setResponseStatus(ResponseStatusType responseStatus) {
        this.responseStatus = responseStatus;
    }

    public PaymentWayEntity getCardType() {
        return this.cardType;
    }

    public void setCardType(PaymentWayEntity cardType) {
        this.cardType = cardType;
    }

    /**
     * 获取结果 0 成功 -1 卡号黑名单 -2卡号不支持
     */
    public int getGetResult() {
        return this.getResult;
    }

    public void setGetResult(int getResult) {
        this.getResult = getResult;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final GaGetCardTypeResponse other = (GaGetCardTypeResponse)obj;
        return
            Objects.equal(this.responseStatus, other.responseStatus) && 
            Objects.equal(this.cardType, other.cardType) && 
            Objects.equal(this.getResult, other.getResult);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.responseStatus);
        result = 31 * result + Objects.hashCode(this.cardType);
        result = 31 * result + Objects.hashCode(this.getResult);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("responseStatus", responseStatus)
            .add("cardType", cardType)
            .add("getResult", getResult)
            .toString();
    }
}