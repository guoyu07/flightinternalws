/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.receiveflightvari.v1;

import com.ctriposs.baiji.rpc.common.HasResponseStatus;
import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.ctriposs.baiji.rpc.common.types.ResponseStatusType;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 返回实体
 */
@DtoDoc("返回实体")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlRootElement(name = "ReceiveFlightVariResponse", namespace = "http://soa.ctrip.com/Global/API/ReceiveFlightVari/v1")
@XmlType(name = "ReceiveFlightVariResponseType", propOrder = {
    "responseStatus",
    "result",
    "resultMessage"
})
@SuppressWarnings("all")
public class ReceiveFlightVariResponseType implements HasResponseStatus {

    private static final long serialVersionUID = 1L;

    public ReceiveFlightVariResponseType(
        ResponseStatusType responseStatus, 
        int result, 
        String resultMessage) {
        this.responseStatus = responseStatus;
        this.result = result;
        this.resultMessage = resultMessage;
    }

    public ReceiveFlightVariResponseType() {
    }

    @FieldDoc("SOA2.0返回头部信息")
    @JsonProperty("ResponseStatus")
    @XmlElement(name = "ResponseStatus")
    private ResponseStatusType responseStatus;

    @FieldDoc("调用结果" +
"0代表成功，其他值均代表失败，具体错误会在之后给出.")
    @JsonProperty("Result")
    @XmlElement(name = "Result")
    private int result;

    @FieldDoc("描述请求成功失败的原因" +
"若调用成功，该值为空；否则为具体的错误描" +
"述信息.")
    @JsonProperty("ResultMessage")
    @XmlElement(name = "ResultMessage")
    private String resultMessage;

    /**
     * SOA2.0返回头部信息
     */
    public ResponseStatusType getResponseStatus() {
        return this.responseStatus;
    }

    public void setResponseStatus(ResponseStatusType responseStatus) {
        this.responseStatus = responseStatus;
    }

    /**
     * 调用结果
     * 0代表成功，其他值均代表失败，具体错误会在之后给出.
     */
    public int getResult() {
        return this.result;
    }

    public void setResult(int result) {
        this.result = result;
    }

    /**
     * 描述请求成功失败的原因
     * 若调用成功，该值为空；否则为具体的错误描
     * 述信息.
     */
    public String getResultMessage() {
        return this.resultMessage;
    }

    public void setResultMessage(String resultMessage) {
        this.resultMessage = resultMessage;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final ReceiveFlightVariResponseType other = (ReceiveFlightVariResponseType)obj;
        return
            Objects.equal(this.responseStatus, other.responseStatus) && 
            Objects.equal(this.result, other.result) && 
            Objects.equal(this.resultMessage, other.resultMessage);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.responseStatus);
        result = 31 * result + Objects.hashCode(this.result);
        result = 31 * result + Objects.hashCode(this.resultMessage);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("responseStatus", responseStatus)
            .add("result", result)
            .add("resultMessage", resultMessage)
            .toString();
    }
}