/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.getmyorderlist.v1;

import com.ctrip.soa.global.api.flightcommon.v1.GaFlightWayType;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.math.BigDecimal;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "MyOrderInfo", propOrder = {
    "actualOrderStatus",
    "bookingDate",
    "flightClass",
    "myFlightInfoList",
    "flightWay",
    "havePay",
    "isHiddenOrder",
    "journeyDateBegin",
    "journeyDateEnd",
    "journeyDescription",
    "orderAmount",
    "orderID",
    "orderOutStatus",
    "orderOutStatusString",
    "passengerNames",
    "prePayType",
    "specialMark",
    "specialPriceType",
    "statusMark",
    "ticketStatus",
    "uid"
})
@SuppressWarnings("all")
public class MyOrderInfo  {

    private static final long serialVersionUID = 1L;

    public MyOrderInfo(
        String actualOrderStatus, 
        long bookingDate, 
        String flightClass, 
        List<MyFlightInfo> myFlightInfoList, 
        GaFlightWayType flightWay, 
        boolean havePay, 
        boolean isHiddenOrder, 
        long journeyDateBegin, 
        long journeyDateEnd, 
        String journeyDescription, 
        BigDecimal orderAmount, 
        long orderID, 
        OrderOutStatus orderOutStatus, 
        String orderOutStatusString, 
        String passengerNames, 
        String prePayType, 
        String specialMark, 
        String specialPriceType, 
        String statusMark, 
        String ticketStatus, 
        String uid) {
        this.actualOrderStatus = actualOrderStatus;
        this.bookingDate = bookingDate;
        this.flightClass = flightClass;
        this.myFlightInfoList = myFlightInfoList;
        this.flightWay = flightWay;
        this.havePay = havePay;
        this.isHiddenOrder = isHiddenOrder;
        this.journeyDateBegin = journeyDateBegin;
        this.journeyDateEnd = journeyDateEnd;
        this.journeyDescription = journeyDescription;
        this.orderAmount = orderAmount;
        this.orderID = orderID;
        this.orderOutStatus = orderOutStatus;
        this.orderOutStatusString = orderOutStatusString;
        this.passengerNames = passengerNames;
        this.prePayType = prePayType;
        this.specialMark = specialMark;
        this.specialPriceType = specialPriceType;
        this.statusMark = statusMark;
        this.ticketStatus = ticketStatus;
        this.uid = uid;
    }

    public MyOrderInfo() {
    }

    @FieldDoc("订单真实状态")
    @JsonProperty("ActualOrderStatus")
    @XmlElement(name = "ActualOrderStatus")
    private String actualOrderStatus;

    @FieldDoc("预定日期")
    @JsonProperty("BookingDate")
    @XmlElement(name = "BookingDate")
    private long bookingDate;

    @FieldDoc("订单类型N:国内；I：国际")
    @JsonProperty("FlightClass")
    @XmlElement(name = "FlightClass")
    private String flightClass;

    @FieldDoc("订单航班信息")
    @JsonProperty("MyFlightInfoList")
    @XmlElement(name = "MyFlightInfoList")
    private List<MyFlightInfo> myFlightInfoList;

    @FieldDoc("航程类型")
    @JsonProperty("FlightWay")
    @XmlElement(name = "FlightWay")
    private GaFlightWayType flightWay;

    @FieldDoc("是否已支付")
    @JsonProperty("HavePay")
    @XmlElement(name = "HavePay")
    private boolean havePay;

    @FieldDoc("是否可以隐藏订单")
    @JsonProperty("IsHiddenOrder")
    @XmlElement(name = "IsHiddenOrder")
    private boolean isHiddenOrder;

    @FieldDoc("行程出发日期")
    @JsonProperty("JourneyDateBegin")
    @XmlElement(name = "JourneyDateBegin")
    private long journeyDateBegin;

    @FieldDoc("行程结束日期")
    @JsonProperty("JourneyDateEnd")
    @XmlElement(name = "JourneyDateEnd")
    private long journeyDateEnd;

    @FieldDoc("行程描述")
    @JsonProperty("JourneyDescription")
    @XmlElement(name = "JourneyDescription")
    private String journeyDescription;

    @FieldDoc("订单金额")
    @JsonProperty("OrderAmount")
    @XmlElement(name = "OrderAmount")
    private BigDecimal orderAmount;

    @FieldDoc("订单号")
    @JsonProperty("OrderID")
    @XmlElement(name = "OrderID")
    private long orderID;

    @FieldDoc("订单状态")
    @JsonProperty("OrderOutStatus")
    @XmlElement(name = "OrderOutStatus")
    private OrderOutStatus orderOutStatus;

    @FieldDoc("订单状态多语言描述")
    @JsonProperty("OrderOutStatusString")
    @XmlElement(name = "OrderOutStatusString")
    private String orderOutStatusString;

    @FieldDoc("乘机人")
    @JsonProperty("PassengerNames")
    @XmlElement(name = "PassengerNames")
    private String passengerNames;

    @FieldDoc("支付方式多语言描述")
    @JsonProperty("PrePayType")
    @XmlElement(name = "PrePayType")
    private String prePayType;

    @FieldDoc("特殊标记")
    @JsonProperty("SpecialMark")
    @XmlElement(name = "SpecialMark")
    private String specialMark;

    @FieldDoc("特价类型多语言描述")
    @JsonProperty("SpecialPriceType")
    @XmlElement(name = "SpecialPriceType")
    private String specialPriceType;

    @FieldDoc("订单状态标记")
    @JsonProperty("StatusMark")
    @XmlElement(name = "StatusMark")
    private String statusMark;

    @FieldDoc("是否暂缓")
    @JsonProperty("TicketStatus")
    @XmlElement(name = "TicketStatus")
    private String ticketStatus;

    @FieldDoc("订单客户ID")
    @JsonProperty("UID")
    @XmlElement(name = "UID")
    private String uid;

    /**
     * 订单真实状态
     */
    public String getActualOrderStatus() {
        return this.actualOrderStatus;
    }

    public void setActualOrderStatus(String actualOrderStatus) {
        this.actualOrderStatus = actualOrderStatus;
    }

    /**
     * 预定日期
     */
    public long getBookingDate() {
        return this.bookingDate;
    }

    public void setBookingDate(long bookingDate) {
        this.bookingDate = bookingDate;
    }

    /**
     * 订单类型N:国内；I：国际
     */
    public String getFlightClass() {
        return this.flightClass;
    }

    public void setFlightClass(String flightClass) {
        this.flightClass = flightClass;
    }

    /**
     * 订单航班信息
     */
    public List<MyFlightInfo> getMyFlightInfoList() {
        return this.myFlightInfoList;
    }

    public void setMyFlightInfoList(List<MyFlightInfo> myFlightInfoList) {
        this.myFlightInfoList = myFlightInfoList;
    }

    /**
     * 航程类型
     */
    public GaFlightWayType getFlightWay() {
        return this.flightWay;
    }

    public void setFlightWay(GaFlightWayType flightWay) {
        this.flightWay = flightWay;
    }

    /**
     * 是否已支付
     */
    public boolean getHavePay() {
        return this.havePay;
    }

    public void setHavePay(boolean havePay) {
        this.havePay = havePay;
    }

    /**
     * 是否可以隐藏订单
     */
    public boolean getIsHiddenOrder() {
        return this.isHiddenOrder;
    }

    public void setIsHiddenOrder(boolean isHiddenOrder) {
        this.isHiddenOrder = isHiddenOrder;
    }

    /**
     * 行程出发日期
     */
    public long getJourneyDateBegin() {
        return this.journeyDateBegin;
    }

    public void setJourneyDateBegin(long journeyDateBegin) {
        this.journeyDateBegin = journeyDateBegin;
    }

    /**
     * 行程结束日期
     */
    public long getJourneyDateEnd() {
        return this.journeyDateEnd;
    }

    public void setJourneyDateEnd(long journeyDateEnd) {
        this.journeyDateEnd = journeyDateEnd;
    }

    /**
     * 行程描述
     */
    public String getJourneyDescription() {
        return this.journeyDescription;
    }

    public void setJourneyDescription(String journeyDescription) {
        this.journeyDescription = journeyDescription;
    }

    /**
     * 订单金额
     */
    public BigDecimal getOrderAmount() {
        return this.orderAmount;
    }

    public void setOrderAmount(BigDecimal orderAmount) {
        this.orderAmount = orderAmount;
    }

    /**
     * 订单号
     */
    public long getOrderID() {
        return this.orderID;
    }

    public void setOrderID(long orderID) {
        this.orderID = orderID;
    }

    /**
     * 订单状态
     */
    public OrderOutStatus getOrderOutStatus() {
        return this.orderOutStatus;
    }

    public void setOrderOutStatus(OrderOutStatus orderOutStatus) {
        this.orderOutStatus = orderOutStatus;
    }

    /**
     * 订单状态多语言描述
     */
    public String getOrderOutStatusString() {
        return this.orderOutStatusString;
    }

    public void setOrderOutStatusString(String orderOutStatusString) {
        this.orderOutStatusString = orderOutStatusString;
    }

    /**
     * 乘机人
     */
    public String getPassengerNames() {
        return this.passengerNames;
    }

    public void setPassengerNames(String passengerNames) {
        this.passengerNames = passengerNames;
    }

    /**
     * 支付方式多语言描述
     */
    public String getPrePayType() {
        return this.prePayType;
    }

    public void setPrePayType(String prePayType) {
        this.prePayType = prePayType;
    }

    /**
     * 特殊标记
     */
    public String getSpecialMark() {
        return this.specialMark;
    }

    public void setSpecialMark(String specialMark) {
        this.specialMark = specialMark;
    }

    /**
     * 特价类型多语言描述
     */
    public String getSpecialPriceType() {
        return this.specialPriceType;
    }

    public void setSpecialPriceType(String specialPriceType) {
        this.specialPriceType = specialPriceType;
    }

    /**
     * 订单状态标记
     */
    public String getStatusMark() {
        return this.statusMark;
    }

    public void setStatusMark(String statusMark) {
        this.statusMark = statusMark;
    }

    /**
     * 是否暂缓
     */
    public String getTicketStatus() {
        return this.ticketStatus;
    }

    public void setTicketStatus(String ticketStatus) {
        this.ticketStatus = ticketStatus;
    }

    /**
     * 订单客户ID
     */
    public String getUid() {
        return this.uid;
    }

    public void setUid(String uid) {
        this.uid = uid;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final MyOrderInfo other = (MyOrderInfo)obj;
        return
            Objects.equal(this.actualOrderStatus, other.actualOrderStatus) && 
            Objects.equal(this.bookingDate, other.bookingDate) && 
            Objects.equal(this.flightClass, other.flightClass) && 
            Objects.equal(this.myFlightInfoList, other.myFlightInfoList) && 
            Objects.equal(this.flightWay, other.flightWay) && 
            Objects.equal(this.havePay, other.havePay) && 
            Objects.equal(this.isHiddenOrder, other.isHiddenOrder) && 
            Objects.equal(this.journeyDateBegin, other.journeyDateBegin) && 
            Objects.equal(this.journeyDateEnd, other.journeyDateEnd) && 
            Objects.equal(this.journeyDescription, other.journeyDescription) && 
            Objects.equal(this.orderAmount, other.orderAmount) && 
            Objects.equal(this.orderID, other.orderID) && 
            Objects.equal(this.orderOutStatus, other.orderOutStatus) && 
            Objects.equal(this.orderOutStatusString, other.orderOutStatusString) && 
            Objects.equal(this.passengerNames, other.passengerNames) && 
            Objects.equal(this.prePayType, other.prePayType) && 
            Objects.equal(this.specialMark, other.specialMark) && 
            Objects.equal(this.specialPriceType, other.specialPriceType) && 
            Objects.equal(this.statusMark, other.statusMark) && 
            Objects.equal(this.ticketStatus, other.ticketStatus) && 
            Objects.equal(this.uid, other.uid);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.actualOrderStatus);
        result = 31 * result + Objects.hashCode(this.bookingDate);
        result = 31 * result + Objects.hashCode(this.flightClass);
        result = 31 * result + Objects.hashCode(this.myFlightInfoList);
        result = 31 * result + Objects.hashCode(this.flightWay);
        result = 31 * result + Objects.hashCode(this.havePay);
        result = 31 * result + Objects.hashCode(this.isHiddenOrder);
        result = 31 * result + Objects.hashCode(this.journeyDateBegin);
        result = 31 * result + Objects.hashCode(this.journeyDateEnd);
        result = 31 * result + Objects.hashCode(this.journeyDescription);
        result = 31 * result + Objects.hashCode(this.orderAmount);
        result = 31 * result + Objects.hashCode(this.orderID);
        result = 31 * result + Objects.hashCode(this.orderOutStatus);
        result = 31 * result + Objects.hashCode(this.orderOutStatusString);
        result = 31 * result + Objects.hashCode(this.passengerNames);
        result = 31 * result + Objects.hashCode(this.prePayType);
        result = 31 * result + Objects.hashCode(this.specialMark);
        result = 31 * result + Objects.hashCode(this.specialPriceType);
        result = 31 * result + Objects.hashCode(this.statusMark);
        result = 31 * result + Objects.hashCode(this.ticketStatus);
        result = 31 * result + Objects.hashCode(this.uid);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("actualOrderStatus", actualOrderStatus)
            .add("bookingDate", bookingDate)
            .add("flightClass", flightClass)
            .add("myFlightInfoList", myFlightInfoList)
            .add("flightWay", flightWay)
            .add("havePay", havePay)
            .add("isHiddenOrder", isHiddenOrder)
            .add("journeyDateBegin", journeyDateBegin)
            .add("journeyDateEnd", journeyDateEnd)
            .add("journeyDescription", journeyDescription)
            .add("orderAmount", orderAmount)
            .add("orderID", orderID)
            .add("orderOutStatus", orderOutStatus)
            .add("orderOutStatusString", orderOutStatusString)
            .add("passengerNames", passengerNames)
            .add("prePayType", prePayType)
            .add("specialMark", specialMark)
            .add("specialPriceType", specialPriceType)
            .add("statusMark", statusMark)
            .add("ticketStatus", ticketStatus)
            .add("uid", uid)
            .toString();
    }
}