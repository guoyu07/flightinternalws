/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.flight.union_searchflightsws.v1;

import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "QueryTimelineType", propOrder = {
    "engineType",
    "queryExecutionTime",
    "noResultReason"
})
@SuppressWarnings("all")
public class QueryTimelineType  {

    private static final long serialVersionUID = 1L;

    public QueryTimelineType(
        String engineType, 
        int queryExecutionTime, 
        int noResultReason) {
        this.engineType = engineType;
        this.queryExecutionTime = queryExecutionTime;
        this.noResultReason = noResultReason;
    }

    public QueryTimelineType() {
    }

    @FieldDoc("Engine type")
    @JsonProperty("EngineType")
    @XmlElement(name = "EngineType")
    private String engineType;

    @FieldDoc("Query execution time")
    @JsonProperty("QueryExecutionTime")
    @XmlElement(name = "QueryExecutionTime")
    private int queryExecutionTime;

    @FieldDoc("No result reason")
    @JsonProperty("NoResultReason")
    @XmlElement(name = "NoResultReason")
    private int noResultReason;

    /**
     * Engine type
     */
    public String getEngineType() {
        return this.engineType;
    }

    public void setEngineType(String engineType) {
        this.engineType = engineType;
    }

    /**
     * Query execution time
     */
    public int getQueryExecutionTime() {
        return this.queryExecutionTime;
    }

    public void setQueryExecutionTime(int queryExecutionTime) {
        this.queryExecutionTime = queryExecutionTime;
    }

    /**
     * No result reason
     */
    public int getNoResultReason() {
        return this.noResultReason;
    }

    public void setNoResultReason(int noResultReason) {
        this.noResultReason = noResultReason;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final QueryTimelineType other = (QueryTimelineType)obj;
        return
            Objects.equal(this.engineType, other.engineType) && 
            Objects.equal(this.queryExecutionTime, other.queryExecutionTime) && 
            Objects.equal(this.noResultReason, other.noResultReason);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.engineType);
        result = 31 * result + Objects.hashCode(this.queryExecutionTime);
        result = 31 * result + Objects.hashCode(this.noResultReason);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("engineType", engineType)
            .add("queryExecutionTime", queryExecutionTime)
            .add("noResultReason", noResultReason)
            .toString();
    }
}