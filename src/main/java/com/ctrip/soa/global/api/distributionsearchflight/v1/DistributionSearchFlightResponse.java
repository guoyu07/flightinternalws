/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.distributionsearchflight.v1;

import com.ctrip.soa.global.api.comm.responsehead.v1.ResponseHead;
import com.ctriposs.baiji.rpc.common.HasResponseStatus;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.ctriposs.baiji.rpc.common.types.ResponseStatusType;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlRootElement(name = "DistributionSearchFlightResponse", namespace = "http://soa.ctrip.com/Global/API/DistributionSearchFlight/v1")
@XmlType(name = "DistributionSearchFlightResponse", propOrder = {
    "responseStatus",
    "responseHead",
    "no",
    "cacheKey",
    "partitionedToken",
    "isAllResult",
    "resultCount",
    "fltProductInfoList",
    "returnFltProductInfoList",
    "filterDAirPort",
    "filterAAirPort",
    "filterAirLine",
    "paginationInfo",
    "limitSequence"
})
@SuppressWarnings("all")
public class DistributionSearchFlightResponse implements HasResponseStatus {

    private static final long serialVersionUID = 1L;

    public DistributionSearchFlightResponse(
        ResponseStatusType responseStatus, 
        ResponseHead responseHead, 
        int no, 
        String cacheKey, 
        List<String> partitionedToken, 
        boolean isAllResult, 
        int resultCount, 
        List<DistributionFltProductInfo> fltProductInfoList, 
        List<DistributionFltProductInfo> returnFltProductInfoList, 
        List<DistributionAirPortInfo> filterDAirPort, 
        List<DistributionAirPortInfo> filterAAirPort, 
        List<DistributionAirLineInfo> filterAirLine, 
        DistributionPaginationInfo paginationInfo, 
        int limitSequence) {
        this.responseStatus = responseStatus;
        this.responseHead = responseHead;
        this.no = no;
        this.cacheKey = cacheKey;
        this.partitionedToken = partitionedToken;
        this.isAllResult = isAllResult;
        this.resultCount = resultCount;
        this.fltProductInfoList = fltProductInfoList;
        this.returnFltProductInfoList = returnFltProductInfoList;
        this.filterDAirPort = filterDAirPort;
        this.filterAAirPort = filterAAirPort;
        this.filterAirLine = filterAirLine;
        this.paginationInfo = paginationInfo;
        this.limitSequence = limitSequence;
    }

    public DistributionSearchFlightResponse() {
    }

    @JsonProperty("ResponseStatus")
    @XmlElement(name = "ResponseStatus")
    private ResponseStatusType responseStatus;

    @JsonProperty("ResponseHead")
    @XmlElement(name = "ResponseHead")
    private ResponseHead responseHead;

    @FieldDoc("返回序号，从1开始，去程1，返程2，类推")
    @JsonProperty("No")
    @XmlElement(name = "No")
    private int no;

    @FieldDoc("缓存流水号")
    @JsonProperty("CacheKey")
    @XmlElement(name = "CacheKey")
    private String cacheKey;

    @FieldDoc("分批token-只有选择Sync时有返回")
    @JsonProperty("PartitionedToken")
    @XmlElement(name = "PartitionedToken")
    private List<String> partitionedToken;

    @FieldDoc("是否加载完全部数据")
    @JsonProperty("IsAllResult")
    @XmlElement(name = "IsAllResult")
    private boolean isAllResult;

    @FieldDoc("返回总数据量")
    @JsonProperty("ResultCount")
    @XmlElement(name = "ResultCount")
    private int resultCount;

    @FieldDoc("航线产品信息")
    @JsonProperty("FltProductInfoList")
    @XmlElement(name = "FltProductInfoList")
    private List<DistributionFltProductInfo> fltProductInfoList;

    @FieldDoc("返程航线产品信息")
    @JsonProperty("ReturnFltProductInfoList")
    @XmlElement(name = "ReturnFltProductInfoList")
    private List<DistributionFltProductInfo> returnFltProductInfoList;

    @FieldDoc("出发机场可过滤列表")
    @JsonProperty("FilterDAirPort")
    @XmlElement(name = "FilterDAirPort")
    private List<DistributionAirPortInfo> filterDAirPort;

    @FieldDoc("到达机场可过滤列表")
    @JsonProperty("FilterAAirPort")
    @XmlElement(name = "FilterAAirPort")
    private List<DistributionAirPortInfo> filterAAirPort;

    @FieldDoc("可过滤航司列表")
    @JsonProperty("FilterAirLine")
    @XmlElement(name = "FilterAirLine")
    private List<DistributionAirLineInfo> filterAirLine;

    @FieldDoc("分页信息")
    @JsonProperty("PaginationInfo")
    @XmlElement(name = "PaginationInfo")
    private DistributionPaginationInfo paginationInfo;

    @FieldDoc("限制请求批次 1第一批次 2第二批次 3全部限制")
    @JsonProperty("LimitSequence")
    @XmlElement(name = "LimitSequence")
    private int limitSequence;

    public ResponseStatusType getResponseStatus() {
        return this.responseStatus;
    }

    public void setResponseStatus(ResponseStatusType responseStatus) {
        this.responseStatus = responseStatus;
    }

    public ResponseHead getResponseHead() {
        return this.responseHead;
    }

    public void setResponseHead(ResponseHead responseHead) {
        this.responseHead = responseHead;
    }

    /**
     * 返回序号，从1开始，去程1，返程2，类推
     */
    public int getNo() {
        return this.no;
    }

    public void setNo(int no) {
        this.no = no;
    }

    /**
     * 缓存流水号
     */
    public String getCacheKey() {
        return this.cacheKey;
    }

    public void setCacheKey(String cacheKey) {
        this.cacheKey = cacheKey;
    }

    /**
     * 分批token-只有选择Sync时有返回
     */
    public List<String> getPartitionedToken() {
        return this.partitionedToken;
    }

    public void setPartitionedToken(List<String> partitionedToken) {
        this.partitionedToken = partitionedToken;
    }

    /**
     * 是否加载完全部数据
     */
    public boolean getIsAllResult() {
        return this.isAllResult;
    }

    public void setIsAllResult(boolean isAllResult) {
        this.isAllResult = isAllResult;
    }

    /**
     * 返回总数据量
     */
    public int getResultCount() {
        return this.resultCount;
    }

    public void setResultCount(int resultCount) {
        this.resultCount = resultCount;
    }

    /**
     * 航线产品信息
     */
    public List<DistributionFltProductInfo> getFltProductInfoList() {
        return this.fltProductInfoList;
    }

    public void setFltProductInfoList(List<DistributionFltProductInfo> fltProductInfoList) {
        this.fltProductInfoList = fltProductInfoList;
    }

    /**
     * 返程航线产品信息
     */
    public List<DistributionFltProductInfo> getReturnFltProductInfoList() {
        return this.returnFltProductInfoList;
    }

    public void setReturnFltProductInfoList(List<DistributionFltProductInfo> returnFltProductInfoList) {
        this.returnFltProductInfoList = returnFltProductInfoList;
    }

    /**
     * 出发机场可过滤列表
     */
    public List<DistributionAirPortInfo> getFilterDAirPort() {
        return this.filterDAirPort;
    }

    public void setFilterDAirPort(List<DistributionAirPortInfo> filterDAirPort) {
        this.filterDAirPort = filterDAirPort;
    }

    /**
     * 到达机场可过滤列表
     */
    public List<DistributionAirPortInfo> getFilterAAirPort() {
        return this.filterAAirPort;
    }

    public void setFilterAAirPort(List<DistributionAirPortInfo> filterAAirPort) {
        this.filterAAirPort = filterAAirPort;
    }

    /**
     * 可过滤航司列表
     */
    public List<DistributionAirLineInfo> getFilterAirLine() {
        return this.filterAirLine;
    }

    public void setFilterAirLine(List<DistributionAirLineInfo> filterAirLine) {
        this.filterAirLine = filterAirLine;
    }

    /**
     * 分页信息
     */
    public DistributionPaginationInfo getPaginationInfo() {
        return this.paginationInfo;
    }

    public void setPaginationInfo(DistributionPaginationInfo paginationInfo) {
        this.paginationInfo = paginationInfo;
    }

    /**
     * 限制请求批次 1第一批次 2第二批次 3全部限制
     */
    public int getLimitSequence() {
        return this.limitSequence;
    }

    public void setLimitSequence(int limitSequence) {
        this.limitSequence = limitSequence;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final DistributionSearchFlightResponse other = (DistributionSearchFlightResponse)obj;
        return
            Objects.equal(this.responseStatus, other.responseStatus) && 
            Objects.equal(this.responseHead, other.responseHead) && 
            Objects.equal(this.no, other.no) && 
            Objects.equal(this.cacheKey, other.cacheKey) && 
            Objects.equal(this.partitionedToken, other.partitionedToken) && 
            Objects.equal(this.isAllResult, other.isAllResult) && 
            Objects.equal(this.resultCount, other.resultCount) && 
            Objects.equal(this.fltProductInfoList, other.fltProductInfoList) && 
            Objects.equal(this.returnFltProductInfoList, other.returnFltProductInfoList) && 
            Objects.equal(this.filterDAirPort, other.filterDAirPort) && 
            Objects.equal(this.filterAAirPort, other.filterAAirPort) && 
            Objects.equal(this.filterAirLine, other.filterAirLine) && 
            Objects.equal(this.paginationInfo, other.paginationInfo) && 
            Objects.equal(this.limitSequence, other.limitSequence);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.responseStatus);
        result = 31 * result + Objects.hashCode(this.responseHead);
        result = 31 * result + Objects.hashCode(this.no);
        result = 31 * result + Objects.hashCode(this.cacheKey);
        result = 31 * result + Objects.hashCode(this.partitionedToken);
        result = 31 * result + Objects.hashCode(this.isAllResult);
        result = 31 * result + Objects.hashCode(this.resultCount);
        result = 31 * result + Objects.hashCode(this.fltProductInfoList);
        result = 31 * result + Objects.hashCode(this.returnFltProductInfoList);
        result = 31 * result + Objects.hashCode(this.filterDAirPort);
        result = 31 * result + Objects.hashCode(this.filterAAirPort);
        result = 31 * result + Objects.hashCode(this.filterAirLine);
        result = 31 * result + Objects.hashCode(this.paginationInfo);
        result = 31 * result + Objects.hashCode(this.limitSequence);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("responseStatus", responseStatus)
            .add("responseHead", responseHead)
            .add("no", no)
            .add("cacheKey", cacheKey)
            .add("partitionedToken", partitionedToken)
            .add("isAllResult", isAllResult)
            .add("resultCount", resultCount)
            .add("fltProductInfoList", fltProductInfoList)
            .add("returnFltProductInfoList", returnFltProductInfoList)
            .add("filterDAirPort", filterDAirPort)
            .add("filterAAirPort", filterAAirPort)
            .add("filterAirLine", filterAirLine)
            .add("paginationInfo", paginationInfo)
            .add("limitSequence", limitSequence)
            .toString();
    }
}