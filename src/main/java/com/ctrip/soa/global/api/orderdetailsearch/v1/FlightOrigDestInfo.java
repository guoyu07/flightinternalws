/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.orderdetailsearch.v1;

import com.ctrip.soa.global.api.flightcommon.v1.CityInfo;
import com.ctrip.soa.global.api.flightcommon.v1.DetailColunmInfo;
import com.ctrip.soa.global.api.flightcommon.v1.GaTicketNoInfo;
import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 航线信息
 */
@DtoDoc("航线信息")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FlightOrigDestInfo", propOrder = {
    "oriNo",
    "dDate",
    "aDate",
    "dCity",
    "aCity",
    "duration",
    "hour",
    "min",
    "arrivalDays",
    "colunmList",
    "ticketNoInfoList"
})
@SuppressWarnings("all")
public class FlightOrigDestInfo  {

    private static final long serialVersionUID = 1L;

    public FlightOrigDestInfo(
        int oriNo, 
        long dDate, 
        long aDate, 
        CityInfo dCity, 
        CityInfo aCity, 
        int duration, 
        int hour, 
        int min, 
        int arrivalDays, 
        List<DetailColunmInfo> colunmList, 
        List<GaTicketNoInfo> ticketNoInfoList) {
        this.oriNo = oriNo;
        this.dDate = dDate;
        this.aDate = aDate;
        this.dCity = dCity;
        this.aCity = aCity;
        this.duration = duration;
        this.hour = hour;
        this.min = min;
        this.arrivalDays = arrivalDays;
        this.colunmList = colunmList;
        this.ticketNoInfoList = ticketNoInfoList;
    }

    public FlightOrigDestInfo() {
    }

    @FieldDoc("航线序号")
    @JsonProperty("OriNo")
    @XmlElement(name = "OriNo")
    private int oriNo;

    @FieldDoc("出发时间")
    @JsonProperty("DDate")
    @XmlElement(name = "DDate")
    private long dDate;

    @FieldDoc("到达时间")
    @JsonProperty("ADate")
    @XmlElement(name = "ADate")
    private long aDate;

    @FieldDoc("出发城市")
    @JsonProperty("DCity")
    @XmlElement(name = "DCity")
    private CityInfo dCity;

    @FieldDoc("到达城市")
    @JsonProperty("ACity")
    @XmlElement(name = "ACity")
    private CityInfo aCity;

    @FieldDoc("飞行总时间/分钟")
    @JsonProperty("Duration")
    @XmlElement(name = "Duration")
    private int duration;

    @FieldDoc("飞行小时/总时间换算")
    @JsonProperty("Hour")
    @XmlElement(name = "Hour")
    private int hour;

    @FieldDoc("飞行除去小时后剩余分钟数")
    @JsonProperty("Min")
    @XmlElement(name = "Min")
    private int min;

    @FieldDoc("航线跨天数")
    @JsonProperty("ArrivalDays")
    @XmlElement(name = "ArrivalDays")
    private int arrivalDays;

    @FieldDoc("航班信息")
    @JsonProperty("ColunmList")
    @XmlElement(name = "ColunmList")
    private List<DetailColunmInfo> colunmList;

    @FieldDoc("票号信息")
    @JsonProperty("TicketNoInfoList")
    @XmlElement(name = "TicketNoInfoList")
    private List<GaTicketNoInfo> ticketNoInfoList;

    /**
     * 航线序号
     */
    public int getOriNo() {
        return this.oriNo;
    }

    public void setOriNo(int oriNo) {
        this.oriNo = oriNo;
    }

    /**
     * 出发时间
     */
    public long getDDate() {
        return this.dDate;
    }

    public void setDDate(long dDate) {
        this.dDate = dDate;
    }

    /**
     * 到达时间
     */
    public long getADate() {
        return this.aDate;
    }

    public void setADate(long aDate) {
        this.aDate = aDate;
    }

    /**
     * 出发城市
     */
    public CityInfo getDCity() {
        return this.dCity;
    }

    public void setDCity(CityInfo dCity) {
        this.dCity = dCity;
    }

    /**
     * 到达城市
     */
    public CityInfo getACity() {
        return this.aCity;
    }

    public void setACity(CityInfo aCity) {
        this.aCity = aCity;
    }

    /**
     * 飞行总时间/分钟
     */
    public int getDuration() {
        return this.duration;
    }

    public void setDuration(int duration) {
        this.duration = duration;
    }

    /**
     * 飞行小时/总时间换算
     */
    public int getHour() {
        return this.hour;
    }

    public void setHour(int hour) {
        this.hour = hour;
    }

    /**
     * 飞行除去小时后剩余分钟数
     */
    public int getMin() {
        return this.min;
    }

    public void setMin(int min) {
        this.min = min;
    }

    /**
     * 航线跨天数
     */
    public int getArrivalDays() {
        return this.arrivalDays;
    }

    public void setArrivalDays(int arrivalDays) {
        this.arrivalDays = arrivalDays;
    }

    /**
     * 航班信息
     */
    public List<DetailColunmInfo> getColunmList() {
        return this.colunmList;
    }

    public void setColunmList(List<DetailColunmInfo> colunmList) {
        this.colunmList = colunmList;
    }

    /**
     * 票号信息
     */
    public List<GaTicketNoInfo> getTicketNoInfoList() {
        return this.ticketNoInfoList;
    }

    public void setTicketNoInfoList(List<GaTicketNoInfo> ticketNoInfoList) {
        this.ticketNoInfoList = ticketNoInfoList;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final FlightOrigDestInfo other = (FlightOrigDestInfo)obj;
        return
            Objects.equal(this.oriNo, other.oriNo) && 
            Objects.equal(this.dDate, other.dDate) && 
            Objects.equal(this.aDate, other.aDate) && 
            Objects.equal(this.dCity, other.dCity) && 
            Objects.equal(this.aCity, other.aCity) && 
            Objects.equal(this.duration, other.duration) && 
            Objects.equal(this.hour, other.hour) && 
            Objects.equal(this.min, other.min) && 
            Objects.equal(this.arrivalDays, other.arrivalDays) && 
            Objects.equal(this.colunmList, other.colunmList) && 
            Objects.equal(this.ticketNoInfoList, other.ticketNoInfoList);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.oriNo);
        result = 31 * result + Objects.hashCode(this.dDate);
        result = 31 * result + Objects.hashCode(this.aDate);
        result = 31 * result + Objects.hashCode(this.dCity);
        result = 31 * result + Objects.hashCode(this.aCity);
        result = 31 * result + Objects.hashCode(this.duration);
        result = 31 * result + Objects.hashCode(this.hour);
        result = 31 * result + Objects.hashCode(this.min);
        result = 31 * result + Objects.hashCode(this.arrivalDays);
        result = 31 * result + Objects.hashCode(this.colunmList);
        result = 31 * result + Objects.hashCode(this.ticketNoInfoList);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("oriNo", oriNo)
            .add("dDate", dDate)
            .add("aDate", aDate)
            .add("dCity", dCity)
            .add("aCity", aCity)
            .add("duration", duration)
            .add("hour", hour)
            .add("min", min)
            .add("arrivalDays", arrivalDays)
            .add("colunmList", colunmList)
            .add("ticketNoInfoList", ticketNoInfoList)
            .toString();
    }
}