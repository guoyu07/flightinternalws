/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.flightcommon.v1;

import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.math.BigDecimal;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 机票支付信息
 */
@DtoDoc("机票支付信息")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "GaFlightPaymentInfo", propOrder = {
    "exchangeRate",
    "dataRule",
    "currencyType",
    "merchantInfo",
    "payTotalPrice",
    "payFlightPrice",
    "payTax",
    "payOil",
    "payTotalInsuranceFee",
    "payValueAddedBaggageFee",
    "payXHotelCouponFee",
    "payTotalPackageAttachAmount",
    "payCCardFee",
    "payDeliverFee",
    "loungeFee",
    "payCouponAmount",
    "paySubsidy",
    "isRealTimePay",
    "isPayToCBU",
    "cnyCarrayRule",
    "payTotalPriceNoCCardFee",
    "paymentDetailDescList",
    "orderForeignAmount"
})
@SuppressWarnings("all")
public class GaFlightPaymentInfo  {

    private static final long serialVersionUID = 1L;

    public GaFlightPaymentInfo(
        BigDecimal exchangeRate, 
        BigDecimal dataRule, 
        GaFlightSettlementCurrencyType currencyType, 
        String merchantInfo, 
        BigDecimal payTotalPrice, 
        BigDecimal payFlightPrice, 
        BigDecimal payTax, 
        BigDecimal payOil, 
        BigDecimal payTotalInsuranceFee, 
        BigDecimal payValueAddedBaggageFee, 
        BigDecimal payXHotelCouponFee, 
        BigDecimal payTotalPackageAttachAmount, 
        BigDecimal payCCardFee, 
        BigDecimal payDeliverFee, 
        BigDecimal loungeFee, 
        BigDecimal payCouponAmount, 
        BigDecimal paySubsidy, 
        int isRealTimePay, 
        int isPayToCBU, 
        int cnyCarrayRule, 
        BigDecimal payTotalPriceNoCCardFee, 
        List<FlightPriceDetail> paymentDetailDescList, 
        BigDecimal orderForeignAmount) {
        this.exchangeRate = exchangeRate;
        this.dataRule = dataRule;
        this.currencyType = currencyType;
        this.merchantInfo = merchantInfo;
        this.payTotalPrice = payTotalPrice;
        this.payFlightPrice = payFlightPrice;
        this.payTax = payTax;
        this.payOil = payOil;
        this.payTotalInsuranceFee = payTotalInsuranceFee;
        this.payValueAddedBaggageFee = payValueAddedBaggageFee;
        this.payXHotelCouponFee = payXHotelCouponFee;
        this.payTotalPackageAttachAmount = payTotalPackageAttachAmount;
        this.payCCardFee = payCCardFee;
        this.payDeliverFee = payDeliverFee;
        this.loungeFee = loungeFee;
        this.payCouponAmount = payCouponAmount;
        this.paySubsidy = paySubsidy;
        this.isRealTimePay = isRealTimePay;
        this.isPayToCBU = isPayToCBU;
        this.cnyCarrayRule = cnyCarrayRule;
        this.payTotalPriceNoCCardFee = payTotalPriceNoCCardFee;
        this.paymentDetailDescList = paymentDetailDescList;
        this.orderForeignAmount = orderForeignAmount;
    }

    public GaFlightPaymentInfo() {
    }

    @FieldDoc("汇率")
    @JsonProperty("ExchangeRate")
    @XmlElement(name = "ExchangeRate")
    private BigDecimal exchangeRate;

    @FieldDoc("进位规则")
    @JsonProperty("DataRule")
    @XmlElement(name = "DataRule")
    private BigDecimal dataRule;

    @FieldDoc("结算币种")
    @JsonProperty("CurrencyType")
    @XmlElement(name = "CurrencyType")
    private GaFlightSettlementCurrencyType currencyType;

    @FieldDoc("商户号")
    @JsonProperty("MerchantInfo")
    @XmlElement(name = "MerchantInfo")
    private String merchantInfo;

    @FieldDoc("订单总价")
    @JsonProperty("PayTotalPrice")
    @XmlElement(name = "PayTotalPrice")
    private BigDecimal payTotalPrice;

    @FieldDoc("机票总价")
    @JsonProperty("PayFlightPrice")
    @XmlElement(name = "PayFlightPrice")
    private BigDecimal payFlightPrice;

    @FieldDoc("税费")
    @JsonProperty("PayTax")
    @XmlElement(name = "PayTax")
    private BigDecimal payTax;

    @FieldDoc("燃油费")
    @JsonProperty("PayOil")
    @XmlElement(name = "PayOil")
    private BigDecimal payOil;

    @FieldDoc("保险总额")
    @JsonProperty("PayTotalInsuranceFee")
    @XmlElement(name = "PayTotalInsuranceFee")
    private BigDecimal payTotalInsuranceFee;

    @FieldDoc("增值行李额总价")
    @JsonProperty("PayValueAddedBaggageFee")
    @XmlElement(name = "PayValueAddedBaggageFee")
    private BigDecimal payValueAddedBaggageFee;

    @FieldDoc("X产品酒店优惠券总价")
    @JsonProperty("PayXHotelCouponFee")
    @XmlElement(name = "PayXHotelCouponFee")
    private BigDecimal payXHotelCouponFee;

    @FieldDoc("套餐捆绑优惠券总价")
    @JsonProperty("PayTotalPackageAttachAmount")
    @XmlElement(name = "PayTotalPackageAttachAmount")
    private BigDecimal payTotalPackageAttachAmount;

    @FieldDoc("外卡手续费")
    @JsonProperty("PayCCardFee")
    @XmlElement(name = "PayCCardFee")
    private BigDecimal payCCardFee;

    @FieldDoc("配送费")
    @JsonProperty("PayDeliverFee")
    @XmlElement(name = "PayDeliverFee")
    private BigDecimal payDeliverFee;

    @FieldDoc("休息室费用")
    @JsonProperty("LoungeFee")
    @XmlElement(name = "LoungeFee")
    private BigDecimal loungeFee;

    @FieldDoc("礼品卡支付费用")
    @JsonProperty("PayCouponAmount")
    @XmlElement(name = "PayCouponAmount")
    private BigDecimal payCouponAmount;

    @FieldDoc("飞享金")
    @JsonProperty("PaySubsidy")
    @XmlElement(name = "PaySubsidy")
    private BigDecimal paySubsidy;

    @FieldDoc("是否走实时支付（港币走实时）")
    @JsonProperty("IsRealTimePay")
    @XmlElement(name = "IsRealTimePay")
    private int isRealTimePay;

    @FieldDoc("是否CBU支付")
    @JsonProperty("IsPayToCBU")
    @XmlElement(name = "IsPayToCBU")
    private int isPayToCBU;

    @FieldDoc("外币转CNY保留位数")
    @JsonProperty("CnyCarrayRule")
    @XmlElement(name = "CnyCarrayRule")
    private int cnyCarrayRule;

    @FieldDoc("支付总金额，没有外卡手续费")
    @JsonProperty("PayTotalPriceNoCCardFee")
    @XmlElement(name = "PayTotalPriceNoCCardFee")
    private BigDecimal payTotalPriceNoCCardFee;

    @FieldDoc("支付明细列表")
    @JsonProperty("PaymentDetailDescList")
    @XmlElement(name = "PaymentDetailDescList")
    private List<FlightPriceDetail> paymentDetailDescList;

    @FieldDoc("订单外币金额")
    @JsonProperty("OrderForeignAmount")
    @XmlElement(name = "OrderForeignAmount")
    private BigDecimal orderForeignAmount;

    /**
     * 汇率
     */
    public BigDecimal getExchangeRate() {
        return this.exchangeRate;
    }

    public void setExchangeRate(BigDecimal exchangeRate) {
        this.exchangeRate = exchangeRate;
    }

    /**
     * 进位规则
     */
    public BigDecimal getDataRule() {
        return this.dataRule;
    }

    public void setDataRule(BigDecimal dataRule) {
        this.dataRule = dataRule;
    }

    /**
     * 结算币种
     */
    public GaFlightSettlementCurrencyType getCurrencyType() {
        return this.currencyType;
    }

    public void setCurrencyType(GaFlightSettlementCurrencyType currencyType) {
        this.currencyType = currencyType;
    }

    /**
     * 商户号
     */
    public String getMerchantInfo() {
        return this.merchantInfo;
    }

    public void setMerchantInfo(String merchantInfo) {
        this.merchantInfo = merchantInfo;
    }

    /**
     * 订单总价
     */
    public BigDecimal getPayTotalPrice() {
        return this.payTotalPrice;
    }

    public void setPayTotalPrice(BigDecimal payTotalPrice) {
        this.payTotalPrice = payTotalPrice;
    }

    /**
     * 机票总价
     */
    public BigDecimal getPayFlightPrice() {
        return this.payFlightPrice;
    }

    public void setPayFlightPrice(BigDecimal payFlightPrice) {
        this.payFlightPrice = payFlightPrice;
    }

    /**
     * 税费
     */
    public BigDecimal getPayTax() {
        return this.payTax;
    }

    public void setPayTax(BigDecimal payTax) {
        this.payTax = payTax;
    }

    /**
     * 燃油费
     */
    public BigDecimal getPayOil() {
        return this.payOil;
    }

    public void setPayOil(BigDecimal payOil) {
        this.payOil = payOil;
    }

    /**
     * 保险总额
     */
    public BigDecimal getPayTotalInsuranceFee() {
        return this.payTotalInsuranceFee;
    }

    public void setPayTotalInsuranceFee(BigDecimal payTotalInsuranceFee) {
        this.payTotalInsuranceFee = payTotalInsuranceFee;
    }

    /**
     * 增值行李额总价
     */
    public BigDecimal getPayValueAddedBaggageFee() {
        return this.payValueAddedBaggageFee;
    }

    public void setPayValueAddedBaggageFee(BigDecimal payValueAddedBaggageFee) {
        this.payValueAddedBaggageFee = payValueAddedBaggageFee;
    }

    /**
     * X产品酒店优惠券总价
     */
    public BigDecimal getPayXHotelCouponFee() {
        return this.payXHotelCouponFee;
    }

    public void setPayXHotelCouponFee(BigDecimal payXHotelCouponFee) {
        this.payXHotelCouponFee = payXHotelCouponFee;
    }

    /**
     * 套餐捆绑优惠券总价
     */
    public BigDecimal getPayTotalPackageAttachAmount() {
        return this.payTotalPackageAttachAmount;
    }

    public void setPayTotalPackageAttachAmount(BigDecimal payTotalPackageAttachAmount) {
        this.payTotalPackageAttachAmount = payTotalPackageAttachAmount;
    }

    /**
     * 外卡手续费
     */
    public BigDecimal getPayCCardFee() {
        return this.payCCardFee;
    }

    public void setPayCCardFee(BigDecimal payCCardFee) {
        this.payCCardFee = payCCardFee;
    }

    /**
     * 配送费
     */
    public BigDecimal getPayDeliverFee() {
        return this.payDeliverFee;
    }

    public void setPayDeliverFee(BigDecimal payDeliverFee) {
        this.payDeliverFee = payDeliverFee;
    }

    /**
     * 休息室费用
     */
    public BigDecimal getLoungeFee() {
        return this.loungeFee;
    }

    public void setLoungeFee(BigDecimal loungeFee) {
        this.loungeFee = loungeFee;
    }

    /**
     * 礼品卡支付费用
     */
    public BigDecimal getPayCouponAmount() {
        return this.payCouponAmount;
    }

    public void setPayCouponAmount(BigDecimal payCouponAmount) {
        this.payCouponAmount = payCouponAmount;
    }

    /**
     * 飞享金
     */
    public BigDecimal getPaySubsidy() {
        return this.paySubsidy;
    }

    public void setPaySubsidy(BigDecimal paySubsidy) {
        this.paySubsidy = paySubsidy;
    }

    /**
     * 是否走实时支付（港币走实时）
     */
    public int getIsRealTimePay() {
        return this.isRealTimePay;
    }

    public void setIsRealTimePay(int isRealTimePay) {
        this.isRealTimePay = isRealTimePay;
    }

    /**
     * 是否CBU支付
     */
    public int getIsPayToCBU() {
        return this.isPayToCBU;
    }

    public void setIsPayToCBU(int isPayToCBU) {
        this.isPayToCBU = isPayToCBU;
    }

    /**
     * 外币转CNY保留位数
     */
    public int getCnyCarrayRule() {
        return this.cnyCarrayRule;
    }

    public void setCnyCarrayRule(int cnyCarrayRule) {
        this.cnyCarrayRule = cnyCarrayRule;
    }

    /**
     * 支付总金额，没有外卡手续费
     */
    public BigDecimal getPayTotalPriceNoCCardFee() {
        return this.payTotalPriceNoCCardFee;
    }

    public void setPayTotalPriceNoCCardFee(BigDecimal payTotalPriceNoCCardFee) {
        this.payTotalPriceNoCCardFee = payTotalPriceNoCCardFee;
    }

    /**
     * 支付明细列表
     */
    public List<FlightPriceDetail> getPaymentDetailDescList() {
        return this.paymentDetailDescList;
    }

    public void setPaymentDetailDescList(List<FlightPriceDetail> paymentDetailDescList) {
        this.paymentDetailDescList = paymentDetailDescList;
    }

    /**
     * 订单外币金额
     */
    public BigDecimal getOrderForeignAmount() {
        return this.orderForeignAmount;
    }

    public void setOrderForeignAmount(BigDecimal orderForeignAmount) {
        this.orderForeignAmount = orderForeignAmount;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final GaFlightPaymentInfo other = (GaFlightPaymentInfo)obj;
        return
            Objects.equal(this.exchangeRate, other.exchangeRate) && 
            Objects.equal(this.dataRule, other.dataRule) && 
            Objects.equal(this.currencyType, other.currencyType) && 
            Objects.equal(this.merchantInfo, other.merchantInfo) && 
            Objects.equal(this.payTotalPrice, other.payTotalPrice) && 
            Objects.equal(this.payFlightPrice, other.payFlightPrice) && 
            Objects.equal(this.payTax, other.payTax) && 
            Objects.equal(this.payOil, other.payOil) && 
            Objects.equal(this.payTotalInsuranceFee, other.payTotalInsuranceFee) && 
            Objects.equal(this.payValueAddedBaggageFee, other.payValueAddedBaggageFee) && 
            Objects.equal(this.payXHotelCouponFee, other.payXHotelCouponFee) && 
            Objects.equal(this.payTotalPackageAttachAmount, other.payTotalPackageAttachAmount) && 
            Objects.equal(this.payCCardFee, other.payCCardFee) && 
            Objects.equal(this.payDeliverFee, other.payDeliverFee) && 
            Objects.equal(this.loungeFee, other.loungeFee) && 
            Objects.equal(this.payCouponAmount, other.payCouponAmount) && 
            Objects.equal(this.paySubsidy, other.paySubsidy) && 
            Objects.equal(this.isRealTimePay, other.isRealTimePay) && 
            Objects.equal(this.isPayToCBU, other.isPayToCBU) && 
            Objects.equal(this.cnyCarrayRule, other.cnyCarrayRule) && 
            Objects.equal(this.payTotalPriceNoCCardFee, other.payTotalPriceNoCCardFee) && 
            Objects.equal(this.paymentDetailDescList, other.paymentDetailDescList) && 
            Objects.equal(this.orderForeignAmount, other.orderForeignAmount);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.exchangeRate);
        result = 31 * result + Objects.hashCode(this.dataRule);
        result = 31 * result + Objects.hashCode(this.currencyType);
        result = 31 * result + Objects.hashCode(this.merchantInfo);
        result = 31 * result + Objects.hashCode(this.payTotalPrice);
        result = 31 * result + Objects.hashCode(this.payFlightPrice);
        result = 31 * result + Objects.hashCode(this.payTax);
        result = 31 * result + Objects.hashCode(this.payOil);
        result = 31 * result + Objects.hashCode(this.payTotalInsuranceFee);
        result = 31 * result + Objects.hashCode(this.payValueAddedBaggageFee);
        result = 31 * result + Objects.hashCode(this.payXHotelCouponFee);
        result = 31 * result + Objects.hashCode(this.payTotalPackageAttachAmount);
        result = 31 * result + Objects.hashCode(this.payCCardFee);
        result = 31 * result + Objects.hashCode(this.payDeliverFee);
        result = 31 * result + Objects.hashCode(this.loungeFee);
        result = 31 * result + Objects.hashCode(this.payCouponAmount);
        result = 31 * result + Objects.hashCode(this.paySubsidy);
        result = 31 * result + Objects.hashCode(this.isRealTimePay);
        result = 31 * result + Objects.hashCode(this.isPayToCBU);
        result = 31 * result + Objects.hashCode(this.cnyCarrayRule);
        result = 31 * result + Objects.hashCode(this.payTotalPriceNoCCardFee);
        result = 31 * result + Objects.hashCode(this.paymentDetailDescList);
        result = 31 * result + Objects.hashCode(this.orderForeignAmount);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("exchangeRate", exchangeRate)
            .add("dataRule", dataRule)
            .add("currencyType", currencyType)
            .add("merchantInfo", merchantInfo)
            .add("payTotalPrice", payTotalPrice)
            .add("payFlightPrice", payFlightPrice)
            .add("payTax", payTax)
            .add("payOil", payOil)
            .add("payTotalInsuranceFee", payTotalInsuranceFee)
            .add("payValueAddedBaggageFee", payValueAddedBaggageFee)
            .add("payXHotelCouponFee", payXHotelCouponFee)
            .add("payTotalPackageAttachAmount", payTotalPackageAttachAmount)
            .add("payCCardFee", payCCardFee)
            .add("payDeliverFee", payDeliverFee)
            .add("loungeFee", loungeFee)
            .add("payCouponAmount", payCouponAmount)
            .add("paySubsidy", paySubsidy)
            .add("isRealTimePay", isRealTimePay)
            .add("isPayToCBU", isPayToCBU)
            .add("cnyCarrayRule", cnyCarrayRule)
            .add("payTotalPriceNoCCardFee", payTotalPriceNoCCardFee)
            .add("paymentDetailDescList", paymentDetailDescList)
            .add("orderForeignAmount", orderForeignAmount)
            .toString();
    }
}