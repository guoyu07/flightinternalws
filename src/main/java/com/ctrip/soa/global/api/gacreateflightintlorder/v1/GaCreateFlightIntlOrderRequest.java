/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.gacreateflightintlorder.v1;

import com.ctrip.soa.global.api.comm.head.v1.Head;
import com.ctrip.soa.global.api.flightcommon.v1.FlightSearchInfo;
import com.ctrip.soa.global.api.flightcommon.v1.GaAlertMessageType;
import com.ctrip.soa.global.api.flightcommon.v1.GaDeliveryInfo;
import com.ctrip.soa.global.api.flightcommon.v1.GaFlightPaymentInfo;
import com.ctrip.soa.global.api.getflightbookinginfo.v1.VerifyOptionType;
import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.math.BigDecimal;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 国际机票提交订单
 */
@DtoDoc("国际机票提交订单")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlRootElement(name = "GaCreateFlightIntlOrderRequest", namespace = "http://soa.ctrip.com/Global/API/GaCreateFlightIntlOrder/v1")
@XmlType(name = "GaCreateFlightIntlOrderRequest", propOrder = {
    "head",
    "isQuickBooking",
    "isRealTimePay",
    "orderID",
    "isRePricingNote",
    "contactInfo",
    "flightPassengerList",
    "bookabilityTokenNumber",
    "repricingTokenNumber",
    "orderRemark",
    "needGetPaymentAndFulfillment",
    "checkRepeatOrders",
    "verifyOption",
    "flightSearchInfo",
    "alertMessageTypeList",
    "allianceInfo",
    "couponNumber",
    "fDeductionAmount",
    "couponAmount",
    "serverFrom",
    "paymentInfo",
    "rmsToken",
    "flightOrderIdList",
    "deliveryInfo",
    "productOrderInfo",
    "productKeyInfoJson",
    "isMutltiCurrencyCoupon",
    "couponFlightType"
})
@SuppressWarnings("all")
public class GaCreateFlightIntlOrderRequest  {

    private static final long serialVersionUID = 1L;

    public GaCreateFlightIntlOrderRequest(
        Head head, 
        boolean isQuickBooking, 
        boolean isRealTimePay, 
        long orderID, 
        boolean isRePricingNote, 
        CreateFlightIntlOrderContactInfo contactInfo, 
        List<CreateFlightIntlOrderPassengerInfo> flightPassengerList, 
        String bookabilityTokenNumber, 
        String repricingTokenNumber, 
        String orderRemark, 
        boolean needGetPaymentAndFulfillment, 
        boolean checkRepeatOrders, 
        VerifyOptionType verifyOption, 
        FlightSearchInfo flightSearchInfo, 
        List<GaAlertMessageType> alertMessageTypeList, 
        AllianceInfo allianceInfo, 
        String couponNumber, 
        BigDecimal fDeductionAmount, 
        BigDecimal couponAmount, 
        String serverFrom, 
        GaFlightPaymentInfo paymentInfo, 
        String rmsToken, 
        List<Long> flightOrderIdList, 
        GaDeliveryInfo deliveryInfo, 
        ProductOrderInfoType productOrderInfo, 
        String productKeyInfoJson, 
        boolean isMutltiCurrencyCoupon, 
        String couponFlightType) {
        this.head = head;
        this.isQuickBooking = isQuickBooking;
        this.isRealTimePay = isRealTimePay;
        this.orderID = orderID;
        this.isRePricingNote = isRePricingNote;
        this.contactInfo = contactInfo;
        this.flightPassengerList = flightPassengerList;
        this.bookabilityTokenNumber = bookabilityTokenNumber;
        this.repricingTokenNumber = repricingTokenNumber;
        this.orderRemark = orderRemark;
        this.needGetPaymentAndFulfillment = needGetPaymentAndFulfillment;
        this.checkRepeatOrders = checkRepeatOrders;
        this.verifyOption = verifyOption;
        this.flightSearchInfo = flightSearchInfo;
        this.alertMessageTypeList = alertMessageTypeList;
        this.allianceInfo = allianceInfo;
        this.couponNumber = couponNumber;
        this.fDeductionAmount = fDeductionAmount;
        this.couponAmount = couponAmount;
        this.serverFrom = serverFrom;
        this.paymentInfo = paymentInfo;
        this.rmsToken = rmsToken;
        this.flightOrderIdList = flightOrderIdList;
        this.deliveryInfo = deliveryInfo;
        this.productOrderInfo = productOrderInfo;
        this.productKeyInfoJson = productKeyInfoJson;
        this.isMutltiCurrencyCoupon = isMutltiCurrencyCoupon;
        this.couponFlightType = couponFlightType;
    }

    public GaCreateFlightIntlOrderRequest() {
    }

    @FieldDoc("SOA2.0请求头部信息")
    @JsonProperty("Head")
    @XmlElement(name = "Head")
    private Head head;

    @FieldDoc("是否快速预订")
    @JsonProperty("IsQuickBooking")
    @XmlElement(name = "IsQuickBooking")
    private boolean isQuickBooking;

    @FieldDoc("是否实时支付")
    @JsonProperty("IsRealTimePay")
    @XmlElement(name = "IsRealTimePay")
    private boolean isRealTimePay;

    @FieldDoc("订单ID")
    @JsonProperty("OrderID")
    @XmlElement(name = "OrderID")
    private long orderID;

    @FieldDoc("QTE运价跟查询价格不同，下单时是否需要提示用户")
    @JsonProperty("IsRePricingNote")
    @XmlElement(name = "IsRePricingNote")
    private boolean isRePricingNote;

    @FieldDoc("联系人信息")
    @JsonProperty("ContactInfo")
    @XmlElement(name = "ContactInfo")
    private CreateFlightIntlOrderContactInfo contactInfo;

    @FieldDoc("乘机人信息")
    @JsonProperty("FlightPassengerList")
    @XmlElement(name = "FlightPassengerList")
    private List<CreateFlightIntlOrderPassengerInfo> flightPassengerList;

    @FieldDoc("满仓Token")
    @JsonProperty("BookabilityTokenNumber")
    @XmlElement(name = "BookabilityTokenNumber")
    private String bookabilityTokenNumber;

    @FieldDoc("运价Token")
    @JsonProperty("RepricingTokenNumber")
    @XmlElement(name = "RepricingTokenNumber")
    private String repricingTokenNumber;

    @FieldDoc("订单备注")
    @JsonProperty("OrderRemark")
    @XmlElement(name = "OrderRemark")
    private String orderRemark;

    @FieldDoc("是否访问配送和支付白名单接口")
    @JsonProperty("NeedGetPaymentAndFulfillment")
    @XmlElement(name = "NeedGetPaymentAndFulfillment")
    private boolean needGetPaymentAndFulfillment;

    @FieldDoc("是否检查有重复订单")
    @JsonProperty("CheckRepeatOrders")
    @XmlElement(name = "CheckRepeatOrders")
    private boolean checkRepeatOrders;

    @FieldDoc("枚举类型VerifyOptionType，CommonXSD中找对应关系")
    @JsonProperty("VerifyOption")
    @XmlElement(name = "VerifyOption")
    private VerifyOptionType verifyOption;

    @FieldDoc("查询、反查关键信息")
    @JsonProperty("FlightSearchInfo")
    @XmlElement(name = "FlightSearchInfo")
    private FlightSearchInfo flightSearchInfo;

    @FieldDoc("记录客户端提示过的消息")
    @JsonProperty("AlertMessageTypeList")
    @XmlElement(name = "AlertMessageTypeList")
    private List<GaAlertMessageType> alertMessageTypeList;

    @FieldDoc("分销")
    @JsonProperty("AllianceInfo")
    @XmlElement(name = "AllianceInfo")
    private AllianceInfo allianceInfo;

    @FieldDoc("优惠券-代码")
    @JsonProperty("CouponNumber")
    @XmlElement(name = "CouponNumber")
    private String couponNumber;

    @FieldDoc("优惠券-外币立减金额")
    @JsonProperty("FDeductionAmount")
    @XmlElement(name = "FDeductionAmount")
    private BigDecimal fDeductionAmount;

    @FieldDoc("优惠券-优惠总金额（外币优惠券时,传CNY 金额）")
    @JsonProperty("CouponAmount")
    @XmlElement(name = "CouponAmount")
    private BigDecimal couponAmount;

    @FieldDoc("订单来源")
    @JsonProperty("ServerFrom")
    @XmlElement(name = "ServerFrom")
    private String serverFrom;

    @FieldDoc("支付信息")
    @JsonProperty("PaymentInfo")
    @XmlElement(name = "PaymentInfo")
    private GaFlightPaymentInfo paymentInfo;

    @FieldDoc("设备指纹（风控用）")
    @JsonProperty("RmsToken")
    @XmlElement(name = "RmsToken")
    private String rmsToken;

    @FieldDoc("订单号集合-新接接口请使用改字段传值")
    @JsonProperty("FlightOrderIdList")
    @XmlElement(name = "FlightOrderIdList")
    private List<Long> flightOrderIdList;

    @FieldDoc("配送信息")
    @JsonProperty("DeliveryInfo")
    @XmlElement(name = "DeliveryInfo")
    private GaDeliveryInfo deliveryInfo;

    @FieldDoc("X产品信息")
    @JsonProperty("ProductOrderInfo")
    @XmlElement(name = "ProductOrderInfo")
    private ProductOrderInfoType productOrderInfo;

    @FieldDoc("反查信息客户端需落地Json数据")
    @JsonProperty("ProductKeyInfoJson")
    @XmlElement(name = "ProductKeyInfoJson")
    private String productKeyInfoJson;

    @FieldDoc("是否多币种优惠券（走新的验券接口）")
    @JsonProperty("IsMutltiCurrencyCoupon")
    @XmlElement(name = "IsMutltiCurrencyCoupon")
    private boolean isMutltiCurrencyCoupon;

    @FieldDoc("多币种优惠券查询航班方式（PIID/FlightInfo）")
    @JsonProperty("CouponFlightType")
    @XmlElement(name = "CouponFlightType")
    private String couponFlightType;

    /**
     * SOA2.0请求头部信息
     */
    public Head getHead() {
        return this.head;
    }

    public void setHead(Head head) {
        this.head = head;
    }

    /**
     * 是否快速预订
     */
    public boolean getIsQuickBooking() {
        return this.isQuickBooking;
    }

    public void setIsQuickBooking(boolean isQuickBooking) {
        this.isQuickBooking = isQuickBooking;
    }

    /**
     * 是否实时支付
     */
    public boolean getIsRealTimePay() {
        return this.isRealTimePay;
    }

    public void setIsRealTimePay(boolean isRealTimePay) {
        this.isRealTimePay = isRealTimePay;
    }

    /**
     * 订单ID
     */
    public long getOrderID() {
        return this.orderID;
    }

    public void setOrderID(long orderID) {
        this.orderID = orderID;
    }

    /**
     * QTE运价跟查询价格不同，下单时是否需要提示用户
     */
    public boolean getIsRePricingNote() {
        return this.isRePricingNote;
    }

    public void setIsRePricingNote(boolean isRePricingNote) {
        this.isRePricingNote = isRePricingNote;
    }

    /**
     * 联系人信息
     */
    public CreateFlightIntlOrderContactInfo getContactInfo() {
        return this.contactInfo;
    }

    public void setContactInfo(CreateFlightIntlOrderContactInfo contactInfo) {
        this.contactInfo = contactInfo;
    }

    /**
     * 乘机人信息
     */
    public List<CreateFlightIntlOrderPassengerInfo> getFlightPassengerList() {
        return this.flightPassengerList;
    }

    public void setFlightPassengerList(List<CreateFlightIntlOrderPassengerInfo> flightPassengerList) {
        this.flightPassengerList = flightPassengerList;
    }

    /**
     * 满仓Token
     */
    public String getBookabilityTokenNumber() {
        return this.bookabilityTokenNumber;
    }

    public void setBookabilityTokenNumber(String bookabilityTokenNumber) {
        this.bookabilityTokenNumber = bookabilityTokenNumber;
    }

    /**
     * 运价Token
     */
    public String getRepricingTokenNumber() {
        return this.repricingTokenNumber;
    }

    public void setRepricingTokenNumber(String repricingTokenNumber) {
        this.repricingTokenNumber = repricingTokenNumber;
    }

    /**
     * 订单备注
     */
    public String getOrderRemark() {
        return this.orderRemark;
    }

    public void setOrderRemark(String orderRemark) {
        this.orderRemark = orderRemark;
    }

    /**
     * 是否访问配送和支付白名单接口
     */
    public boolean getNeedGetPaymentAndFulfillment() {
        return this.needGetPaymentAndFulfillment;
    }

    public void setNeedGetPaymentAndFulfillment(boolean needGetPaymentAndFulfillment) {
        this.needGetPaymentAndFulfillment = needGetPaymentAndFulfillment;
    }

    /**
     * 是否检查有重复订单
     */
    public boolean getCheckRepeatOrders() {
        return this.checkRepeatOrders;
    }

    public void setCheckRepeatOrders(boolean checkRepeatOrders) {
        this.checkRepeatOrders = checkRepeatOrders;
    }

    /**
     * 枚举类型VerifyOptionType，CommonXSD中找对应关系
     */
    public VerifyOptionType getVerifyOption() {
        return this.verifyOption;
    }

    public void setVerifyOption(VerifyOptionType verifyOption) {
        this.verifyOption = verifyOption;
    }

    /**
     * 查询、反查关键信息
     */
    public FlightSearchInfo getFlightSearchInfo() {
        return this.flightSearchInfo;
    }

    public void setFlightSearchInfo(FlightSearchInfo flightSearchInfo) {
        this.flightSearchInfo = flightSearchInfo;
    }

    /**
     * 记录客户端提示过的消息
     */
    public List<GaAlertMessageType> getAlertMessageTypeList() {
        return this.alertMessageTypeList;
    }

    public void setAlertMessageTypeList(List<GaAlertMessageType> alertMessageTypeList) {
        this.alertMessageTypeList = alertMessageTypeList;
    }

    /**
     * 分销
     */
    public AllianceInfo getAllianceInfo() {
        return this.allianceInfo;
    }

    public void setAllianceInfo(AllianceInfo allianceInfo) {
        this.allianceInfo = allianceInfo;
    }

    /**
     * 优惠券-代码
     */
    public String getCouponNumber() {
        return this.couponNumber;
    }

    public void setCouponNumber(String couponNumber) {
        this.couponNumber = couponNumber;
    }

    /**
     * 优惠券-外币立减金额
     */
    public BigDecimal getFDeductionAmount() {
        return this.fDeductionAmount;
    }

    public void setFDeductionAmount(BigDecimal fDeductionAmount) {
        this.fDeductionAmount = fDeductionAmount;
    }

    /**
     * 优惠券-优惠总金额（外币优惠券时,传CNY 金额）
     */
    public BigDecimal getCouponAmount() {
        return this.couponAmount;
    }

    public void setCouponAmount(BigDecimal couponAmount) {
        this.couponAmount = couponAmount;
    }

    /**
     * 订单来源
     */
    public String getServerFrom() {
        return this.serverFrom;
    }

    public void setServerFrom(String serverFrom) {
        this.serverFrom = serverFrom;
    }

    /**
     * 支付信息
     */
    public GaFlightPaymentInfo getPaymentInfo() {
        return this.paymentInfo;
    }

    public void setPaymentInfo(GaFlightPaymentInfo paymentInfo) {
        this.paymentInfo = paymentInfo;
    }

    /**
     * 设备指纹（风控用）
     */
    public String getRmsToken() {
        return this.rmsToken;
    }

    public void setRmsToken(String rmsToken) {
        this.rmsToken = rmsToken;
    }

    /**
     * 订单号集合-新接接口请使用改字段传值
     */
    public List<Long> getFlightOrderIdList() {
        return this.flightOrderIdList;
    }

    public void setFlightOrderIdList(List<Long> flightOrderIdList) {
        this.flightOrderIdList = flightOrderIdList;
    }

    /**
     * 配送信息
     */
    public GaDeliveryInfo getDeliveryInfo() {
        return this.deliveryInfo;
    }

    public void setDeliveryInfo(GaDeliveryInfo deliveryInfo) {
        this.deliveryInfo = deliveryInfo;
    }

    /**
     * X产品信息
     */
    public ProductOrderInfoType getProductOrderInfo() {
        return this.productOrderInfo;
    }

    public void setProductOrderInfo(ProductOrderInfoType productOrderInfo) {
        this.productOrderInfo = productOrderInfo;
    }

    /**
     * 反查信息客户端需落地Json数据
     */
    public String getProductKeyInfoJson() {
        return this.productKeyInfoJson;
    }

    public void setProductKeyInfoJson(String productKeyInfoJson) {
        this.productKeyInfoJson = productKeyInfoJson;
    }

    /**
     * 是否多币种优惠券（走新的验券接口）
     */
    public boolean getIsMutltiCurrencyCoupon() {
        return this.isMutltiCurrencyCoupon;
    }

    public void setIsMutltiCurrencyCoupon(boolean isMutltiCurrencyCoupon) {
        this.isMutltiCurrencyCoupon = isMutltiCurrencyCoupon;
    }

    /**
     * 多币种优惠券查询航班方式（PIID/FlightInfo）
     */
    public String getCouponFlightType() {
        return this.couponFlightType;
    }

    public void setCouponFlightType(String couponFlightType) {
        this.couponFlightType = couponFlightType;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final GaCreateFlightIntlOrderRequest other = (GaCreateFlightIntlOrderRequest)obj;
        return
            Objects.equal(this.head, other.head) && 
            Objects.equal(this.isQuickBooking, other.isQuickBooking) && 
            Objects.equal(this.isRealTimePay, other.isRealTimePay) && 
            Objects.equal(this.orderID, other.orderID) && 
            Objects.equal(this.isRePricingNote, other.isRePricingNote) && 
            Objects.equal(this.contactInfo, other.contactInfo) && 
            Objects.equal(this.flightPassengerList, other.flightPassengerList) && 
            Objects.equal(this.bookabilityTokenNumber, other.bookabilityTokenNumber) && 
            Objects.equal(this.repricingTokenNumber, other.repricingTokenNumber) && 
            Objects.equal(this.orderRemark, other.orderRemark) && 
            Objects.equal(this.needGetPaymentAndFulfillment, other.needGetPaymentAndFulfillment) && 
            Objects.equal(this.checkRepeatOrders, other.checkRepeatOrders) && 
            Objects.equal(this.verifyOption, other.verifyOption) && 
            Objects.equal(this.flightSearchInfo, other.flightSearchInfo) && 
            Objects.equal(this.alertMessageTypeList, other.alertMessageTypeList) && 
            Objects.equal(this.allianceInfo, other.allianceInfo) && 
            Objects.equal(this.couponNumber, other.couponNumber) && 
            Objects.equal(this.fDeductionAmount, other.fDeductionAmount) && 
            Objects.equal(this.couponAmount, other.couponAmount) && 
            Objects.equal(this.serverFrom, other.serverFrom) && 
            Objects.equal(this.paymentInfo, other.paymentInfo) && 
            Objects.equal(this.rmsToken, other.rmsToken) && 
            Objects.equal(this.flightOrderIdList, other.flightOrderIdList) && 
            Objects.equal(this.deliveryInfo, other.deliveryInfo) && 
            Objects.equal(this.productOrderInfo, other.productOrderInfo) && 
            Objects.equal(this.productKeyInfoJson, other.productKeyInfoJson) && 
            Objects.equal(this.isMutltiCurrencyCoupon, other.isMutltiCurrencyCoupon) && 
            Objects.equal(this.couponFlightType, other.couponFlightType);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.head);
        result = 31 * result + Objects.hashCode(this.isQuickBooking);
        result = 31 * result + Objects.hashCode(this.isRealTimePay);
        result = 31 * result + Objects.hashCode(this.orderID);
        result = 31 * result + Objects.hashCode(this.isRePricingNote);
        result = 31 * result + Objects.hashCode(this.contactInfo);
        result = 31 * result + Objects.hashCode(this.flightPassengerList);
        result = 31 * result + Objects.hashCode(this.bookabilityTokenNumber);
        result = 31 * result + Objects.hashCode(this.repricingTokenNumber);
        result = 31 * result + Objects.hashCode(this.orderRemark);
        result = 31 * result + Objects.hashCode(this.needGetPaymentAndFulfillment);
        result = 31 * result + Objects.hashCode(this.checkRepeatOrders);
        result = 31 * result + Objects.hashCode(this.verifyOption);
        result = 31 * result + Objects.hashCode(this.flightSearchInfo);
        result = 31 * result + Objects.hashCode(this.alertMessageTypeList);
        result = 31 * result + Objects.hashCode(this.allianceInfo);
        result = 31 * result + Objects.hashCode(this.couponNumber);
        result = 31 * result + Objects.hashCode(this.fDeductionAmount);
        result = 31 * result + Objects.hashCode(this.couponAmount);
        result = 31 * result + Objects.hashCode(this.serverFrom);
        result = 31 * result + Objects.hashCode(this.paymentInfo);
        result = 31 * result + Objects.hashCode(this.rmsToken);
        result = 31 * result + Objects.hashCode(this.flightOrderIdList);
        result = 31 * result + Objects.hashCode(this.deliveryInfo);
        result = 31 * result + Objects.hashCode(this.productOrderInfo);
        result = 31 * result + Objects.hashCode(this.productKeyInfoJson);
        result = 31 * result + Objects.hashCode(this.isMutltiCurrencyCoupon);
        result = 31 * result + Objects.hashCode(this.couponFlightType);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("head", head)
            .add("isQuickBooking", isQuickBooking)
            .add("isRealTimePay", isRealTimePay)
            .add("orderID", orderID)
            .add("isRePricingNote", isRePricingNote)
            .add("contactInfo", contactInfo)
            .add("flightPassengerList", flightPassengerList)
            .add("bookabilityTokenNumber", bookabilityTokenNumber)
            .add("repricingTokenNumber", repricingTokenNumber)
            .add("orderRemark", orderRemark)
            .add("needGetPaymentAndFulfillment", needGetPaymentAndFulfillment)
            .add("checkRepeatOrders", checkRepeatOrders)
            .add("verifyOption", verifyOption)
            .add("flightSearchInfo", flightSearchInfo)
            .add("alertMessageTypeList", alertMessageTypeList)
            .add("allianceInfo", allianceInfo)
            .add("couponNumber", couponNumber)
            .add("fDeductionAmount", fDeductionAmount)
            .add("couponAmount", couponAmount)
            .add("serverFrom", serverFrom)
            .add("paymentInfo", paymentInfo)
            .add("rmsToken", rmsToken)
            .add("flightOrderIdList", flightOrderIdList)
            .add("deliveryInfo", deliveryInfo)
            .add("productOrderInfo", productOrderInfo)
            .add("productKeyInfoJson", productKeyInfoJson)
            .add("isMutltiCurrencyCoupon", isMutltiCurrencyCoupon)
            .add("couponFlightType", couponFlightType)
            .toString();
    }
}