/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.payment.getpaymentneedinfo.v1;

import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 持卡人证件类型
 */
@DtoDoc("持卡人证件类型")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CardHolderIDCardTypeEntity", propOrder = {
    "idCardType",
    "idCardTypeGlobalName"
})
@SuppressWarnings("all")
public class CardHolderIDCardTypeEntity  {

    private static final long serialVersionUID = 1L;

    public CardHolderIDCardTypeEntity(
        int idCardType, 
        String idCardTypeGlobalName) {
        this.idCardType = idCardType;
        this.idCardTypeGlobalName = idCardTypeGlobalName;
    }

    public CardHolderIDCardTypeEntity() {
    }

    @FieldDoc("证件类型ID")
    @JsonProperty("IDCardType")
    @XmlElement(name = "IDCardType")
    private int idCardType;

    @FieldDoc("证件多语言名称")
    @JsonProperty("IDCardTypeGlobalName")
    @XmlElement(name = "IDCardTypeGlobalName")
    private String idCardTypeGlobalName;

    /**
     * 证件类型ID
     */
    public int getIdCardType() {
        return this.idCardType;
    }

    public void setIdCardType(int idCardType) {
        this.idCardType = idCardType;
    }

    /**
     * 证件多语言名称
     */
    public String getIdCardTypeGlobalName() {
        return this.idCardTypeGlobalName;
    }

    public void setIdCardTypeGlobalName(String idCardTypeGlobalName) {
        this.idCardTypeGlobalName = idCardTypeGlobalName;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final CardHolderIDCardTypeEntity other = (CardHolderIDCardTypeEntity)obj;
        return
            Objects.equal(this.idCardType, other.idCardType) && 
            Objects.equal(this.idCardTypeGlobalName, other.idCardTypeGlobalName);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.idCardType);
        result = 31 * result + Objects.hashCode(this.idCardTypeGlobalName);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("idCardType", idCardType)
            .add("idCardTypeGlobalName", idCardTypeGlobalName)
            .toString();
    }
}