/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.gacreateflightintlorder.v1;

import com.ctrip.soa.global.api.comm.responsehead.v1.ResponseHead;
import com.ctrip.soa.global.api.flightcommon.v1.FlightRealTimePay;
import com.ctrip.soa.global.api.flightcommon.v1.GaCreateOrderStatus;
import com.ctrip.soa.global.api.flightcommon.v1.GaFlightPaymentInfo;
import com.ctrip.soa.global.api.flightcommon.v1.GaSaveOrderDetailInfo;
import com.ctrip.soa.global.api.flightcommon.v1.OrderExchangeInfo;
import com.ctrip.soa.global.api.flightcommon.v1.RepeatOrderInfo;
import com.ctrip.soa.global.api.flightcommon.v1.RepricingResponse;
import com.ctriposs.baiji.rpc.common.HasResponseStatus;
import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.ctriposs.baiji.rpc.common.types.ResponseStatusType;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.math.BigDecimal;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 国际机票提交订单返回值
 */
@DtoDoc("国际机票提交订单返回值")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlRootElement(name = "GaCreateFlightIntlOrderResponse", namespace = "http://soa.ctrip.com/Global/API/GaCreateFlightIntlOrder/v1")
@XmlType(name = "GaCreateFlightIntlOrderResponse", propOrder = {
    "responseStatus",
    "responseHead",
    "status",
    "errorCode",
    "errorMsg",
    "flightOrderIdList",
    "externalNO",
    "paymentInfo",
    "exchangeInfo",
    "repeatOrderIds",
    "repeatOrderInfoList",
    "paymentAndFulfillmentInfo",
    "repricingResponse",
    "tempOrderID",
    "totalPrice",
    "flightRealTimePay",
    "buzTypeEnum",
    "autoReservSnNoList",
    "createdOrderInfoList",
    "orderSplitType"
})
@SuppressWarnings("all")
public class GaCreateFlightIntlOrderResponse implements HasResponseStatus {

    private static final long serialVersionUID = 1L;

    public GaCreateFlightIntlOrderResponse(
        ResponseStatusType responseStatus, 
        ResponseHead responseHead, 
        GaCreateOrderStatus status, 
        int errorCode, 
        String errorMsg, 
        List<Long> flightOrderIdList, 
        String externalNO, 
        GaFlightPaymentInfo paymentInfo, 
        OrderExchangeInfo exchangeInfo, 
        String repeatOrderIds, 
        List<RepeatOrderInfo> repeatOrderInfoList, 
        PaymentAndFulfillment paymentAndFulfillmentInfo, 
        RepricingResponse repricingResponse, 
        int tempOrderID, 
        BigDecimal totalPrice, 
        FlightRealTimePay flightRealTimePay, 
        int buzTypeEnum, 
        List<String> autoReservSnNoList, 
        List<GaSaveOrderDetailInfo> createdOrderInfoList, 
        int orderSplitType) {
        this.responseStatus = responseStatus;
        this.responseHead = responseHead;
        this.status = status;
        this.errorCode = errorCode;
        this.errorMsg = errorMsg;
        this.flightOrderIdList = flightOrderIdList;
        this.externalNO = externalNO;
        this.paymentInfo = paymentInfo;
        this.exchangeInfo = exchangeInfo;
        this.repeatOrderIds = repeatOrderIds;
        this.repeatOrderInfoList = repeatOrderInfoList;
        this.paymentAndFulfillmentInfo = paymentAndFulfillmentInfo;
        this.repricingResponse = repricingResponse;
        this.tempOrderID = tempOrderID;
        this.totalPrice = totalPrice;
        this.flightRealTimePay = flightRealTimePay;
        this.buzTypeEnum = buzTypeEnum;
        this.autoReservSnNoList = autoReservSnNoList;
        this.createdOrderInfoList = createdOrderInfoList;
        this.orderSplitType = orderSplitType;
    }

    public GaCreateFlightIntlOrderResponse() {
    }

    @FieldDoc("SOA2.0返回头部信息")
    @JsonProperty("ResponseStatus")
    @XmlElement(name = "ResponseStatus")
    private ResponseStatusType responseStatus;

    @JsonProperty("ResponseHead")
    @XmlElement(name = "ResponseHead")
    private ResponseHead responseHead;

    @FieldDoc("国内和国际是不同人做的,app先接的国内,要求国际要和国内一致" +
            "wap先接国际,不能删除ErrorCode")
    @JsonProperty("Status")
    @XmlElement(name = "Status")
    private GaCreateOrderStatus status;

    @FieldDoc("错误编号,0为正确")
    @JsonProperty("ErrorCode")
    @XmlElement(name = "ErrorCode")
    private int errorCode;

    @FieldDoc("错误消息,正确为空")
    @JsonProperty("ErrorMsg")
    @XmlElement(name = "ErrorMsg")
    private String errorMsg;

    @FieldDoc("真实订单号列表")
    @JsonProperty("FlightOrderIdList")
    @XmlElement(name = "FlightOrderIdList")
    private List<Long> flightOrderIdList;

    @FieldDoc("支付用流水号")
    @JsonProperty("ExternalNO")
    @XmlElement(name = "ExternalNO")
    private String externalNO;

    @FieldDoc("支付信息")
    @JsonProperty("PaymentInfo")
    @XmlElement(name = "PaymentInfo")
    private GaFlightPaymentInfo paymentInfo;

    @FieldDoc("多币种支付信息")
    @JsonProperty("ExchangeInfo")
    @XmlElement(name = "ExchangeInfo")
    private OrderExchangeInfo exchangeInfo;

    @FieldDoc("重复订单号，以\",\"分割")
    @JsonProperty("RepeatOrderIds")
    @XmlElement(name = "RepeatOrderIds")
    private String repeatOrderIds;

    @FieldDoc("重复订单信息列表")
    @JsonProperty("RepeatOrderInfoList")
    @XmlElement(name = "RepeatOrderInfoList")
    private List<RepeatOrderInfo> repeatOrderInfoList;

    @FieldDoc("国际机票获取配送及支付信息")
    @JsonProperty("PaymentAndFulfillmentInfo")
    @XmlElement(name = "PaymentAndFulfillmentInfo")
    private PaymentAndFulfillment paymentAndFulfillmentInfo;

    @FieldDoc("运价检查信息")
    @JsonProperty("RepricingResponse")
    @XmlElement(name = "RepricingResponse")
    private RepricingResponse repricingResponse;

    @FieldDoc("DB临时订单Id")
    @JsonProperty("TempOrderID")
    @XmlElement(name = "TempOrderID")
    private int tempOrderID;

    @FieldDoc("订单总金额")
    @JsonProperty("TotalPrice")
    @XmlElement(name = "TotalPrice")
    private BigDecimal totalPrice;

    @FieldDoc("允许的扣款方式")
    @JsonProperty("FlightRealTimePay")
    @XmlElement(name = "FlightRealTimePay")
    private FlightRealTimePay flightRealTimePay;

    @FieldDoc("无外卡手续费")
    @JsonProperty("BuzTypeEnum")
    @XmlElement(name = "BuzTypeEnum")
    private int buzTypeEnum;

    @FieldDoc("订位TokenNumber，多PU会存在多个")
    @JsonProperty("AutoReservSnNoList")
    @XmlElement(name = "AutoReservSnNoList")
    private List<String> autoReservSnNoList;

    @FieldDoc("创单结果List")
    @JsonProperty("CreatedOrderInfoList")
    @XmlElement(name = "CreatedOrderInfoList")
    private List<GaSaveOrderDetailInfo> createdOrderInfoList;

    @FieldDoc("拆单类型" +
            "0 -未知" +
            "1 -往返程拆单" +
            "2 -儿童成人/成人婴儿" +
            "3 -多程 拆单 -1拆4 或非12类型")
    @JsonProperty("OrderSplitType")
    @XmlElement(name = "OrderSplitType")
    private int orderSplitType;

    /**
     * SOA2.0返回头部信息
     */
    public ResponseStatusType getResponseStatus() {
        return this.responseStatus;
    }

    public void setResponseStatus(ResponseStatusType responseStatus) {
        this.responseStatus = responseStatus;
    }

    public ResponseHead getResponseHead() {
        return this.responseHead;
    }

    public void setResponseHead(ResponseHead responseHead) {
        this.responseHead = responseHead;
    }

    /**
     * 国内和国际是不同人做的,app先接的国内,要求国际要和国内一致
     *             wap先接国际,不能删除ErrorCode
     */
    public GaCreateOrderStatus getStatus() {
        return this.status;
    }

    public void setStatus(GaCreateOrderStatus status) {
        this.status = status;
    }

    /**
     * 错误编号,0为正确
     */
    public int getErrorCode() {
        return this.errorCode;
    }

    public void setErrorCode(int errorCode) {
        this.errorCode = errorCode;
    }

    /**
     * 错误消息,正确为空
     */
    public String getErrorMsg() {
        return this.errorMsg;
    }

    public void setErrorMsg(String errorMsg) {
        this.errorMsg = errorMsg;
    }

    /**
     * 真实订单号列表
     */
    public List<Long> getFlightOrderIdList() {
        return this.flightOrderIdList;
    }

    public void setFlightOrderIdList(List<Long> flightOrderIdList) {
        this.flightOrderIdList = flightOrderIdList;
    }

    /**
     * 支付用流水号
     */
    public String getExternalNO() {
        return this.externalNO;
    }

    public void setExternalNO(String externalNO) {
        this.externalNO = externalNO;
    }

    /**
     * 支付信息
     */
    public GaFlightPaymentInfo getPaymentInfo() {
        return this.paymentInfo;
    }

    public void setPaymentInfo(GaFlightPaymentInfo paymentInfo) {
        this.paymentInfo = paymentInfo;
    }

    /**
     * 多币种支付信息
     */
    public OrderExchangeInfo getExchangeInfo() {
        return this.exchangeInfo;
    }

    public void setExchangeInfo(OrderExchangeInfo exchangeInfo) {
        this.exchangeInfo = exchangeInfo;
    }

    /**
     * 重复订单号，以","分割
     */
    public String getRepeatOrderIds() {
        return this.repeatOrderIds;
    }

    public void setRepeatOrderIds(String repeatOrderIds) {
        this.repeatOrderIds = repeatOrderIds;
    }

    /**
     * 重复订单信息列表
     */
    public List<RepeatOrderInfo> getRepeatOrderInfoList() {
        return this.repeatOrderInfoList;
    }

    public void setRepeatOrderInfoList(List<RepeatOrderInfo> repeatOrderInfoList) {
        this.repeatOrderInfoList = repeatOrderInfoList;
    }

    /**
     * 国际机票获取配送及支付信息
     */
    public PaymentAndFulfillment getPaymentAndFulfillmentInfo() {
        return this.paymentAndFulfillmentInfo;
    }

    public void setPaymentAndFulfillmentInfo(PaymentAndFulfillment paymentAndFulfillmentInfo) {
        this.paymentAndFulfillmentInfo = paymentAndFulfillmentInfo;
    }

    /**
     * 运价检查信息
     */
    public RepricingResponse getRepricingResponse() {
        return this.repricingResponse;
    }

    public void setRepricingResponse(RepricingResponse repricingResponse) {
        this.repricingResponse = repricingResponse;
    }

    /**
     * DB临时订单Id
     */
    public int getTempOrderID() {
        return this.tempOrderID;
    }

    public void setTempOrderID(int tempOrderID) {
        this.tempOrderID = tempOrderID;
    }

    /**
     * 订单总金额
     */
    public BigDecimal getTotalPrice() {
        return this.totalPrice;
    }

    public void setTotalPrice(BigDecimal totalPrice) {
        this.totalPrice = totalPrice;
    }

    /**
     * 允许的扣款方式
     */
    public FlightRealTimePay getFlightRealTimePay() {
        return this.flightRealTimePay;
    }

    public void setFlightRealTimePay(FlightRealTimePay flightRealTimePay) {
        this.flightRealTimePay = flightRealTimePay;
    }

    /**
     * 无外卡手续费
     */
    public int getBuzTypeEnum() {
        return this.buzTypeEnum;
    }

    public void setBuzTypeEnum(int buzTypeEnum) {
        this.buzTypeEnum = buzTypeEnum;
    }

    /**
     * 订位TokenNumber，多PU会存在多个
     */
    public List<String> getAutoReservSnNoList() {
        return this.autoReservSnNoList;
    }

    public void setAutoReservSnNoList(List<String> autoReservSnNoList) {
        this.autoReservSnNoList = autoReservSnNoList;
    }

    /**
     * 创单结果List
     */
    public List<GaSaveOrderDetailInfo> getCreatedOrderInfoList() {
        return this.createdOrderInfoList;
    }

    public void setCreatedOrderInfoList(List<GaSaveOrderDetailInfo> createdOrderInfoList) {
        this.createdOrderInfoList = createdOrderInfoList;
    }

    /**
     * 拆单类型
     *             0 -未知
     *             1 -往返程拆单
     *             2 -儿童成人/成人婴儿
     *             3 -多程 拆单 -1拆4 或非12类型
     */
    public int getOrderSplitType() {
        return this.orderSplitType;
    }

    public void setOrderSplitType(int orderSplitType) {
        this.orderSplitType = orderSplitType;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final GaCreateFlightIntlOrderResponse other = (GaCreateFlightIntlOrderResponse)obj;
        return
            Objects.equal(this.responseStatus, other.responseStatus) && 
            Objects.equal(this.responseHead, other.responseHead) && 
            Objects.equal(this.status, other.status) && 
            Objects.equal(this.errorCode, other.errorCode) && 
            Objects.equal(this.errorMsg, other.errorMsg) && 
            Objects.equal(this.flightOrderIdList, other.flightOrderIdList) && 
            Objects.equal(this.externalNO, other.externalNO) && 
            Objects.equal(this.paymentInfo, other.paymentInfo) && 
            Objects.equal(this.exchangeInfo, other.exchangeInfo) && 
            Objects.equal(this.repeatOrderIds, other.repeatOrderIds) && 
            Objects.equal(this.repeatOrderInfoList, other.repeatOrderInfoList) && 
            Objects.equal(this.paymentAndFulfillmentInfo, other.paymentAndFulfillmentInfo) && 
            Objects.equal(this.repricingResponse, other.repricingResponse) && 
            Objects.equal(this.tempOrderID, other.tempOrderID) && 
            Objects.equal(this.totalPrice, other.totalPrice) && 
            Objects.equal(this.flightRealTimePay, other.flightRealTimePay) && 
            Objects.equal(this.buzTypeEnum, other.buzTypeEnum) && 
            Objects.equal(this.autoReservSnNoList, other.autoReservSnNoList) && 
            Objects.equal(this.createdOrderInfoList, other.createdOrderInfoList) && 
            Objects.equal(this.orderSplitType, other.orderSplitType);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.responseStatus);
        result = 31 * result + Objects.hashCode(this.responseHead);
        result = 31 * result + Objects.hashCode(this.status);
        result = 31 * result + Objects.hashCode(this.errorCode);
        result = 31 * result + Objects.hashCode(this.errorMsg);
        result = 31 * result + Objects.hashCode(this.flightOrderIdList);
        result = 31 * result + Objects.hashCode(this.externalNO);
        result = 31 * result + Objects.hashCode(this.paymentInfo);
        result = 31 * result + Objects.hashCode(this.exchangeInfo);
        result = 31 * result + Objects.hashCode(this.repeatOrderIds);
        result = 31 * result + Objects.hashCode(this.repeatOrderInfoList);
        result = 31 * result + Objects.hashCode(this.paymentAndFulfillmentInfo);
        result = 31 * result + Objects.hashCode(this.repricingResponse);
        result = 31 * result + Objects.hashCode(this.tempOrderID);
        result = 31 * result + Objects.hashCode(this.totalPrice);
        result = 31 * result + Objects.hashCode(this.flightRealTimePay);
        result = 31 * result + Objects.hashCode(this.buzTypeEnum);
        result = 31 * result + Objects.hashCode(this.autoReservSnNoList);
        result = 31 * result + Objects.hashCode(this.createdOrderInfoList);
        result = 31 * result + Objects.hashCode(this.orderSplitType);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("responseStatus", responseStatus)
            .add("responseHead", responseHead)
            .add("status", status)
            .add("errorCode", errorCode)
            .add("errorMsg", errorMsg)
            .add("flightOrderIdList", flightOrderIdList)
            .add("externalNO", externalNO)
            .add("paymentInfo", paymentInfo)
            .add("exchangeInfo", exchangeInfo)
            .add("repeatOrderIds", repeatOrderIds)
            .add("repeatOrderInfoList", repeatOrderInfoList)
            .add("paymentAndFulfillmentInfo", paymentAndFulfillmentInfo)
            .add("repricingResponse", repricingResponse)
            .add("tempOrderID", tempOrderID)
            .add("totalPrice", totalPrice)
            .add("flightRealTimePay", flightRealTimePay)
            .add("buzTypeEnum", buzTypeEnum)
            .add("autoReservSnNoList", autoReservSnNoList)
            .add("createdOrderInfoList", createdOrderInfoList)
            .add("orderSplitType", orderSplitType)
            .toString();
    }
}