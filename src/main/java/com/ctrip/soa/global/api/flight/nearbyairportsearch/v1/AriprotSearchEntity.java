/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.flight.nearbyairportsearch.v1;

import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;

@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AriprotSearchEntity", propOrder = {
    "countryID",
    "countryName",
    "provinceID",
    "provinceName",
    "cityID",
    "cityCode",
    "cityName",
    "cityNameEN",
    "airportName",
    "airportCode",
    "isInternational",
    "distance"
})
@SuppressWarnings("all")
public class AriprotSearchEntity  {

    private static final long serialVersionUID = 1L;

    public AriprotSearchEntity(
        Integer countryID, 
        String countryName, 
        Integer provinceID, 
        String provinceName, 
        Integer cityID, 
        String cityCode, 
        String cityName, 
        String cityNameEN, 
        String airportName, 
        String airportCode, 
        Integer isInternational, 
        Float distance) {
        this.countryID = countryID;
        this.countryName = countryName;
        this.provinceID = provinceID;
        this.provinceName = provinceName;
        this.cityID = cityID;
        this.cityCode = cityCode;
        this.cityName = cityName;
        this.cityNameEN = cityNameEN;
        this.airportName = airportName;
        this.airportCode = airportCode;
        this.isInternational = isInternational;
        this.distance = distance;
    }

    public AriprotSearchEntity() {
    }

    @JsonProperty("CountryID")
    @XmlAttribute(name = "CountryID")
    private Integer countryID;

    @JsonProperty("CountryName")
    @XmlAttribute(name = "CountryName")
    private String countryName;

    @JsonProperty("ProvinceID")
    @XmlAttribute(name = "ProvinceID")
    private Integer provinceID;

    @JsonProperty("ProvinceName")
    @XmlAttribute(name = "ProvinceName")
    private String provinceName;

    @JsonProperty("CityID")
    @XmlAttribute(name = "CityID")
    private Integer cityID;

    @JsonProperty("CityCode")
    @XmlAttribute(name = "CityCode")
    private String cityCode;

    @JsonProperty("CityName")
    @XmlAttribute(name = "CityName")
    private String cityName;

    @JsonProperty("CityNameEN")
    @XmlAttribute(name = "CityNameEN")
    private String cityNameEN;

    @JsonProperty("AirportName")
    @XmlAttribute(name = "AirportName")
    private String airportName;

    @JsonProperty("AirportCode")
    @XmlAttribute(name = "AirportCode")
    private String airportCode;

    @JsonProperty("IsInternational")
    @XmlAttribute(name = "IsInternational")
    private Integer isInternational;

    @JsonProperty("Distance")
    @XmlAttribute(name = "Distance")
    private Float distance;

    public Integer getCountryID() {
        return this.countryID;
    }

    public void setCountryID(Integer countryID) {
        this.countryID = countryID;
    }

    public String getCountryName() {
        return this.countryName;
    }

    public void setCountryName(String countryName) {
        this.countryName = countryName;
    }

    public Integer getProvinceID() {
        return this.provinceID;
    }

    public void setProvinceID(Integer provinceID) {
        this.provinceID = provinceID;
    }

    public String getProvinceName() {
        return this.provinceName;
    }

    public void setProvinceName(String provinceName) {
        this.provinceName = provinceName;
    }

    public Integer getCityID() {
        return this.cityID;
    }

    public void setCityID(Integer cityID) {
        this.cityID = cityID;
    }

    public String getCityCode() {
        return this.cityCode;
    }

    public void setCityCode(String cityCode) {
        this.cityCode = cityCode;
    }

    public String getCityName() {
        return this.cityName;
    }

    public void setCityName(String cityName) {
        this.cityName = cityName;
    }

    public String getCityNameEN() {
        return this.cityNameEN;
    }

    public void setCityNameEN(String cityNameEN) {
        this.cityNameEN = cityNameEN;
    }

    public String getAirportName() {
        return this.airportName;
    }

    public void setAirportName(String airportName) {
        this.airportName = airportName;
    }

    public String getAirportCode() {
        return this.airportCode;
    }

    public void setAirportCode(String airportCode) {
        this.airportCode = airportCode;
    }

    public Integer getIsInternational() {
        return this.isInternational;
    }

    public void setIsInternational(Integer isInternational) {
        this.isInternational = isInternational;
    }

    public Float getDistance() {
        return this.distance;
    }

    public void setDistance(Float distance) {
        this.distance = distance;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final AriprotSearchEntity other = (AriprotSearchEntity)obj;
        return
            Objects.equal(this.countryID, other.countryID) && 
            Objects.equal(this.countryName, other.countryName) && 
            Objects.equal(this.provinceID, other.provinceID) && 
            Objects.equal(this.provinceName, other.provinceName) && 
            Objects.equal(this.cityID, other.cityID) && 
            Objects.equal(this.cityCode, other.cityCode) && 
            Objects.equal(this.cityName, other.cityName) && 
            Objects.equal(this.cityNameEN, other.cityNameEN) && 
            Objects.equal(this.airportName, other.airportName) && 
            Objects.equal(this.airportCode, other.airportCode) && 
            Objects.equal(this.isInternational, other.isInternational) && 
            Objects.equal(this.distance, other.distance);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.countryID);
        result = 31 * result + Objects.hashCode(this.countryName);
        result = 31 * result + Objects.hashCode(this.provinceID);
        result = 31 * result + Objects.hashCode(this.provinceName);
        result = 31 * result + Objects.hashCode(this.cityID);
        result = 31 * result + Objects.hashCode(this.cityCode);
        result = 31 * result + Objects.hashCode(this.cityName);
        result = 31 * result + Objects.hashCode(this.cityNameEN);
        result = 31 * result + Objects.hashCode(this.airportName);
        result = 31 * result + Objects.hashCode(this.airportCode);
        result = 31 * result + Objects.hashCode(this.isInternational);
        result = 31 * result + Objects.hashCode(this.distance);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("countryID", countryID)
            .add("countryName", countryName)
            .add("provinceID", provinceID)
            .add("provinceName", provinceName)
            .add("cityID", cityID)
            .add("cityCode", cityCode)
            .add("cityName", cityName)
            .add("cityNameEN", cityNameEN)
            .add("airportName", airportName)
            .add("airportCode", airportCode)
            .add("isInternational", isInternational)
            .add("distance", distance)
            .toString();
    }
}