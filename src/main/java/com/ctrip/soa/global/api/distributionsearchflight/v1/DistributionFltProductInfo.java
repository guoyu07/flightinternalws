/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.distributionsearchflight.v1;

import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.util.Calendar;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 航线产品信息
 */
@DtoDoc("航线产品信息")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DistributionFltProductInfo", propOrder = {
    "groupID",
    "partitionedToken",
    "nextGroupKey",
    "arrivalDays",
    "laveTicket",
    "dCity",
    "aCity",
    "dDate",
    "aDate",
    "duration",
    "durationStr",
    "hour",
    "min",
    "colunmInfoList",
    "partialColunmInfoList",
    "policyInfo"
})
@SuppressWarnings("all")
public class DistributionFltProductInfo  {

    private static final long serialVersionUID = 1L;

    public DistributionFltProductInfo(
        String groupID, 
        String partitionedToken, 
        String nextGroupKey, 
        int arrivalDays, 
        int laveTicket, 
        DistributionCityInfo dCity, 
        DistributionCityInfo aCity, 
        Calendar dDate, 
        Calendar aDate, 
        int duration, 
        String durationStr, 
        int hour, 
        int min, 
        List<DistributionColunmInfo> colunmInfoList, 
        List<DistributionColunmInfo> partialColunmInfoList, 
        List<DistributionPolicyPirceInfo> policyInfo) {
        this.groupID = groupID;
        this.partitionedToken = partitionedToken;
        this.nextGroupKey = nextGroupKey;
        this.arrivalDays = arrivalDays;
        this.laveTicket = laveTicket;
        this.dCity = dCity;
        this.aCity = aCity;
        this.dDate = dDate;
        this.aDate = aDate;
        this.duration = duration;
        this.durationStr = durationStr;
        this.hour = hour;
        this.min = min;
        this.colunmInfoList = colunmInfoList;
        this.partialColunmInfoList = partialColunmInfoList;
        this.policyInfo = policyInfo;
    }

    public DistributionFltProductInfo() {
    }

    @FieldDoc("去程、返程对应ID号，当查询选择需要返程航班信息时输出从1开始，否则为0")
    @JsonProperty("GroupID")
    @XmlElement(name = "GroupID")
    private String groupID;

    @FieldDoc("该Group所属批次号，空=第一批次")
    @JsonProperty("PartitionedToken")
    @XmlElement(name = "PartitionedToken")
    private String partitionedToken;

    @FieldDoc("航班号所组成的Key")
    @JsonProperty("NextGroupKey")
    @XmlElement(name = "NextGroupKey")
    private String nextGroupKey;

    @FieldDoc("航班跨天数")
    @JsonProperty("ArrivalDays")
    @XmlElement(name = "ArrivalDays")
    private int arrivalDays;

    @FieldDoc("剩余票量")
    @JsonProperty("LaveTicket")
    @XmlElement(name = "LaveTicket")
    private int laveTicket;

    @FieldDoc("出发城市")
    @JsonProperty("DCity")
    @XmlElement(name = "DCity")
    private DistributionCityInfo dCity;

    @FieldDoc("到达城市")
    @JsonProperty("ACity")
    @XmlElement(name = "ACity")
    private DistributionCityInfo aCity;

    @FieldDoc("出发时间")
    @JsonProperty("DDate")
    @XmlElement(name = "DDate")
    private Calendar dDate;

    @FieldDoc("到达时间")
    @JsonProperty("ADate")
    @XmlElement(name = "ADate")
    private Calendar aDate;

    @FieldDoc("飞行总时间/分钟")
    @JsonProperty("Duration")
    @XmlElement(name = "Duration")
    private int duration;

    @FieldDoc("飞行时间字符串 2h3m")
    @JsonProperty("DurationStr")
    @XmlElement(name = "DurationStr")
    private String durationStr;

    @FieldDoc("飞行小时/总时间换算")
    @JsonProperty("Hour")
    @XmlElement(name = "Hour")
    private int hour;

    @FieldDoc("飞行除去小时后剩余分钟数")
    @JsonProperty("Min")
    @XmlElement(name = "Min")
    private int min;

    @FieldDoc("航段信息")
    @JsonProperty("ColunmInfoList")
    @XmlElement(name = "ColunmInfoList")
    private List<DistributionColunmInfo> colunmInfoList;

    @FieldDoc("国际弃程")
    @JsonProperty("PartialColunmInfoList")
    @XmlElement(name = "PartialColunmInfoList")
    private List<DistributionColunmInfo> partialColunmInfoList;

    @FieldDoc("运价、政策信息")
    @JsonProperty("PolicyInfo")
    @XmlElement(name = "PolicyInfo")
    private List<DistributionPolicyPirceInfo> policyInfo;

    /**
     * 去程、返程对应ID号，当查询选择需要返程航班信息时输出从1开始，否则为0
     */
    public String getGroupID() {
        return this.groupID;
    }

    public void setGroupID(String groupID) {
        this.groupID = groupID;
    }

    /**
     * 该Group所属批次号，空=第一批次
     */
    public String getPartitionedToken() {
        return this.partitionedToken;
    }

    public void setPartitionedToken(String partitionedToken) {
        this.partitionedToken = partitionedToken;
    }

    /**
     * 航班号所组成的Key
     */
    public String getNextGroupKey() {
        return this.nextGroupKey;
    }

    public void setNextGroupKey(String nextGroupKey) {
        this.nextGroupKey = nextGroupKey;
    }

    /**
     * 航班跨天数
     */
    public int getArrivalDays() {
        return this.arrivalDays;
    }

    public void setArrivalDays(int arrivalDays) {
        this.arrivalDays = arrivalDays;
    }

    /**
     * 剩余票量
     */
    public int getLaveTicket() {
        return this.laveTicket;
    }

    public void setLaveTicket(int laveTicket) {
        this.laveTicket = laveTicket;
    }

    /**
     * 出发城市
     */
    public DistributionCityInfo getDCity() {
        return this.dCity;
    }

    public void setDCity(DistributionCityInfo dCity) {
        this.dCity = dCity;
    }

    /**
     * 到达城市
     */
    public DistributionCityInfo getACity() {
        return this.aCity;
    }

    public void setACity(DistributionCityInfo aCity) {
        this.aCity = aCity;
    }

    /**
     * 出发时间
     */
    public Calendar getDDate() {
        return this.dDate;
    }

    public void setDDate(Calendar dDate) {
        this.dDate = dDate;
    }

    /**
     * 到达时间
     */
    public Calendar getADate() {
        return this.aDate;
    }

    public void setADate(Calendar aDate) {
        this.aDate = aDate;
    }

    /**
     * 飞行总时间/分钟
     */
    public int getDuration() {
        return this.duration;
    }

    public void setDuration(int duration) {
        this.duration = duration;
    }

    /**
     * 飞行时间字符串 2h3m
     */
    public String getDurationStr() {
        return this.durationStr;
    }

    public void setDurationStr(String durationStr) {
        this.durationStr = durationStr;
    }

    /**
     * 飞行小时/总时间换算
     */
    public int getHour() {
        return this.hour;
    }

    public void setHour(int hour) {
        this.hour = hour;
    }

    /**
     * 飞行除去小时后剩余分钟数
     */
    public int getMin() {
        return this.min;
    }

    public void setMin(int min) {
        this.min = min;
    }

    /**
     * 航段信息
     */
    public List<DistributionColunmInfo> getColunmInfoList() {
        return this.colunmInfoList;
    }

    public void setColunmInfoList(List<DistributionColunmInfo> colunmInfoList) {
        this.colunmInfoList = colunmInfoList;
    }

    /**
     * 国际弃程
     */
    public List<DistributionColunmInfo> getPartialColunmInfoList() {
        return this.partialColunmInfoList;
    }

    public void setPartialColunmInfoList(List<DistributionColunmInfo> partialColunmInfoList) {
        this.partialColunmInfoList = partialColunmInfoList;
    }

    /**
     * 运价、政策信息
     */
    public List<DistributionPolicyPirceInfo> getPolicyInfo() {
        return this.policyInfo;
    }

    public void setPolicyInfo(List<DistributionPolicyPirceInfo> policyInfo) {
        this.policyInfo = policyInfo;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final DistributionFltProductInfo other = (DistributionFltProductInfo)obj;
        return
            Objects.equal(this.groupID, other.groupID) && 
            Objects.equal(this.partitionedToken, other.partitionedToken) && 
            Objects.equal(this.nextGroupKey, other.nextGroupKey) && 
            Objects.equal(this.arrivalDays, other.arrivalDays) && 
            Objects.equal(this.laveTicket, other.laveTicket) && 
            Objects.equal(this.dCity, other.dCity) && 
            Objects.equal(this.aCity, other.aCity) && 
            Objects.equal(this.dDate, other.dDate) && 
            Objects.equal(this.aDate, other.aDate) && 
            Objects.equal(this.duration, other.duration) && 
            Objects.equal(this.durationStr, other.durationStr) && 
            Objects.equal(this.hour, other.hour) && 
            Objects.equal(this.min, other.min) && 
            Objects.equal(this.colunmInfoList, other.colunmInfoList) && 
            Objects.equal(this.partialColunmInfoList, other.partialColunmInfoList) && 
            Objects.equal(this.policyInfo, other.policyInfo);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.groupID);
        result = 31 * result + Objects.hashCode(this.partitionedToken);
        result = 31 * result + Objects.hashCode(this.nextGroupKey);
        result = 31 * result + Objects.hashCode(this.arrivalDays);
        result = 31 * result + Objects.hashCode(this.laveTicket);
        result = 31 * result + Objects.hashCode(this.dCity);
        result = 31 * result + Objects.hashCode(this.aCity);
        result = 31 * result + Objects.hashCode(this.dDate);
        result = 31 * result + Objects.hashCode(this.aDate);
        result = 31 * result + Objects.hashCode(this.duration);
        result = 31 * result + Objects.hashCode(this.durationStr);
        result = 31 * result + Objects.hashCode(this.hour);
        result = 31 * result + Objects.hashCode(this.min);
        result = 31 * result + Objects.hashCode(this.colunmInfoList);
        result = 31 * result + Objects.hashCode(this.partialColunmInfoList);
        result = 31 * result + Objects.hashCode(this.policyInfo);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("groupID", groupID)
            .add("partitionedToken", partitionedToken)
            .add("nextGroupKey", nextGroupKey)
            .add("arrivalDays", arrivalDays)
            .add("laveTicket", laveTicket)
            .add("dCity", dCity)
            .add("aCity", aCity)
            .add("dDate", dDate)
            .add("aDate", aDate)
            .add("duration", duration)
            .add("durationStr", durationStr)
            .add("hour", hour)
            .add("min", min)
            .add("colunmInfoList", colunmInfoList)
            .add("partialColunmInfoList", partialColunmInfoList)
            .add("policyInfo", policyInfo)
            .toString();
    }
}