// Generated by eBay Common SDK Platform
package com.ctrip.soa.global.api.flightcommon.v1;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlEnumValue;

/**
 * 支付方式
 */
@XmlType(name = "PayType")
@XmlEnum
@SuppressWarnings("all")
public enum PayType {

    /**
     * 现金
     */
    @XmlEnumValue("CASH")
    CASH(0, "CASH"),

    /**
     * 信用卡
     */
    @XmlEnumValue("CREDITCARD")
    CREDITCARD(1, "CREDITCARD"),

    /**
     * paypal
     */
    @XmlEnumValue("PAYPAL")
    PAYPAL(2, "PAYPAL"),

    /**
     * 借记卡
     */
    @XmlEnumValue("DEPOSITCARD")
    DEPOSITCARD(3, "DEPOSITCARD"),

    /**
     * 储蓄卡
     */
    @XmlEnumValue("DQPAY")
    DQPAY(4, "DQPAY"),

    /**
     * 未支付
     */
    @XmlEnumValue("NA")
    NA(5, "NA");

    private final int intValue;
    private final String value;

    PayType(int intValue, String value) {
        this.intValue = intValue;
        this.value = value;
    }

    public int getValue() {
        return intValue;
    }

    @JsonValue
    public String value() {
        return value;
    }

    @JsonCreator
    public static PayType fromValue(String v) {
        for (PayType e: PayType.values()) {
            if (e.value.equals(v)) {
                return e;
            }
        }
        throw new IllegalArgumentException(v);
    }

    public static PayType findByValue(int value) {
        switch (value) {
            case 0:
                return CASH;
            case 1:
                return CREDITCARD;
            case 2:
                return PAYPAL;
            case 3:
                return DEPOSITCARD;
            case 4:
                return DQPAY;
            case 5:
                return NA;
            default:
                return null;
        }
    }
}