/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.flightcommon.v1;

import com.ctrip.soa.global.api.comm.head.v1.Currency;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PayCurrencyCard", propOrder = {
    "payCurrency",
    "flightCreditCard"
})
@SuppressWarnings("all")
public class PayCurrencyCard  {

    private static final long serialVersionUID = 1L;

    public PayCurrencyCard(
        Currency payCurrency, 
        List<FlightCreditCard> flightCreditCard) {
        this.payCurrency = payCurrency;
        this.flightCreditCard = flightCreditCard;
    }

    public PayCurrencyCard() {
    }

    @FieldDoc("支付币种")
    @JsonProperty("PayCurrency")
    @XmlElement(name = "PayCurrency")
    private Currency payCurrency;

    @FieldDoc("支付卡组")
    @JsonProperty("FlightCreditCard")
    @XmlElement(name = "FlightCreditCard")
    private List<FlightCreditCard> flightCreditCard;

    /**
     * 支付币种
     */
    public Currency getPayCurrency() {
        return this.payCurrency;
    }

    public void setPayCurrency(Currency payCurrency) {
        this.payCurrency = payCurrency;
    }

    /**
     * 支付卡组
     */
    public List<FlightCreditCard> getFlightCreditCard() {
        return this.flightCreditCard;
    }

    public void setFlightCreditCard(List<FlightCreditCard> flightCreditCard) {
        this.flightCreditCard = flightCreditCard;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final PayCurrencyCard other = (PayCurrencyCard)obj;
        return
            Objects.equal(this.payCurrency, other.payCurrency) && 
            Objects.equal(this.flightCreditCard, other.flightCreditCard);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.payCurrency);
        result = 31 * result + Objects.hashCode(this.flightCreditCard);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("payCurrency", payCurrency)
            .add("flightCreditCard", flightCreditCard)
            .toString();
    }
}