/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.gaflightgetdelivery.v1;

import com.ctrip.soa.global.api.comm.head.v1.Head;
import com.ctrip.soa.global.api.flightcommon.v1.GaPassengerInfo;
import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.math.BigDecimal;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 国内机票获取配送信息
 */
@DtoDoc("国内机票获取配送信息")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlRootElement(name = "GaFlightGetDeliveryRequest", namespace = "http://soa.ctrip.com/Global/API/GaFlightGetDelivery/v1")
@XmlType(name = "GaFlightGetDeliveryRequest", propOrder = {
    "head",
    "isQuickBooking",
    "ticketDeliveryCityID",
    "passengerInfoList",
    "productID",
    "orderPrice"
})
@SuppressWarnings("all")
public class GaFlightGetDeliveryRequest  {

    private static final long serialVersionUID = 1L;

    public GaFlightGetDeliveryRequest(
        Head head, 
        boolean isQuickBooking, 
        int ticketDeliveryCityID, 
        List<GaPassengerInfo> passengerInfoList, 
        String productID, 
        BigDecimal orderPrice) {
        this.head = head;
        this.isQuickBooking = isQuickBooking;
        this.ticketDeliveryCityID = ticketDeliveryCityID;
        this.passengerInfoList = passengerInfoList;
        this.productID = productID;
        this.orderPrice = orderPrice;
    }

    public GaFlightGetDeliveryRequest() {
    }

    @FieldDoc("SOA2.0请求头部信息")
    @JsonProperty("Head")
    @XmlElement(name = "Head")
    private Head head;

    @FieldDoc("是否快速预订")
    @JsonProperty("IsQuickBooking")
    @XmlElement(name = "IsQuickBooking")
    private boolean isQuickBooking;

    @FieldDoc("送票城市ID")
    @JsonProperty("TicketDeliveryCityID")
    @XmlElement(name = "TicketDeliveryCityID")
    private int ticketDeliveryCityID;

    @FieldDoc("乘客信息")
    @JsonProperty("PassengerInfoList")
    @XmlElement(name = "PassengerInfoList")
    private List<GaPassengerInfo> passengerInfoList;

    @FieldDoc("选择的航班标识")
    @JsonProperty("ProductID")
    @XmlElement(name = "ProductID")
    private String productID;

    @FieldDoc("订单价格")
    @JsonProperty("OrderPrice")
    @XmlElement(name = "OrderPrice")
    private BigDecimal orderPrice;

    /**
     * SOA2.0请求头部信息
     */
    public Head getHead() {
        return this.head;
    }

    public void setHead(Head head) {
        this.head = head;
    }

    /**
     * 是否快速预订
     */
    public boolean getIsQuickBooking() {
        return this.isQuickBooking;
    }

    public void setIsQuickBooking(boolean isQuickBooking) {
        this.isQuickBooking = isQuickBooking;
    }

    /**
     * 送票城市ID
     */
    public int getTicketDeliveryCityID() {
        return this.ticketDeliveryCityID;
    }

    public void setTicketDeliveryCityID(int ticketDeliveryCityID) {
        this.ticketDeliveryCityID = ticketDeliveryCityID;
    }

    /**
     * 乘客信息
     */
    public List<GaPassengerInfo> getPassengerInfoList() {
        return this.passengerInfoList;
    }

    public void setPassengerInfoList(List<GaPassengerInfo> passengerInfoList) {
        this.passengerInfoList = passengerInfoList;
    }

    /**
     * 选择的航班标识
     */
    public String getProductID() {
        return this.productID;
    }

    public void setProductID(String productID) {
        this.productID = productID;
    }

    /**
     * 订单价格
     */
    public BigDecimal getOrderPrice() {
        return this.orderPrice;
    }

    public void setOrderPrice(BigDecimal orderPrice) {
        this.orderPrice = orderPrice;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final GaFlightGetDeliveryRequest other = (GaFlightGetDeliveryRequest)obj;
        return
            Objects.equal(this.head, other.head) && 
            Objects.equal(this.isQuickBooking, other.isQuickBooking) && 
            Objects.equal(this.ticketDeliveryCityID, other.ticketDeliveryCityID) && 
            Objects.equal(this.passengerInfoList, other.passengerInfoList) && 
            Objects.equal(this.productID, other.productID) && 
            Objects.equal(this.orderPrice, other.orderPrice);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.head);
        result = 31 * result + Objects.hashCode(this.isQuickBooking);
        result = 31 * result + Objects.hashCode(this.ticketDeliveryCityID);
        result = 31 * result + Objects.hashCode(this.passengerInfoList);
        result = 31 * result + Objects.hashCode(this.productID);
        result = 31 * result + Objects.hashCode(this.orderPrice);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("head", head)
            .add("isQuickBooking", isQuickBooking)
            .add("ticketDeliveryCityID", ticketDeliveryCityID)
            .add("passengerInfoList", passengerInfoList)
            .add("productID", productID)
            .add("orderPrice", orderPrice)
            .toString();
    }
}