/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.flightcommon.v1;

import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.math.BigDecimal;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 机票支付类型
 */
@DtoDoc("机票支付类型")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FlightPaymentInfoV2", propOrder = {
    "paymentTotalPrice",
    "paymentCardFee",
    "exchangeRate",
    "currency",
    "busType",
    "merchantInfo",
    "isRealTimePay",
    "isPayToCBU",
    "paymentTotalPriceNoCardFee",
    "priceDetails"
})
@SuppressWarnings("all")
public class FlightPaymentInfoV2  {

    private static final long serialVersionUID = 1L;

    public FlightPaymentInfoV2(
        BigDecimal paymentTotalPrice, 
        BigDecimal paymentCardFee, 
        BigDecimal exchangeRate, 
        String currency, 
        int busType, 
        String merchantInfo, 
        int isRealTimePay, 
        int isPayToCBU, 
        BigDecimal paymentTotalPriceNoCardFee, 
        List<FlightPriceDetail> priceDetails) {
        this.paymentTotalPrice = paymentTotalPrice;
        this.paymentCardFee = paymentCardFee;
        this.exchangeRate = exchangeRate;
        this.currency = currency;
        this.busType = busType;
        this.merchantInfo = merchantInfo;
        this.isRealTimePay = isRealTimePay;
        this.isPayToCBU = isPayToCBU;
        this.paymentTotalPriceNoCardFee = paymentTotalPriceNoCardFee;
        this.priceDetails = priceDetails;
    }

    public FlightPaymentInfoV2() {
    }

    @FieldDoc("支付总价")
    @JsonProperty("PaymentTotalPrice")
    @XmlElement(name = "PaymentTotalPrice")
    private BigDecimal paymentTotalPrice;

    @FieldDoc("外卡手续费")
    @JsonProperty("PaymentCardFee")
    @XmlElement(name = "PaymentCardFee")
    private BigDecimal paymentCardFee;

    @FieldDoc("汇率")
    @JsonProperty("ExchangeRate")
    @XmlElement(name = "ExchangeRate")
    private BigDecimal exchangeRate;

    @FieldDoc("支付币种")
    @JsonProperty("Currency")
    @XmlElement(name = "Currency")
    private String currency;

    @FieldDoc("短商户号")
    @JsonProperty("BusType")
    @XmlElement(name = "BusType")
    private int busType;

    @FieldDoc("商户信息,Online 用，json格式")
    @JsonProperty("MerchantInfo")
    @XmlElement(name = "MerchantInfo")
    private String merchantInfo;

    @FieldDoc("是否实时支付")
    @JsonProperty("IsRealTimePay")
    @XmlElement(name = "IsRealTimePay")
    private int isRealTimePay;

    @FieldDoc("是否支付到CBU")
    @JsonProperty("IsPayToCBU")
    @XmlElement(name = "IsPayToCBU")
    private int isPayToCBU;

    @FieldDoc("不含手续费的支付总价")
    @JsonProperty("PaymentTotalPriceNoCardFee")
    @XmlElement(name = "PaymentTotalPriceNoCardFee")
    private BigDecimal paymentTotalPriceNoCardFee;

    @FieldDoc("价格明显列表")
    @JsonProperty("PriceDetails")
    @XmlElement(name = "PriceDetails")
    private List<FlightPriceDetail> priceDetails;

    /**
     * 支付总价
     */
    public BigDecimal getPaymentTotalPrice() {
        return this.paymentTotalPrice;
    }

    public void setPaymentTotalPrice(BigDecimal paymentTotalPrice) {
        this.paymentTotalPrice = paymentTotalPrice;
    }

    /**
     * 外卡手续费
     */
    public BigDecimal getPaymentCardFee() {
        return this.paymentCardFee;
    }

    public void setPaymentCardFee(BigDecimal paymentCardFee) {
        this.paymentCardFee = paymentCardFee;
    }

    /**
     * 汇率
     */
    public BigDecimal getExchangeRate() {
        return this.exchangeRate;
    }

    public void setExchangeRate(BigDecimal exchangeRate) {
        this.exchangeRate = exchangeRate;
    }

    /**
     * 支付币种
     */
    public String getCurrency() {
        return this.currency;
    }

    public void setCurrency(String currency) {
        this.currency = currency;
    }

    /**
     * 短商户号
     */
    public int getBusType() {
        return this.busType;
    }

    public void setBusType(int busType) {
        this.busType = busType;
    }

    /**
     * 商户信息,Online 用，json格式
     */
    public String getMerchantInfo() {
        return this.merchantInfo;
    }

    public void setMerchantInfo(String merchantInfo) {
        this.merchantInfo = merchantInfo;
    }

    /**
     * 是否实时支付
     */
    public int getIsRealTimePay() {
        return this.isRealTimePay;
    }

    public void setIsRealTimePay(int isRealTimePay) {
        this.isRealTimePay = isRealTimePay;
    }

    /**
     * 是否支付到CBU
     */
    public int getIsPayToCBU() {
        return this.isPayToCBU;
    }

    public void setIsPayToCBU(int isPayToCBU) {
        this.isPayToCBU = isPayToCBU;
    }

    /**
     * 不含手续费的支付总价
     */
    public BigDecimal getPaymentTotalPriceNoCardFee() {
        return this.paymentTotalPriceNoCardFee;
    }

    public void setPaymentTotalPriceNoCardFee(BigDecimal paymentTotalPriceNoCardFee) {
        this.paymentTotalPriceNoCardFee = paymentTotalPriceNoCardFee;
    }

    /**
     * 价格明显列表
     */
    public List<FlightPriceDetail> getPriceDetails() {
        return this.priceDetails;
    }

    public void setPriceDetails(List<FlightPriceDetail> priceDetails) {
        this.priceDetails = priceDetails;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final FlightPaymentInfoV2 other = (FlightPaymentInfoV2)obj;
        return
            Objects.equal(this.paymentTotalPrice, other.paymentTotalPrice) && 
            Objects.equal(this.paymentCardFee, other.paymentCardFee) && 
            Objects.equal(this.exchangeRate, other.exchangeRate) && 
            Objects.equal(this.currency, other.currency) && 
            Objects.equal(this.busType, other.busType) && 
            Objects.equal(this.merchantInfo, other.merchantInfo) && 
            Objects.equal(this.isRealTimePay, other.isRealTimePay) && 
            Objects.equal(this.isPayToCBU, other.isPayToCBU) && 
            Objects.equal(this.paymentTotalPriceNoCardFee, other.paymentTotalPriceNoCardFee) && 
            Objects.equal(this.priceDetails, other.priceDetails);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.paymentTotalPrice);
        result = 31 * result + Objects.hashCode(this.paymentCardFee);
        result = 31 * result + Objects.hashCode(this.exchangeRate);
        result = 31 * result + Objects.hashCode(this.currency);
        result = 31 * result + Objects.hashCode(this.busType);
        result = 31 * result + Objects.hashCode(this.merchantInfo);
        result = 31 * result + Objects.hashCode(this.isRealTimePay);
        result = 31 * result + Objects.hashCode(this.isPayToCBU);
        result = 31 * result + Objects.hashCode(this.paymentTotalPriceNoCardFee);
        result = 31 * result + Objects.hashCode(this.priceDetails);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("paymentTotalPrice", paymentTotalPrice)
            .add("paymentCardFee", paymentCardFee)
            .add("exchangeRate", exchangeRate)
            .add("currency", currency)
            .add("busType", busType)
            .add("merchantInfo", merchantInfo)
            .add("isRealTimePay", isRealTimePay)
            .add("isPayToCBU", isPayToCBU)
            .add("paymentTotalPriceNoCardFee", paymentTotalPriceNoCardFee)
            .add("priceDetails", priceDetails)
            .toString();
    }
}