/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.gagetflightintlpaymentandfulfillment.v1;

import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 配送模型
 */
@DtoDoc("配送模型")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FulfillmentOptionModel", propOrder = {
    "isDelivery",
    "regularMailEntity",
    "expressEntity",
    "pickupEntity"
})
@SuppressWarnings("all")
public class FulfillmentOptionModel  {

    private static final long serialVersionUID = 1L;

    public FulfillmentOptionModel(
        boolean isDelivery, 
        RegularMailModel regularMailEntity, 
        ExpressModel expressEntity, 
        PickupModel pickupEntity) {
        this.isDelivery = isDelivery;
        this.regularMailEntity = regularMailEntity;
        this.expressEntity = expressEntity;
        this.pickupEntity = pickupEntity;
    }

    public FulfillmentOptionModel() {
    }

    @FieldDoc("是否需要行程单")
    @JsonProperty("IsDelivery")
    @XmlElement(name = "IsDelivery")
    private boolean isDelivery;

    @FieldDoc("邮寄类型实体")
    @JsonProperty("RegularMailEntity")
    @XmlElement(name = "RegularMailEntity")
    private RegularMailModel regularMailEntity;

    @FieldDoc("快递类型实体")
    @JsonProperty("ExpressEntity")
    @XmlElement(name = "ExpressEntity")
    private ExpressModel expressEntity;

    @FieldDoc("本地自取类型实体")
    @JsonProperty("PickupEntity")
    @XmlElement(name = "PickupEntity")
    private PickupModel pickupEntity;

    /**
     * 是否需要行程单
     */
    public boolean getIsDelivery() {
        return this.isDelivery;
    }

    public void setIsDelivery(boolean isDelivery) {
        this.isDelivery = isDelivery;
    }

    /**
     * 邮寄类型实体
     */
    public RegularMailModel getRegularMailEntity() {
        return this.regularMailEntity;
    }

    public void setRegularMailEntity(RegularMailModel regularMailEntity) {
        this.regularMailEntity = regularMailEntity;
    }

    /**
     * 快递类型实体
     */
    public ExpressModel getExpressEntity() {
        return this.expressEntity;
    }

    public void setExpressEntity(ExpressModel expressEntity) {
        this.expressEntity = expressEntity;
    }

    /**
     * 本地自取类型实体
     */
    public PickupModel getPickupEntity() {
        return this.pickupEntity;
    }

    public void setPickupEntity(PickupModel pickupEntity) {
        this.pickupEntity = pickupEntity;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final FulfillmentOptionModel other = (FulfillmentOptionModel)obj;
        return
            Objects.equal(this.isDelivery, other.isDelivery) && 
            Objects.equal(this.regularMailEntity, other.regularMailEntity) && 
            Objects.equal(this.expressEntity, other.expressEntity) && 
            Objects.equal(this.pickupEntity, other.pickupEntity);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.isDelivery);
        result = 31 * result + Objects.hashCode(this.regularMailEntity);
        result = 31 * result + Objects.hashCode(this.expressEntity);
        result = 31 * result + Objects.hashCode(this.pickupEntity);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("isDelivery", isDelivery)
            .add("regularMailEntity", regularMailEntity)
            .add("expressEntity", expressEntity)
            .add("pickupEntity", pickupEntity)
            .toString();
    }
}