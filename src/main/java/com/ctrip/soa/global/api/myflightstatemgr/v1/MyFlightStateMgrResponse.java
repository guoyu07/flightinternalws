/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.myflightstatemgr.v1;

import com.ctrip.soa.global.api.comm.responsehead.v1.ResponseHead;
import com.ctriposs.baiji.rpc.common.HasResponseStatus;
import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.ctriposs.baiji.rpc.common.types.ResponseStatusType;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 用户关注的航班动态管理返回
 */
@DtoDoc("用户关注的航班动态管理返回")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlRootElement(name = "MyFlightStateMgrResponse", namespace = "http://soa.ctrip.com/Global/API/MyFlightStateMgr/v1")
@XmlType(name = "MyFlightStateMgrResponse", propOrder = {
    "responseStatus",
    "responseHead",
    "retValue",
    "fsid",
    "focreFollowRemovedFSID"
})
@SuppressWarnings("all")
public class MyFlightStateMgrResponse implements HasResponseStatus {

    private static final long serialVersionUID = 1L;

    public MyFlightStateMgrResponse(
        ResponseStatusType responseStatus, 
        ResponseHead responseHead, 
        int retValue, 
        int fsid, 
        int focreFollowRemovedFSID) {
        this.responseStatus = responseStatus;
        this.responseHead = responseHead;
        this.retValue = retValue;
        this.fsid = fsid;
        this.focreFollowRemovedFSID = focreFollowRemovedFSID;
    }

    public MyFlightStateMgrResponse() {
    }

    @FieldDoc("SOA2.0返回头部信息")
    @JsonProperty("ResponseStatus")
    @XmlElement(name = "ResponseStatus")
    private ResponseStatusType responseStatus;

    @JsonProperty("ResponseHead")
    @XmlElement(name = "ResponseHead")
    private ResponseHead responseHead;

    @FieldDoc("结果代码 0成功 1添加关注失败 2超过关注数量限制 3重复关注  -1取消关注时发现没有关注过该航班  -2取消关注失败 -3取消的关注航班不是自己关注的航班，不能取消")
    @JsonProperty("RetValue")
    @XmlElement(name = "RetValue")
    private int retValue;

    @FieldDoc("关注ID")
    @JsonProperty("FSID")
    @XmlElement(name = "FSID")
    private int fsid;

    @FieldDoc("强制关注删除的ID")
    @JsonProperty("FocreFollowRemovedFSID")
    @XmlElement(name = "FocreFollowRemovedFSID")
    private int focreFollowRemovedFSID;

    /**
     * SOA2.0返回头部信息
     */
    public ResponseStatusType getResponseStatus() {
        return this.responseStatus;
    }

    public void setResponseStatus(ResponseStatusType responseStatus) {
        this.responseStatus = responseStatus;
    }

    public ResponseHead getResponseHead() {
        return this.responseHead;
    }

    public void setResponseHead(ResponseHead responseHead) {
        this.responseHead = responseHead;
    }

    /**
     * 结果代码 0成功 1添加关注失败 2超过关注数量限制 3重复关注  -1取消关注时发现没有关注过该航班  -2取消关注失败 -3取消的关注航班不是自己关注的航班，不能取消
     */
    public int getRetValue() {
        return this.retValue;
    }

    public void setRetValue(int retValue) {
        this.retValue = retValue;
    }

    /**
     * 关注ID
     */
    public int getFsid() {
        return this.fsid;
    }

    public void setFsid(int fsid) {
        this.fsid = fsid;
    }

    /**
     * 强制关注删除的ID
     */
    public int getFocreFollowRemovedFSID() {
        return this.focreFollowRemovedFSID;
    }

    public void setFocreFollowRemovedFSID(int focreFollowRemovedFSID) {
        this.focreFollowRemovedFSID = focreFollowRemovedFSID;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final MyFlightStateMgrResponse other = (MyFlightStateMgrResponse)obj;
        return
            Objects.equal(this.responseStatus, other.responseStatus) && 
            Objects.equal(this.responseHead, other.responseHead) && 
            Objects.equal(this.retValue, other.retValue) && 
            Objects.equal(this.fsid, other.fsid) && 
            Objects.equal(this.focreFollowRemovedFSID, other.focreFollowRemovedFSID);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.responseStatus);
        result = 31 * result + Objects.hashCode(this.responseHead);
        result = 31 * result + Objects.hashCode(this.retValue);
        result = 31 * result + Objects.hashCode(this.fsid);
        result = 31 * result + Objects.hashCode(this.focreFollowRemovedFSID);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("responseStatus", responseStatus)
            .add("responseHead", responseHead)
            .add("retValue", retValue)
            .add("fsid", fsid)
            .add("focreFollowRemovedFSID", focreFollowRemovedFSID)
            .toString();
    }
}