/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.flight.union_searchflightsws.v1;

import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementWrapper;
import javax.xml.bind.annotation.XmlType;

@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SearchCriteriaType", propOrder = {
    "origDestRequestList",
    "travelerRequestList",
    "cabinClass",
    "requestedCabinClassOnly",
    "ticketDeliveryCityID"
})
@SuppressWarnings("all")
public class SearchCriteriaType  {

    private static final long serialVersionUID = 1L;

    public SearchCriteriaType(
        List<OrigDestRequestType> origDestRequestList, 
        List<TravelerRequestType> travelerRequestList, 
        String cabinClass, 
        boolean requestedCabinClassOnly, 
        int ticketDeliveryCityID) {
        this.origDestRequestList = origDestRequestList;
        this.travelerRequestList = travelerRequestList;
        this.cabinClass = cabinClass;
        this.requestedCabinClassOnly = requestedCabinClassOnly;
        this.ticketDeliveryCityID = ticketDeliveryCityID;
    }

    public SearchCriteriaType() {
    }

    @JsonProperty("OrigDestRequestList")
    @XmlElement(name = "OrigDestRequest")
    @XmlElementWrapper(name = "OrigDestRequestList")
    private List<OrigDestRequestType> origDestRequestList;

    @JsonProperty("TravelerRequestList")
    @XmlElement(name = "TravelerRequest")
    @XmlElementWrapper(name = "TravelerRequestList")
    private List<TravelerRequestType> travelerRequestList;

    @FieldDoc("Cabin class： Economy/ Premium/Business/ First")
    @JsonProperty("CabinClass")
    @XmlElement(name = "CabinClass")
    private String cabinClass;

    @FieldDoc("Only return the cabin class designated by the user when it is true")
    @JsonProperty("RequestedCabinClassOnly")
    @XmlElement(name = "RequestedCabinClassOnly")
    private boolean requestedCabinClassOnly;

    @FieldDoc("Ticket delivery city ID")
    @JsonProperty("TicketDeliveryCityID")
    @XmlElement(name = "TicketDeliveryCityID")
    private int ticketDeliveryCityID;

    public List<OrigDestRequestType> getOrigDestRequestList() {
        return this.origDestRequestList;
    }

    public void setOrigDestRequestList(List<OrigDestRequestType> origDestRequestList) {
        this.origDestRequestList = origDestRequestList;
    }

    public List<TravelerRequestType> getTravelerRequestList() {
        return this.travelerRequestList;
    }

    public void setTravelerRequestList(List<TravelerRequestType> travelerRequestList) {
        this.travelerRequestList = travelerRequestList;
    }

    /**
     * Cabin class： Economy/ Premium/Business/ First
     */
    public String getCabinClass() {
        return this.cabinClass;
    }

    public void setCabinClass(String cabinClass) {
        this.cabinClass = cabinClass;
    }

    /**
     * Only return the cabin class designated by the user when it is true
     */
    public boolean getRequestedCabinClassOnly() {
        return this.requestedCabinClassOnly;
    }

    public void setRequestedCabinClassOnly(boolean requestedCabinClassOnly) {
        this.requestedCabinClassOnly = requestedCabinClassOnly;
    }

    /**
     * Ticket delivery city ID
     */
    public int getTicketDeliveryCityID() {
        return this.ticketDeliveryCityID;
    }

    public void setTicketDeliveryCityID(int ticketDeliveryCityID) {
        this.ticketDeliveryCityID = ticketDeliveryCityID;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final SearchCriteriaType other = (SearchCriteriaType)obj;
        return
            Objects.equal(this.origDestRequestList, other.origDestRequestList) && 
            Objects.equal(this.travelerRequestList, other.travelerRequestList) && 
            Objects.equal(this.cabinClass, other.cabinClass) && 
            Objects.equal(this.requestedCabinClassOnly, other.requestedCabinClassOnly) && 
            Objects.equal(this.ticketDeliveryCityID, other.ticketDeliveryCityID);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.origDestRequestList);
        result = 31 * result + Objects.hashCode(this.travelerRequestList);
        result = 31 * result + Objects.hashCode(this.cabinClass);
        result = 31 * result + Objects.hashCode(this.requestedCabinClassOnly);
        result = 31 * result + Objects.hashCode(this.ticketDeliveryCityID);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("origDestRequestList", origDestRequestList)
            .add("travelerRequestList", travelerRequestList)
            .add("cabinClass", cabinClass)
            .add("requestedCabinClassOnly", requestedCabinClassOnly)
            .add("ticketDeliveryCityID", ticketDeliveryCityID)
            .toString();
    }
}