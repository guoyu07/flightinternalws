/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.flightcommon.v1;

import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.math.BigDecimal;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 变价信息
 */
@DtoDoc("变价信息")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "GaPriceChangeInfo", propOrder = {
    "saleTotalPrice",
    "taxPrice",
    "cnySaleTotalPrice",
    "cnyTaxPrice",
    "isChange"
})
@SuppressWarnings("all")
public class GaPriceChangeInfo  {

    private static final long serialVersionUID = 1L;

    public GaPriceChangeInfo(
        BigDecimal saleTotalPrice, 
        BigDecimal taxPrice, 
        BigDecimal cnySaleTotalPrice, 
        BigDecimal cnyTaxPrice, 
        boolean isChange) {
        this.saleTotalPrice = saleTotalPrice;
        this.taxPrice = taxPrice;
        this.cnySaleTotalPrice = cnySaleTotalPrice;
        this.cnyTaxPrice = cnyTaxPrice;
        this.isChange = isChange;
    }

    public GaPriceChangeInfo() {
    }

    @FieldDoc("单价+税费+燃油  不计算人数")
    @JsonProperty("SaleTotalPrice")
    @XmlElement(name = "SaleTotalPrice")
    private BigDecimal saleTotalPrice;

    @FieldDoc("税费+燃油  不计算人数")
    @JsonProperty("TaxPrice")
    @XmlElement(name = "TaxPrice")
    private BigDecimal taxPrice;

    @FieldDoc("人民币单价+税费+燃油  不计算人数")
    @JsonProperty("CNYSaleTotalPrice")
    @XmlElement(name = "CNYSaleTotalPrice")
    private BigDecimal cnySaleTotalPrice;

    @FieldDoc("人民币税费+燃油  不计算人数")
    @JsonProperty("CNYTaxPrice")
    @XmlElement(name = "CNYTaxPrice")
    private BigDecimal cnyTaxPrice;

    @FieldDoc("异步调用时，返回的Token")
    @JsonProperty("IsChange")
    @XmlElement(name = "IsChange")
    private boolean isChange;

    /**
     * 单价+税费+燃油  不计算人数
     */
    public BigDecimal getSaleTotalPrice() {
        return this.saleTotalPrice;
    }

    public void setSaleTotalPrice(BigDecimal saleTotalPrice) {
        this.saleTotalPrice = saleTotalPrice;
    }

    /**
     * 税费+燃油  不计算人数
     */
    public BigDecimal getTaxPrice() {
        return this.taxPrice;
    }

    public void setTaxPrice(BigDecimal taxPrice) {
        this.taxPrice = taxPrice;
    }

    /**
     * 人民币单价+税费+燃油  不计算人数
     */
    public BigDecimal getCnySaleTotalPrice() {
        return this.cnySaleTotalPrice;
    }

    public void setCnySaleTotalPrice(BigDecimal cnySaleTotalPrice) {
        this.cnySaleTotalPrice = cnySaleTotalPrice;
    }

    /**
     * 人民币税费+燃油  不计算人数
     */
    public BigDecimal getCnyTaxPrice() {
        return this.cnyTaxPrice;
    }

    public void setCnyTaxPrice(BigDecimal cnyTaxPrice) {
        this.cnyTaxPrice = cnyTaxPrice;
    }

    /**
     * 异步调用时，返回的Token
     */
    public boolean getIsChange() {
        return this.isChange;
    }

    public void setIsChange(boolean isChange) {
        this.isChange = isChange;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final GaPriceChangeInfo other = (GaPriceChangeInfo)obj;
        return
            Objects.equal(this.saleTotalPrice, other.saleTotalPrice) && 
            Objects.equal(this.taxPrice, other.taxPrice) && 
            Objects.equal(this.cnySaleTotalPrice, other.cnySaleTotalPrice) && 
            Objects.equal(this.cnyTaxPrice, other.cnyTaxPrice) && 
            Objects.equal(this.isChange, other.isChange);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.saleTotalPrice);
        result = 31 * result + Objects.hashCode(this.taxPrice);
        result = 31 * result + Objects.hashCode(this.cnySaleTotalPrice);
        result = 31 * result + Objects.hashCode(this.cnyTaxPrice);
        result = 31 * result + Objects.hashCode(this.isChange);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("saleTotalPrice", saleTotalPrice)
            .add("taxPrice", taxPrice)
            .add("cnySaleTotalPrice", cnySaleTotalPrice)
            .add("cnyTaxPrice", cnyTaxPrice)
            .add("isChange", isChange)
            .toString();
    }
}