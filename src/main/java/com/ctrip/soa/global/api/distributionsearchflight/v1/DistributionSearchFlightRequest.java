/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.distributionsearchflight.v1;

import com.ctrip.soa.global.api.comm.head.v1.Head;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlRootElement(name = "DistributionSearchFlightRequest", namespace = "http://soa.ctrip.com/Global/API/DistributionSearchFlight/v1")
@XmlType(name = "DistributionSearchFlightRequest", propOrder = {
    "head",
    "isShowAll",
    "isCombination",
    "isLowPrice",
    "maxDepartCount",
    "partitionedToken",
    "searchType",
    "tripType",
    "classType",
    "travelerNumber",
    "segmentParameterList",
    "filterInfo",
    "sequenceInfo",
    "productKeyInfo",
    "paginationInfo"
})
@SuppressWarnings("all")
public class DistributionSearchFlightRequest  {

    private static final long serialVersionUID = 1L;

    public DistributionSearchFlightRequest(
        Head head, 
        int isShowAll, 
        int isCombination, 
        int isLowPrice, 
        Integer maxDepartCount, 
        String partitionedToken, 
        DistributionSearchType searchType, 
        DistributionFlightWayType tripType, 
        DistributionCabinClassType classType, 
        DistributionTravelerInfo travelerNumber, 
        List<DistributionSegmentParameterInfo> segmentParameterList, 
        DistributionFilterInfo filterInfo, 
        DistributionSequenceInfo sequenceInfo, 
        DistributionProductKeyInfo productKeyInfo, 
        DistributionPaginationInfo paginationInfo) {
        this.head = head;
        this.isShowAll = isShowAll;
        this.isCombination = isCombination;
        this.isLowPrice = isLowPrice;
        this.maxDepartCount = maxDepartCount;
        this.partitionedToken = partitionedToken;
        this.searchType = searchType;
        this.tripType = tripType;
        this.classType = classType;
        this.travelerNumber = travelerNumber;
        this.segmentParameterList = segmentParameterList;
        this.filterInfo = filterInfo;
        this.sequenceInfo = sequenceInfo;
        this.productKeyInfo = productKeyInfo;
        this.paginationInfo = paginationInfo;
    }

    public DistributionSearchFlightRequest() {
    }

    @FieldDoc("request头信息")
    @JsonProperty("Head")
    @XmlElement(name = "Head")
    private Head head;

    @FieldDoc("拿全部时，传1,否则0")
    @JsonProperty("IsShowAll")
    @XmlElement(name = "IsShowAll")
    private int isShowAll;

    @FieldDoc("是否需要返回往返组合信息，0=false,1=true")
    @JsonProperty("IsCombination")
    @XmlElement(name = "IsCombination")
    private int isCombination;

    @FieldDoc("是否返回往返组合最低价，IsCombination为true时有效，0=false,1=true")
    @JsonProperty("IsLowPrice")
    @XmlElement(name = "IsLowPrice")
    private int isLowPrice;

    @FieldDoc("需要返回的最大去程结果数量，可空，空则返回全部")
    @JsonProperty("MaxDepartCount")
    @XmlElement(name = "MaxDepartCount", nillable = true)
    private Integer maxDepartCount;

    @FieldDoc("分批token-只有选择Sync时有效")
    @JsonProperty("PartitionedToken")
    @XmlElement(name = "PartitionedToken")
    private String partitionedToken;

    @FieldDoc("查询方式")
    @JsonProperty("SearchType")
    @XmlElement(name = "SearchType")
    private DistributionSearchType searchType;

    @FieldDoc("航程类型")
    @JsonProperty("TripType")
    @XmlElement(name = "TripType")
    private DistributionFlightWayType tripType;

    @FieldDoc("航程类型")
    @JsonProperty("ClassType")
    @XmlElement(name = "ClassType")
    private DistributionCabinClassType classType;

    @FieldDoc("乘客人数")
    @JsonProperty("TravelerNumber")
    @XmlElement(name = "TravelerNumber")
    private DistributionTravelerInfo travelerNumber;

    @FieldDoc("航段信息")
    @JsonProperty("SegmentParameterList")
    @XmlElement(name = "SegmentParameterList")
    private List<DistributionSegmentParameterInfo> segmentParameterList;

    @FieldDoc("过滤信息")
    @JsonProperty("FilterInfo")
    @XmlElement(name = "FilterInfo")
    private DistributionFilterInfo filterInfo;

    @FieldDoc("排序信息")
    @JsonProperty("SequenceInfo")
    @XmlElement(name = "SequenceInfo")
    private DistributionSequenceInfo sequenceInfo;

    @FieldDoc("定位产品的关键参数，响应中返回")
    @JsonProperty("ProductKeyInfo")
    @XmlElement(name = "ProductKeyInfo")
    private DistributionProductKeyInfo productKeyInfo;

    @FieldDoc("分页参数")
    @JsonProperty("PaginationInfo")
    @XmlElement(name = "PaginationInfo", nillable = true)
    private DistributionPaginationInfo paginationInfo;

    /**
     * request头信息
     */
    public Head getHead() {
        return this.head;
    }

    public void setHead(Head head) {
        this.head = head;
    }

    /**
     * 拿全部时，传1,否则0
     */
    public int getIsShowAll() {
        return this.isShowAll;
    }

    public void setIsShowAll(int isShowAll) {
        this.isShowAll = isShowAll;
    }

    /**
     * 是否需要返回往返组合信息，0=false,1=true
     */
    public int getIsCombination() {
        return this.isCombination;
    }

    public void setIsCombination(int isCombination) {
        this.isCombination = isCombination;
    }

    /**
     * 是否返回往返组合最低价，IsCombination为true时有效，0=false,1=true
     */
    public int getIsLowPrice() {
        return this.isLowPrice;
    }

    public void setIsLowPrice(int isLowPrice) {
        this.isLowPrice = isLowPrice;
    }

    /**
     * 需要返回的最大去程结果数量，可空，空则返回全部
     */
    public Integer getMaxDepartCount() {
        return this.maxDepartCount;
    }

    public void setMaxDepartCount(Integer maxDepartCount) {
        this.maxDepartCount = maxDepartCount;
    }

    /**
     * 分批token-只有选择Sync时有效
     */
    public String getPartitionedToken() {
        return this.partitionedToken;
    }

    public void setPartitionedToken(String partitionedToken) {
        this.partitionedToken = partitionedToken;
    }

    /**
     * 查询方式
     */
    public DistributionSearchType getSearchType() {
        return this.searchType;
    }

    public void setSearchType(DistributionSearchType searchType) {
        this.searchType = searchType;
    }

    /**
     * 航程类型
     */
    public DistributionFlightWayType getTripType() {
        return this.tripType;
    }

    public void setTripType(DistributionFlightWayType tripType) {
        this.tripType = tripType;
    }

    /**
     * 航程类型
     */
    public DistributionCabinClassType getClassType() {
        return this.classType;
    }

    public void setClassType(DistributionCabinClassType classType) {
        this.classType = classType;
    }

    /**
     * 乘客人数
     */
    public DistributionTravelerInfo getTravelerNumber() {
        return this.travelerNumber;
    }

    public void setTravelerNumber(DistributionTravelerInfo travelerNumber) {
        this.travelerNumber = travelerNumber;
    }

    /**
     * 航段信息
     */
    public List<DistributionSegmentParameterInfo> getSegmentParameterList() {
        return this.segmentParameterList;
    }

    public void setSegmentParameterList(List<DistributionSegmentParameterInfo> segmentParameterList) {
        this.segmentParameterList = segmentParameterList;
    }

    /**
     * 过滤信息
     */
    public DistributionFilterInfo getFilterInfo() {
        return this.filterInfo;
    }

    public void setFilterInfo(DistributionFilterInfo filterInfo) {
        this.filterInfo = filterInfo;
    }

    /**
     * 排序信息
     */
    public DistributionSequenceInfo getSequenceInfo() {
        return this.sequenceInfo;
    }

    public void setSequenceInfo(DistributionSequenceInfo sequenceInfo) {
        this.sequenceInfo = sequenceInfo;
    }

    /**
     * 定位产品的关键参数，响应中返回
     */
    public DistributionProductKeyInfo getProductKeyInfo() {
        return this.productKeyInfo;
    }

    public void setProductKeyInfo(DistributionProductKeyInfo productKeyInfo) {
        this.productKeyInfo = productKeyInfo;
    }

    /**
     * 分页参数
     */
    public DistributionPaginationInfo getPaginationInfo() {
        return this.paginationInfo;
    }

    public void setPaginationInfo(DistributionPaginationInfo paginationInfo) {
        this.paginationInfo = paginationInfo;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final DistributionSearchFlightRequest other = (DistributionSearchFlightRequest)obj;
        return
            Objects.equal(this.head, other.head) && 
            Objects.equal(this.isShowAll, other.isShowAll) && 
            Objects.equal(this.isCombination, other.isCombination) && 
            Objects.equal(this.isLowPrice, other.isLowPrice) && 
            Objects.equal(this.maxDepartCount, other.maxDepartCount) && 
            Objects.equal(this.partitionedToken, other.partitionedToken) && 
            Objects.equal(this.searchType, other.searchType) && 
            Objects.equal(this.tripType, other.tripType) && 
            Objects.equal(this.classType, other.classType) && 
            Objects.equal(this.travelerNumber, other.travelerNumber) && 
            Objects.equal(this.segmentParameterList, other.segmentParameterList) && 
            Objects.equal(this.filterInfo, other.filterInfo) && 
            Objects.equal(this.sequenceInfo, other.sequenceInfo) && 
            Objects.equal(this.productKeyInfo, other.productKeyInfo) && 
            Objects.equal(this.paginationInfo, other.paginationInfo);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.head);
        result = 31 * result + Objects.hashCode(this.isShowAll);
        result = 31 * result + Objects.hashCode(this.isCombination);
        result = 31 * result + Objects.hashCode(this.isLowPrice);
        result = 31 * result + Objects.hashCode(this.maxDepartCount);
        result = 31 * result + Objects.hashCode(this.partitionedToken);
        result = 31 * result + Objects.hashCode(this.searchType);
        result = 31 * result + Objects.hashCode(this.tripType);
        result = 31 * result + Objects.hashCode(this.classType);
        result = 31 * result + Objects.hashCode(this.travelerNumber);
        result = 31 * result + Objects.hashCode(this.segmentParameterList);
        result = 31 * result + Objects.hashCode(this.filterInfo);
        result = 31 * result + Objects.hashCode(this.sequenceInfo);
        result = 31 * result + Objects.hashCode(this.productKeyInfo);
        result = 31 * result + Objects.hashCode(this.paginationInfo);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("head", head)
            .add("isShowAll", isShowAll)
            .add("isCombination", isCombination)
            .add("isLowPrice", isLowPrice)
            .add("maxDepartCount", maxDepartCount)
            .add("partitionedToken", partitionedToken)
            .add("searchType", searchType)
            .add("tripType", tripType)
            .add("classType", classType)
            .add("travelerNumber", travelerNumber)
            .add("segmentParameterList", segmentParameterList)
            .add("filterInfo", filterInfo)
            .add("sequenceInfo", sequenceInfo)
            .add("productKeyInfo", productKeyInfo)
            .add("paginationInfo", paginationInfo)
            .toString();
    }
}