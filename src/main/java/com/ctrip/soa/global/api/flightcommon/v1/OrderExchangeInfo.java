/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.flightcommon.v1;

import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.math.BigDecimal;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 多币种支付信息
 */
@DtoDoc("多币种支付信息")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "OrderExchangeInfo", propOrder = {
    "exchangeCurrency",
    "exchangeTotalPrice",
    "exchangeRate"
})
@SuppressWarnings("all")
public class OrderExchangeInfo  {

    private static final long serialVersionUID = 1L;

    public OrderExchangeInfo(
        String exchangeCurrency, 
        BigDecimal exchangeTotalPrice, 
        BigDecimal exchangeRate) {
        this.exchangeCurrency = exchangeCurrency;
        this.exchangeTotalPrice = exchangeTotalPrice;
        this.exchangeRate = exchangeRate;
    }

    public OrderExchangeInfo() {
    }

    @FieldDoc("当前查询币种")
    @JsonProperty("ExchangeCurrency")
    @XmlElement(name = "ExchangeCurrency")
    private String exchangeCurrency;

    @FieldDoc("当前查询语言币种机票总价")
    @JsonProperty("ExchangeTotalPrice")
    @XmlElement(name = "ExchangeTotalPrice")
    private BigDecimal exchangeTotalPrice;

    @FieldDoc("当前查询语言币种对人民币汇率")
    @JsonProperty("ExchangeRate")
    @XmlElement(name = "ExchangeRate")
    private BigDecimal exchangeRate;

    /**
     * 当前查询币种
     */
    public String getExchangeCurrency() {
        return this.exchangeCurrency;
    }

    public void setExchangeCurrency(String exchangeCurrency) {
        this.exchangeCurrency = exchangeCurrency;
    }

    /**
     * 当前查询语言币种机票总价
     */
    public BigDecimal getExchangeTotalPrice() {
        return this.exchangeTotalPrice;
    }

    public void setExchangeTotalPrice(BigDecimal exchangeTotalPrice) {
        this.exchangeTotalPrice = exchangeTotalPrice;
    }

    /**
     * 当前查询语言币种对人民币汇率
     */
    public BigDecimal getExchangeRate() {
        return this.exchangeRate;
    }

    public void setExchangeRate(BigDecimal exchangeRate) {
        this.exchangeRate = exchangeRate;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final OrderExchangeInfo other = (OrderExchangeInfo)obj;
        return
            Objects.equal(this.exchangeCurrency, other.exchangeCurrency) && 
            Objects.equal(this.exchangeTotalPrice, other.exchangeTotalPrice) && 
            Objects.equal(this.exchangeRate, other.exchangeRate);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.exchangeCurrency);
        result = 31 * result + Objects.hashCode(this.exchangeTotalPrice);
        result = 31 * result + Objects.hashCode(this.exchangeRate);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("exchangeCurrency", exchangeCurrency)
            .add("exchangeTotalPrice", exchangeTotalPrice)
            .add("exchangeRate", exchangeRate)
            .toString();
    }
}