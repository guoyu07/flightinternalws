/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.followorder.v1;

import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 返回实体
 */
@DtoDoc("返回实体")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FlightVariPassengerType", propOrder = {
    "passengerName",
    "mobelPhone"
})
@SuppressWarnings("all")
public class FlightVariPassengerType  {

    private static final long serialVersionUID = 1L;

    public FlightVariPassengerType(
        String passengerName, 
        String mobelPhone) {
        this.passengerName = passengerName;
        this.mobelPhone = mobelPhone;
    }

    public FlightVariPassengerType() {
    }

    @FieldDoc("乘机人姓名")
    @JsonProperty("PassengerName")
    @XmlElement(name = "PassengerName")
    private String passengerName;

    @FieldDoc("手机号码")
    @JsonProperty("MobelPhone")
    @XmlElement(name = "MobelPhone")
    private String mobelPhone;

    /**
     * 乘机人姓名
     */
    public String getPassengerName() {
        return this.passengerName;
    }

    public void setPassengerName(String passengerName) {
        this.passengerName = passengerName;
    }

    /**
     * 手机号码
     */
    public String getMobelPhone() {
        return this.mobelPhone;
    }

    public void setMobelPhone(String mobelPhone) {
        this.mobelPhone = mobelPhone;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final FlightVariPassengerType other = (FlightVariPassengerType)obj;
        return
            Objects.equal(this.passengerName, other.passengerName) && 
            Objects.equal(this.mobelPhone, other.mobelPhone);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.passengerName);
        result = 31 * result + Objects.hashCode(this.mobelPhone);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("passengerName", passengerName)
            .add("mobelPhone", mobelPhone)
            .toString();
    }
}