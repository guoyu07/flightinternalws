/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.flight.union_searchflightsws.v1;

import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TravelerRequestType", propOrder = {
    "travelerCategoryCode",
    "travelerCount",
    "travelerEligibilityCode"
})
@SuppressWarnings("all")
public class TravelerRequestType  {

    private static final long serialVersionUID = 1L;

    public TravelerRequestType(
        String travelerCategoryCode, 
        int travelerCount, 
        String travelerEligibilityCode) {
        this.travelerCategoryCode = travelerCategoryCode;
        this.travelerCount = travelerCount;
        this.travelerEligibilityCode = travelerEligibilityCode;
    }

    public TravelerRequestType() {
    }

    @FieldDoc("Traveler category： Adult/ Child/Infant on Lap/Infant in Seat/ Senior")
    @JsonProperty("TravelerCategoryCode")
    @XmlElement(name = "TravelerCategoryCode")
    private String travelerCategoryCode;

    @FieldDoc("Traveler count")
    @JsonProperty("TravelerCount")
    @XmlElement(name = "TravelerCount")
    private int travelerCount;

    @FieldDoc("Traveler eligibility: ALL ADT CHD EMI LAB NEW SEA SRC STU TAI VFR WOM YTH")
    @JsonProperty("TravelerEligibilityCode")
    @XmlElement(name = "TravelerEligibilityCode")
    private String travelerEligibilityCode;

    /**
     * Traveler category： Adult/ Child/Infant on Lap/Infant in Seat/ Senior
     */
    public String getTravelerCategoryCode() {
        return this.travelerCategoryCode;
    }

    public void setTravelerCategoryCode(String travelerCategoryCode) {
        this.travelerCategoryCode = travelerCategoryCode;
    }

    /**
     * Traveler count
     */
    public int getTravelerCount() {
        return this.travelerCount;
    }

    public void setTravelerCount(int travelerCount) {
        this.travelerCount = travelerCount;
    }

    /**
     * Traveler eligibility: ALL ADT CHD EMI LAB NEW SEA SRC STU TAI VFR WOM YTH
     */
    public String getTravelerEligibilityCode() {
        return this.travelerEligibilityCode;
    }

    public void setTravelerEligibilityCode(String travelerEligibilityCode) {
        this.travelerEligibilityCode = travelerEligibilityCode;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final TravelerRequestType other = (TravelerRequestType)obj;
        return
            Objects.equal(this.travelerCategoryCode, other.travelerCategoryCode) && 
            Objects.equal(this.travelerCount, other.travelerCount) && 
            Objects.equal(this.travelerEligibilityCode, other.travelerEligibilityCode);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.travelerCategoryCode);
        result = 31 * result + Objects.hashCode(this.travelerCount);
        result = 31 * result + Objects.hashCode(this.travelerEligibilityCode);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("travelerCategoryCode", travelerCategoryCode)
            .add("travelerCount", travelerCount)
            .add("travelerEligibilityCode", travelerEligibilityCode)
            .toString();
    }
}