/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.getintlinsurance.v1;

import com.ctrip.soa.global.api.getinsurance.v1.InsuranceExchangeInfo;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.math.BigDecimal;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "IntlInsurance", propOrder = {
    "type",
    "name",
    "description",
    "price",
    "currencyPrice",
    "insuredAmount",
    "limit",
    "isDefault",
    "insuranceExchangeInfo",
    "insuranceExchangeInfos",
    "insuranceType"
})
@SuppressWarnings("all")
public class IntlInsurance  {

    private static final long serialVersionUID = 1L;

    public IntlInsurance(
        String type, 
        String name, 
        String description, 
        BigDecimal price, 
        BigDecimal currencyPrice, 
        BigDecimal insuredAmount, 
        IntlLimit limit, 
        boolean isDefault, 
        InsuranceExchangeInfo insuranceExchangeInfo, 
        List<InsuranceExchangeInfo> insuranceExchangeInfos, 
        int insuranceType) {
        this.type = type;
        this.name = name;
        this.description = description;
        this.price = price;
        this.currencyPrice = currencyPrice;
        this.insuredAmount = insuredAmount;
        this.limit = limit;
        this.isDefault = isDefault;
        this.insuranceExchangeInfo = insuranceExchangeInfo;
        this.insuranceExchangeInfos = insuranceExchangeInfos;
        this.insuranceType = insuranceType;
    }

    public IntlInsurance() {
    }

    @FieldDoc("保险类型")
    @JsonProperty("Type")
    @XmlElement(name = "Type")
    private String type;

    @FieldDoc("保险名称")
    @JsonProperty("Name")
    @XmlElement(name = "Name")
    private String name;

    @FieldDoc("保险说明")
    @JsonProperty("Description")
    @XmlElement(name = "Description")
    private String description;

    @FieldDoc("单价")
    @JsonProperty("Price")
    @XmlElement(name = "Price")
    private BigDecimal price;

    @FieldDoc("当前币种单价")
    @JsonProperty("CurrencyPrice")
    @XmlElement(name = "CurrencyPrice")
    private BigDecimal currencyPrice;

    @FieldDoc("保额")
    @JsonProperty("InsuredAmount")
    @XmlElement(name = "InsuredAmount")
    private BigDecimal insuredAmount;

    @FieldDoc("购买限制")
    @JsonProperty("Limit")
    @XmlElement(name = "Limit")
    private IntlLimit limit;

    @FieldDoc("是否默认")
    @JsonProperty("IsDefault")
    @XmlElement(name = "IsDefault")
    private boolean isDefault;

    @FieldDoc("对应的语言货币信息,此处是通过head.Language获取的")
    @JsonProperty("InsuranceExchangeInfo")
    @XmlElement(name = "InsuranceExchangeInfo")
    private InsuranceExchangeInfo insuranceExchangeInfo;

    @JsonProperty("InsuranceExchangeInfos")
    @XmlElement(name = "InsuranceExchangeInfos")
    private List<InsuranceExchangeInfo> insuranceExchangeInfos;

    @FieldDoc("保险类型int类型" +
          "0-未知" +
          "1-航意险" +
          "2-旅行险")
    @JsonProperty("InsuranceType")
    @XmlElement(name = "InsuranceType")
    private int insuranceType;

    /**
     * 保险类型
     */
    public String getType() {
        return this.type;
    }

    public void setType(String type) {
        this.type = type;
    }

    /**
     * 保险名称
     */
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    /**
     * 保险说明
     */
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * 单价
     */
    public BigDecimal getPrice() {
        return this.price;
    }

    public void setPrice(BigDecimal price) {
        this.price = price;
    }

    /**
     * 当前币种单价
     */
    public BigDecimal getCurrencyPrice() {
        return this.currencyPrice;
    }

    public void setCurrencyPrice(BigDecimal currencyPrice) {
        this.currencyPrice = currencyPrice;
    }

    /**
     * 保额
     */
    public BigDecimal getInsuredAmount() {
        return this.insuredAmount;
    }

    public void setInsuredAmount(BigDecimal insuredAmount) {
        this.insuredAmount = insuredAmount;
    }

    /**
     * 购买限制
     */
    public IntlLimit getLimit() {
        return this.limit;
    }

    public void setLimit(IntlLimit limit) {
        this.limit = limit;
    }

    /**
     * 是否默认
     */
    public boolean getIsDefault() {
        return this.isDefault;
    }

    public void setIsDefault(boolean isDefault) {
        this.isDefault = isDefault;
    }

    /**
     * 对应的语言货币信息,此处是通过head.Language获取的
     */
    public InsuranceExchangeInfo getInsuranceExchangeInfo() {
        return this.insuranceExchangeInfo;
    }

    public void setInsuranceExchangeInfo(InsuranceExchangeInfo insuranceExchangeInfo) {
        this.insuranceExchangeInfo = insuranceExchangeInfo;
    }

    public List<InsuranceExchangeInfo> getInsuranceExchangeInfos() {
        return this.insuranceExchangeInfos;
    }

    public void setInsuranceExchangeInfos(List<InsuranceExchangeInfo> insuranceExchangeInfos) {
        this.insuranceExchangeInfos = insuranceExchangeInfos;
    }

    /**
     * 保险类型int类型
     *           0-未知
     *           1-航意险
     *           2-旅行险
     */
    public int getInsuranceType() {
        return this.insuranceType;
    }

    public void setInsuranceType(int insuranceType) {
        this.insuranceType = insuranceType;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final IntlInsurance other = (IntlInsurance)obj;
        return
            Objects.equal(this.type, other.type) && 
            Objects.equal(this.name, other.name) && 
            Objects.equal(this.description, other.description) && 
            Objects.equal(this.price, other.price) && 
            Objects.equal(this.currencyPrice, other.currencyPrice) && 
            Objects.equal(this.insuredAmount, other.insuredAmount) && 
            Objects.equal(this.limit, other.limit) && 
            Objects.equal(this.isDefault, other.isDefault) && 
            Objects.equal(this.insuranceExchangeInfo, other.insuranceExchangeInfo) && 
            Objects.equal(this.insuranceExchangeInfos, other.insuranceExchangeInfos) && 
            Objects.equal(this.insuranceType, other.insuranceType);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.type);
        result = 31 * result + Objects.hashCode(this.name);
        result = 31 * result + Objects.hashCode(this.description);
        result = 31 * result + Objects.hashCode(this.price);
        result = 31 * result + Objects.hashCode(this.currencyPrice);
        result = 31 * result + Objects.hashCode(this.insuredAmount);
        result = 31 * result + Objects.hashCode(this.limit);
        result = 31 * result + Objects.hashCode(this.isDefault);
        result = 31 * result + Objects.hashCode(this.insuranceExchangeInfo);
        result = 31 * result + Objects.hashCode(this.insuranceExchangeInfos);
        result = 31 * result + Objects.hashCode(this.insuranceType);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("type", type)
            .add("name", name)
            .add("description", description)
            .add("price", price)
            .add("currencyPrice", currencyPrice)
            .add("insuredAmount", insuredAmount)
            .add("limit", limit)
            .add("isDefault", isDefault)
            .add("insuranceExchangeInfo", insuranceExchangeInfo)
            .add("insuranceExchangeInfos", insuranceExchangeInfos)
            .add("insuranceType", insuranceType)
            .toString();
    }
}