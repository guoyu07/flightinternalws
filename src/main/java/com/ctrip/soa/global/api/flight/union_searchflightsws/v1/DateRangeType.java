/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.flight.union_searchflightsws.v1;

import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 时间范围
 */
@DtoDoc("时间范围")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DateRangeType", propOrder = {
    "allowedDateRange",
    "forbiddenDateRange"
})
@SuppressWarnings("all")
public class DateRangeType  {

    private static final long serialVersionUID = 1L;

    public DateRangeType(
        String allowedDateRange, 
        String forbiddenDateRange) {
        this.allowedDateRange = allowedDateRange;
        this.forbiddenDateRange = forbiddenDateRange;
    }

    public DateRangeType() {
    }

    @FieldDoc("适用时间范围")
    @JsonProperty("AllowedDateRange")
    @XmlElement(name = "AllowedDateRange")
    private String allowedDateRange;

    @FieldDoc("禁用时间范围")
    @JsonProperty("ForbiddenDateRange")
    @XmlElement(name = "ForbiddenDateRange")
    private String forbiddenDateRange;

    /**
     * 适用时间范围
     */
    public String getAllowedDateRange() {
        return this.allowedDateRange;
    }

    public void setAllowedDateRange(String allowedDateRange) {
        this.allowedDateRange = allowedDateRange;
    }

    /**
     * 禁用时间范围
     */
    public String getForbiddenDateRange() {
        return this.forbiddenDateRange;
    }

    public void setForbiddenDateRange(String forbiddenDateRange) {
        this.forbiddenDateRange = forbiddenDateRange;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final DateRangeType other = (DateRangeType)obj;
        return
            Objects.equal(this.allowedDateRange, other.allowedDateRange) && 
            Objects.equal(this.forbiddenDateRange, other.forbiddenDateRange);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.allowedDateRange);
        result = 31 * result + Objects.hashCode(this.forbiddenDateRange);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("allowedDateRange", allowedDateRange)
            .add("forbiddenDateRange", forbiddenDateRange)
            .toString();
    }
}