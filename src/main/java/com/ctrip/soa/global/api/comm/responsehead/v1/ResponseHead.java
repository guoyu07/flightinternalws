/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.comm.responsehead.v1;

import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ResponseHead", propOrder = {
    "timeSpan",
    "errorMessage",
    "errorCode",
    "showErrorMsg"
})
@SuppressWarnings("all")
public class ResponseHead  {

    private static final long serialVersionUID = 1L;

    public ResponseHead(
        long timeSpan, 
        String errorMessage, 
        String errorCode, 
        String showErrorMsg) {
        this.timeSpan = timeSpan;
        this.errorMessage = errorMessage;
        this.errorCode = errorCode;
        this.showErrorMsg = showErrorMsg;
    }

    public ResponseHead() {
    }

    @FieldDoc("当前时间")
    @JsonProperty("TimeSpan")
    @XmlElement(name = "TimeSpan")
    private long timeSpan;

    @FieldDoc("错误信息(用于程序员查看)")
    @JsonProperty("ErrorMessage")
    @XmlElement(name = "ErrorMessage")
    private String errorMessage;

    @FieldDoc("错误编码")
    @JsonProperty("ErrorCode")
    @XmlElement(name = "ErrorCode")
    private String errorCode;

    @FieldDoc("展现给用户看的错误信息")
    @JsonProperty("ShowErrorMsg")
    @XmlElement(name = "ShowErrorMsg")
    private String showErrorMsg;

    /**
     * 当前时间
     */
    public long getTimeSpan() {
        return this.timeSpan;
    }

    public void setTimeSpan(long timeSpan) {
        this.timeSpan = timeSpan;
    }

    /**
     * 错误信息(用于程序员查看)
     */
    public String getErrorMessage() {
        return this.errorMessage;
    }

    public void setErrorMessage(String errorMessage) {
        this.errorMessage = errorMessage;
    }

    /**
     * 错误编码
     */
    public String getErrorCode() {
        return this.errorCode;
    }

    public void setErrorCode(String errorCode) {
        this.errorCode = errorCode;
    }

    /**
     * 展现给用户看的错误信息
     */
    public String getShowErrorMsg() {
        return this.showErrorMsg;
    }

    public void setShowErrorMsg(String showErrorMsg) {
        this.showErrorMsg = showErrorMsg;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final ResponseHead other = (ResponseHead)obj;
        return
            Objects.equal(this.timeSpan, other.timeSpan) && 
            Objects.equal(this.errorMessage, other.errorMessage) && 
            Objects.equal(this.errorCode, other.errorCode) && 
            Objects.equal(this.showErrorMsg, other.showErrorMsg);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.timeSpan);
        result = 31 * result + Objects.hashCode(this.errorMessage);
        result = 31 * result + Objects.hashCode(this.errorCode);
        result = 31 * result + Objects.hashCode(this.showErrorMsg);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("timeSpan", timeSpan)
            .add("errorMessage", errorMessage)
            .add("errorCode", errorCode)
            .add("showErrorMsg", showErrorMsg)
            .toString();
    }
}