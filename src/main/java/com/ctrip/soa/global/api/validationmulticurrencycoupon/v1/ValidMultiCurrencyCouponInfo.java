/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.validationmulticurrencycoupon.v1;

import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.math.BigDecimal;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ValidMultiCurrencyCouponInfo", propOrder = {
    "couponCode",
    "couponType",
    "errCode",
    "errMessage",
    "couponCanUse",
    "couponID",
    "promotionID",
    "name",
    "remark",
    "promotionMethodID",
    "deductionAmount",
    "deductionStrategyTypeID",
    "unitTypeID",
    "couponTypeID",
    "deductionStrategies",
    "startDate",
    "endDate",
    "paymentType",
    "sceneType",
    "currency",
    "couponPaymentInfoList"
})
@SuppressWarnings("all")
public class ValidMultiCurrencyCouponInfo  {

    private static final long serialVersionUID = 1L;

    public ValidMultiCurrencyCouponInfo(
        String couponCode, 
        String couponType, 
        int errCode, 
        String errMessage, 
        boolean couponCanUse, 
        long couponID, 
        int promotionID, 
        String name, 
        String remark, 
        int promotionMethodID, 
        BigDecimal deductionAmount, 
        int deductionStrategyTypeID, 
        int unitTypeID, 
        int couponTypeID, 
        List<CouponDeductionStrategy> deductionStrategies, 
        long startDate, 
        long endDate, 
        int paymentType, 
        int sceneType, 
        String currency, 
        List<CouponPaymentInfo> couponPaymentInfoList) {
        this.couponCode = couponCode;
        this.couponType = couponType;
        this.errCode = errCode;
        this.errMessage = errMessage;
        this.couponCanUse = couponCanUse;
        this.couponID = couponID;
        this.promotionID = promotionID;
        this.name = name;
        this.remark = remark;
        this.promotionMethodID = promotionMethodID;
        this.deductionAmount = deductionAmount;
        this.deductionStrategyTypeID = deductionStrategyTypeID;
        this.unitTypeID = unitTypeID;
        this.couponTypeID = couponTypeID;
        this.deductionStrategies = deductionStrategies;
        this.startDate = startDate;
        this.endDate = endDate;
        this.paymentType = paymentType;
        this.sceneType = sceneType;
        this.currency = currency;
        this.couponPaymentInfoList = couponPaymentInfoList;
    }

    public ValidMultiCurrencyCouponInfo() {
    }

    @FieldDoc("优惠券代码")
    @JsonProperty("CouponCode")
    @XmlElement(name = "CouponCode")
    private String couponCode;

    @FieldDoc("优惠券种类")
    @JsonProperty("CouponType")
    @XmlElement(name = "CouponType")
    private String couponType;

    @FieldDoc("Errorcode")
    @JsonProperty("ErrCode")
    @XmlElement(name = "ErrCode")
    private int errCode;

    @FieldDoc("Errorcode")
    @JsonProperty("ErrMessage")
    @XmlElement(name = "ErrMessage")
    private String errMessage;

    @FieldDoc("该订单是否可以使用优惠券")
    @JsonProperty("CouponCanUse")
    @XmlElement(name = "CouponCanUse")
    private boolean couponCanUse;

    @FieldDoc("主键")
    @JsonProperty("CouponID")
    @XmlElement(name = "CouponID")
    private long couponID;

    @FieldDoc("优惠策略编号")
    @JsonProperty("PromotionID")
    @XmlElement(name = "PromotionID")
    private int promotionID;

    @FieldDoc("优惠券名称 -e.g满300减50")
    @JsonProperty("Name")
    @XmlElement(name = "Name")
    private String name;

    @FieldDoc("优惠券标记 -e.g满300减50")
    @JsonProperty("Remark")
    @XmlElement(name = "Remark")
    private String remark;

    @FieldDoc("优惠模式(1-立减 2-后返)")
    @JsonProperty("PromotionMethodID")
    @XmlElement(name = "PromotionMethodID")
    private int promotionMethodID;

    @FieldDoc("立减金额")
    @JsonProperty("DeductionAmount")
    @XmlElement(name = "DeductionAmount")
    private BigDecimal deductionAmount;

    @FieldDoc("优惠折扣方式(1-固定立减2-百分比3-阶梯)")
    @JsonProperty("DeductionStrategyTypeID")
    @XmlElement(name = "DeductionStrategyTypeID")
    private int deductionStrategyTypeID;

    @FieldDoc("优惠计算单位(1-按人 2-按订单 4-按航段)")
    @JsonProperty("UnitTypeID")
    @XmlElement(name = "UnitTypeID")
    private int unitTypeID;

    @FieldDoc("优惠代码类型(1-公共券 2-私有 3-单次券 4-团购券)")
    @JsonProperty("CouponTypeID")
    @XmlElement(name = "CouponTypeID")
    private int couponTypeID;

    @FieldDoc("优惠券策略详情")
    @JsonProperty("DeductionStrategies")
    @XmlElement(name = "DeductionStrategies")
    private List<CouponDeductionStrategy> deductionStrategies;

    @FieldDoc("有效期开始时间")
    @JsonProperty("StartDate")
    @XmlElement(name = "StartDate")
    private long startDate;

    @FieldDoc("有效期到期时间")
    @JsonProperty("EndDate")
    @XmlElement(name = "EndDate")
    private long endDate;

    @FieldDoc("支付类型")
    @JsonProperty("PaymentType")
    @XmlElement(name = "PaymentType")
    private int paymentType;

    @FieldDoc("场景")
    @JsonProperty("SceneType")
    @XmlElement(name = "SceneType")
    private int sceneType;

    @FieldDoc("币种")
    @JsonProperty("Currency")
    @XmlElement(name = "Currency")
    private String currency;

    @FieldDoc("优惠券支付限定的支付方式信息")
    @JsonProperty("CouponPaymentInfoList")
    @XmlElement(name = "CouponPaymentInfoList")
    private List<CouponPaymentInfo> couponPaymentInfoList;

    /**
     * 优惠券代码
     */
    public String getCouponCode() {
        return this.couponCode;
    }

    public void setCouponCode(String couponCode) {
        this.couponCode = couponCode;
    }

    /**
     * 优惠券种类
     */
    public String getCouponType() {
        return this.couponType;
    }

    public void setCouponType(String couponType) {
        this.couponType = couponType;
    }

    /**
     * Errorcode
     */
    public int getErrCode() {
        return this.errCode;
    }

    public void setErrCode(int errCode) {
        this.errCode = errCode;
    }

    /**
     * Errorcode
     */
    public String getErrMessage() {
        return this.errMessage;
    }

    public void setErrMessage(String errMessage) {
        this.errMessage = errMessage;
    }

    /**
     * 该订单是否可以使用优惠券
     */
    public boolean getCouponCanUse() {
        return this.couponCanUse;
    }

    public void setCouponCanUse(boolean couponCanUse) {
        this.couponCanUse = couponCanUse;
    }

    /**
     * 主键
     */
    public long getCouponID() {
        return this.couponID;
    }

    public void setCouponID(long couponID) {
        this.couponID = couponID;
    }

    /**
     * 优惠策略编号
     */
    public int getPromotionID() {
        return this.promotionID;
    }

    public void setPromotionID(int promotionID) {
        this.promotionID = promotionID;
    }

    /**
     * 优惠券名称 -e.g满300减50
     */
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    /**
     * 优惠券标记 -e.g满300减50
     */
    public String getRemark() {
        return this.remark;
    }

    public void setRemark(String remark) {
        this.remark = remark;
    }

    /**
     * 优惠模式(1-立减 2-后返)
     */
    public int getPromotionMethodID() {
        return this.promotionMethodID;
    }

    public void setPromotionMethodID(int promotionMethodID) {
        this.promotionMethodID = promotionMethodID;
    }

    /**
     * 立减金额
     */
    public BigDecimal getDeductionAmount() {
        return this.deductionAmount;
    }

    public void setDeductionAmount(BigDecimal deductionAmount) {
        this.deductionAmount = deductionAmount;
    }

    /**
     * 优惠折扣方式(1-固定立减2-百分比3-阶梯)
     */
    public int getDeductionStrategyTypeID() {
        return this.deductionStrategyTypeID;
    }

    public void setDeductionStrategyTypeID(int deductionStrategyTypeID) {
        this.deductionStrategyTypeID = deductionStrategyTypeID;
    }

    /**
     * 优惠计算单位(1-按人 2-按订单 4-按航段)
     */
    public int getUnitTypeID() {
        return this.unitTypeID;
    }

    public void setUnitTypeID(int unitTypeID) {
        this.unitTypeID = unitTypeID;
    }

    /**
     * 优惠代码类型(1-公共券 2-私有 3-单次券 4-团购券)
     */
    public int getCouponTypeID() {
        return this.couponTypeID;
    }

    public void setCouponTypeID(int couponTypeID) {
        this.couponTypeID = couponTypeID;
    }

    /**
     * 优惠券策略详情
     */
    public List<CouponDeductionStrategy> getDeductionStrategies() {
        return this.deductionStrategies;
    }

    public void setDeductionStrategies(List<CouponDeductionStrategy> deductionStrategies) {
        this.deductionStrategies = deductionStrategies;
    }

    /**
     * 有效期开始时间
     */
    public long getStartDate() {
        return this.startDate;
    }

    public void setStartDate(long startDate) {
        this.startDate = startDate;
    }

    /**
     * 有效期到期时间
     */
    public long getEndDate() {
        return this.endDate;
    }

    public void setEndDate(long endDate) {
        this.endDate = endDate;
    }

    /**
     * 支付类型
     */
    public int getPaymentType() {
        return this.paymentType;
    }

    public void setPaymentType(int paymentType) {
        this.paymentType = paymentType;
    }

    /**
     * 场景
     */
    public int getSceneType() {
        return this.sceneType;
    }

    public void setSceneType(int sceneType) {
        this.sceneType = sceneType;
    }

    /**
     * 币种
     */
    public String getCurrency() {
        return this.currency;
    }

    public void setCurrency(String currency) {
        this.currency = currency;
    }

    /**
     * 优惠券支付限定的支付方式信息
     */
    public List<CouponPaymentInfo> getCouponPaymentInfoList() {
        return this.couponPaymentInfoList;
    }

    public void setCouponPaymentInfoList(List<CouponPaymentInfo> couponPaymentInfoList) {
        this.couponPaymentInfoList = couponPaymentInfoList;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final ValidMultiCurrencyCouponInfo other = (ValidMultiCurrencyCouponInfo)obj;
        return
            Objects.equal(this.couponCode, other.couponCode) && 
            Objects.equal(this.couponType, other.couponType) && 
            Objects.equal(this.errCode, other.errCode) && 
            Objects.equal(this.errMessage, other.errMessage) && 
            Objects.equal(this.couponCanUse, other.couponCanUse) && 
            Objects.equal(this.couponID, other.couponID) && 
            Objects.equal(this.promotionID, other.promotionID) && 
            Objects.equal(this.name, other.name) && 
            Objects.equal(this.remark, other.remark) && 
            Objects.equal(this.promotionMethodID, other.promotionMethodID) && 
            Objects.equal(this.deductionAmount, other.deductionAmount) && 
            Objects.equal(this.deductionStrategyTypeID, other.deductionStrategyTypeID) && 
            Objects.equal(this.unitTypeID, other.unitTypeID) && 
            Objects.equal(this.couponTypeID, other.couponTypeID) && 
            Objects.equal(this.deductionStrategies, other.deductionStrategies) && 
            Objects.equal(this.startDate, other.startDate) && 
            Objects.equal(this.endDate, other.endDate) && 
            Objects.equal(this.paymentType, other.paymentType) && 
            Objects.equal(this.sceneType, other.sceneType) && 
            Objects.equal(this.currency, other.currency) && 
            Objects.equal(this.couponPaymentInfoList, other.couponPaymentInfoList);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.couponCode);
        result = 31 * result + Objects.hashCode(this.couponType);
        result = 31 * result + Objects.hashCode(this.errCode);
        result = 31 * result + Objects.hashCode(this.errMessage);
        result = 31 * result + Objects.hashCode(this.couponCanUse);
        result = 31 * result + Objects.hashCode(this.couponID);
        result = 31 * result + Objects.hashCode(this.promotionID);
        result = 31 * result + Objects.hashCode(this.name);
        result = 31 * result + Objects.hashCode(this.remark);
        result = 31 * result + Objects.hashCode(this.promotionMethodID);
        result = 31 * result + Objects.hashCode(this.deductionAmount);
        result = 31 * result + Objects.hashCode(this.deductionStrategyTypeID);
        result = 31 * result + Objects.hashCode(this.unitTypeID);
        result = 31 * result + Objects.hashCode(this.couponTypeID);
        result = 31 * result + Objects.hashCode(this.deductionStrategies);
        result = 31 * result + Objects.hashCode(this.startDate);
        result = 31 * result + Objects.hashCode(this.endDate);
        result = 31 * result + Objects.hashCode(this.paymentType);
        result = 31 * result + Objects.hashCode(this.sceneType);
        result = 31 * result + Objects.hashCode(this.currency);
        result = 31 * result + Objects.hashCode(this.couponPaymentInfoList);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("couponCode", couponCode)
            .add("couponType", couponType)
            .add("errCode", errCode)
            .add("errMessage", errMessage)
            .add("couponCanUse", couponCanUse)
            .add("couponID", couponID)
            .add("promotionID", promotionID)
            .add("name", name)
            .add("remark", remark)
            .add("promotionMethodID", promotionMethodID)
            .add("deductionAmount", deductionAmount)
            .add("deductionStrategyTypeID", deductionStrategyTypeID)
            .add("unitTypeID", unitTypeID)
            .add("couponTypeID", couponTypeID)
            .add("deductionStrategies", deductionStrategies)
            .add("startDate", startDate)
            .add("endDate", endDate)
            .add("paymentType", paymentType)
            .add("sceneType", sceneType)
            .add("currency", currency)
            .add("couponPaymentInfoList", couponPaymentInfoList)
            .toString();
    }
}