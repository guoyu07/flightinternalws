/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.gaupdatetemporderstatus.v1;

import com.ctrip.soa.global.api.comm.head.v1.Head;
import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 国际机票提交订单
 */
@DtoDoc("国际机票提交订单")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlRootElement(name = "GaUpdateTempOrderStatusRequest", namespace = "http://soa.ctrip.com/Global/API/GaUpdateTempOrderStatus/v1")
@XmlType(name = "GaUpdateTempOrderStatusRequest", propOrder = {
    "head",
    "orderID",
    "orderStatus",
    "errorCode",
    "errorMsg"
})
@SuppressWarnings("all")
public class GaUpdateTempOrderStatusRequest  {

    private static final long serialVersionUID = 1L;

    public GaUpdateTempOrderStatusRequest(
        Head head, 
        long orderID, 
        int orderStatus, 
        String errorCode, 
        String errorMsg) {
        this.head = head;
        this.orderID = orderID;
        this.orderStatus = orderStatus;
        this.errorCode = errorCode;
        this.errorMsg = errorMsg;
    }

    public GaUpdateTempOrderStatusRequest() {
    }

    @FieldDoc("SOA2.0请求头部信息")
    @JsonProperty("Head")
    @XmlElement(name = "Head")
    private Head head;

    @FieldDoc("订单ID")
    @JsonProperty("OrderID")
    @XmlElement(name = "OrderID")
    private long orderID;

    @FieldDoc("订单状态")
    @JsonProperty("OrderStatus")
    @XmlElement(name = "OrderStatus")
    private int orderStatus;

    @FieldDoc("错误码" +
				    "CreateSuccess = 1,创建成功" +
					"SubmitSuccess = 2,提交成功" +
					"PaymentSuccess = 3,支付成功【客户端完成页】" +
					"CreateFail = 4,创建失败" +
					"SubmitFail = 5,提交失败" +
					"Confirming = 6,确认中【客户端确认页】" +
					"Paying = 7,支付中【客户端进入支付页】" +
					"Cancel = 8,取消")
    @JsonProperty("ErrorCode")
    @XmlElement(name = "ErrorCode")
    private String errorCode;

    @FieldDoc("错误信息")
    @JsonProperty("ErrorMsg")
    @XmlElement(name = "ErrorMsg")
    private String errorMsg;

    /**
     * SOA2.0请求头部信息
     */
    public Head getHead() {
        return this.head;
    }

    public void setHead(Head head) {
        this.head = head;
    }

    /**
     * 订单ID
     */
    public long getOrderID() {
        return this.orderID;
    }

    public void setOrderID(long orderID) {
        this.orderID = orderID;
    }

    /**
     * 订单状态
     */
    public int getOrderStatus() {
        return this.orderStatus;
    }

    public void setOrderStatus(int orderStatus) {
        this.orderStatus = orderStatus;
    }

    /**
     * 错误码
     *     CreateSuccess = 1,创建成功
     * SubmitSuccess = 2,提交成功
     * PaymentSuccess = 3,支付成功【客户端完成页】
     * CreateFail = 4,创建失败
     * SubmitFail = 5,提交失败
     * Confirming = 6,确认中【客户端确认页】
     * Paying = 7,支付中【客户端进入支付页】
     * Cancel = 8,取消
     */
    public String getErrorCode() {
        return this.errorCode;
    }

    public void setErrorCode(String errorCode) {
        this.errorCode = errorCode;
    }

    /**
     * 错误信息
     */
    public String getErrorMsg() {
        return this.errorMsg;
    }

    public void setErrorMsg(String errorMsg) {
        this.errorMsg = errorMsg;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final GaUpdateTempOrderStatusRequest other = (GaUpdateTempOrderStatusRequest)obj;
        return
            Objects.equal(this.head, other.head) && 
            Objects.equal(this.orderID, other.orderID) && 
            Objects.equal(this.orderStatus, other.orderStatus) && 
            Objects.equal(this.errorCode, other.errorCode) && 
            Objects.equal(this.errorMsg, other.errorMsg);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.head);
        result = 31 * result + Objects.hashCode(this.orderID);
        result = 31 * result + Objects.hashCode(this.orderStatus);
        result = 31 * result + Objects.hashCode(this.errorCode);
        result = 31 * result + Objects.hashCode(this.errorMsg);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("head", head)
            .add("orderID", orderID)
            .add("orderStatus", orderStatus)
            .add("errorCode", errorCode)
            .add("errorMsg", errorMsg)
            .toString();
    }
}