/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.payment.getpaymentneedinfo.v1;

import com.ctrip.soa.global.api.payment.paymentcommon.v1.PaymentWayEntity;
import com.ctrip.soa.global.api.payment.paymentcommon.v1.UsedCreditCardEntity;
import com.ctriposs.baiji.rpc.common.HasResponseStatus;
import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.ctriposs.baiji.rpc.common.types.ResponseStatusType;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.math.BigDecimal;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 获取可用支付方式响应 以后扩展支付方式采用添加属性的形式 这样可以兼容老版本客户端
 */
@DtoDoc("获取可用支付方式响应 以后扩展支付方式采用添加属性的形式 这样可以兼容老版本客户端")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlRootElement(name = "GetPaymentNeedInfoResponse", namespace = "http://soa.ctrip.com/Global/API/Payment/GetPaymentNeedInfo/v1")
@XmlType(name = "GetPaymentNeedInfoResponse", propOrder = {
    "responseStatus",
    "foreignCardCharge",
    "creditCardPaymentCatalog",
    "payUsedCardItems",
    "coupon",
    "idCardTypeItems"
})
@SuppressWarnings("all")
public class GetPaymentNeedInfoResponse implements HasResponseStatus {

    private static final long serialVersionUID = 1L;

    public GetPaymentNeedInfoResponse(
        ResponseStatusType responseStatus, 
        BigDecimal foreignCardCharge, 
        List<PaymentWayEntity> creditCardPaymentCatalog, 
        List<UsedCreditCardEntity> payUsedCardItems, 
        CouponAmountEntity coupon, 
        List<CardHolderIDCardTypeEntity> idCardTypeItems) {
        this.responseStatus = responseStatus;
        this.foreignCardCharge = foreignCardCharge;
        this.creditCardPaymentCatalog = creditCardPaymentCatalog;
        this.payUsedCardItems = payUsedCardItems;
        this.coupon = coupon;
        this.idCardTypeItems = idCardTypeItems;
    }

    public GetPaymentNeedInfoResponse() {
    }

    @JsonProperty("ResponseStatus")
    @XmlElement(name = "ResponseStatus")
    private ResponseStatusType responseStatus;

    @FieldDoc("外卡手续费")
    @JsonProperty("ForeignCardCharge")
    @XmlElement(name = "ForeignCardCharge")
    private BigDecimal foreignCardCharge;

    @FieldDoc("信用卡支付类别 含信用卡 信用卡担保 国际卡 港币信用卡等")
    @JsonProperty("CreditCardPaymentCatalog")
    @XmlElement(name = "CreditCardPaymentCatalog")
    private List<PaymentWayEntity> creditCardPaymentCatalog;

    @FieldDoc("用户曾用卡")
    @JsonProperty("PayUsedCardItems")
    @XmlElement(name = "PayUsedCardItems")
    private List<UsedCreditCardEntity> payUsedCardItems;

    @FieldDoc("用户邮票")
    @JsonProperty("Coupon")
    @XmlElement(name = "Coupon")
    private CouponAmountEntity coupon;

    @JsonProperty("IDCardTypeItems")
    @XmlElement(name = "IDCardTypeItems")
    private List<CardHolderIDCardTypeEntity> idCardTypeItems;

    public ResponseStatusType getResponseStatus() {
        return this.responseStatus;
    }

    public void setResponseStatus(ResponseStatusType responseStatus) {
        this.responseStatus = responseStatus;
    }

    /**
     * 外卡手续费
     */
    public BigDecimal getForeignCardCharge() {
        return this.foreignCardCharge;
    }

    public void setForeignCardCharge(BigDecimal foreignCardCharge) {
        this.foreignCardCharge = foreignCardCharge;
    }

    /**
     * 信用卡支付类别 含信用卡 信用卡担保 国际卡 港币信用卡等
     */
    public List<PaymentWayEntity> getCreditCardPaymentCatalog() {
        return this.creditCardPaymentCatalog;
    }

    public void setCreditCardPaymentCatalog(List<PaymentWayEntity> creditCardPaymentCatalog) {
        this.creditCardPaymentCatalog = creditCardPaymentCatalog;
    }

    /**
     * 用户曾用卡
     */
    public List<UsedCreditCardEntity> getPayUsedCardItems() {
        return this.payUsedCardItems;
    }

    public void setPayUsedCardItems(List<UsedCreditCardEntity> payUsedCardItems) {
        this.payUsedCardItems = payUsedCardItems;
    }

    /**
     * 用户邮票
     */
    public CouponAmountEntity getCoupon() {
        return this.coupon;
    }

    public void setCoupon(CouponAmountEntity coupon) {
        this.coupon = coupon;
    }

    public List<CardHolderIDCardTypeEntity> getIdCardTypeItems() {
        return this.idCardTypeItems;
    }

    public void setIdCardTypeItems(List<CardHolderIDCardTypeEntity> idCardTypeItems) {
        this.idCardTypeItems = idCardTypeItems;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final GetPaymentNeedInfoResponse other = (GetPaymentNeedInfoResponse)obj;
        return
            Objects.equal(this.responseStatus, other.responseStatus) && 
            Objects.equal(this.foreignCardCharge, other.foreignCardCharge) && 
            Objects.equal(this.creditCardPaymentCatalog, other.creditCardPaymentCatalog) && 
            Objects.equal(this.payUsedCardItems, other.payUsedCardItems) && 
            Objects.equal(this.coupon, other.coupon) && 
            Objects.equal(this.idCardTypeItems, other.idCardTypeItems);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.responseStatus);
        result = 31 * result + Objects.hashCode(this.foreignCardCharge);
        result = 31 * result + Objects.hashCode(this.creditCardPaymentCatalog);
        result = 31 * result + Objects.hashCode(this.payUsedCardItems);
        result = 31 * result + Objects.hashCode(this.coupon);
        result = 31 * result + Objects.hashCode(this.idCardTypeItems);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("responseStatus", responseStatus)
            .add("foreignCardCharge", foreignCardCharge)
            .add("creditCardPaymentCatalog", creditCardPaymentCatalog)
            .add("payUsedCardItems", payUsedCardItems)
            .add("coupon", coupon)
            .add("idCardTypeItems", idCardTypeItems)
            .toString();
    }
}