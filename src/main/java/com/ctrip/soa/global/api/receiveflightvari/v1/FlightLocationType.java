/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.receiveflightvari.v1;

import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 航班起降地信息
 */
@DtoDoc("航班起降地信息")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FlightLocationType", propOrder = {
    "cityCode",
    "airportCode",
    "airportShortName",
    "terminalShortName"
})
@SuppressWarnings("all")
public class FlightLocationType  {

    private static final long serialVersionUID = 1L;

    public FlightLocationType(
        String cityCode, 
        String airportCode, 
        String airportShortName, 
        String terminalShortName) {
        this.cityCode = cityCode;
        this.airportCode = airportCode;
        this.airportShortName = airportShortName;
        this.terminalShortName = terminalShortName;
    }

    public FlightLocationType() {
    }

    @FieldDoc("城市三字码")
    @JsonProperty("CityCode")
    @XmlElement(name = "CityCode")
    private String cityCode;

    @FieldDoc("机场三字码")
    @JsonProperty("AirportCode")
    @XmlElement(name = "AirportCode")
    private String airportCode;

    @FieldDoc("机场短名")
    @JsonProperty("AirportShortName")
    @XmlElement(name = "AirportShortName")
    private String airportShortName;

    @FieldDoc("航站楼短名")
    @JsonProperty("TerminalShortName")
    @XmlElement(name = "TerminalShortName")
    private String terminalShortName;

    /**
     * 城市三字码
     */
    public String getCityCode() {
        return this.cityCode;
    }

    public void setCityCode(String cityCode) {
        this.cityCode = cityCode;
    }

    /**
     * 机场三字码
     */
    public String getAirportCode() {
        return this.airportCode;
    }

    public void setAirportCode(String airportCode) {
        this.airportCode = airportCode;
    }

    /**
     * 机场短名
     */
    public String getAirportShortName() {
        return this.airportShortName;
    }

    public void setAirportShortName(String airportShortName) {
        this.airportShortName = airportShortName;
    }

    /**
     * 航站楼短名
     */
    public String getTerminalShortName() {
        return this.terminalShortName;
    }

    public void setTerminalShortName(String terminalShortName) {
        this.terminalShortName = terminalShortName;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final FlightLocationType other = (FlightLocationType)obj;
        return
            Objects.equal(this.cityCode, other.cityCode) && 
            Objects.equal(this.airportCode, other.airportCode) && 
            Objects.equal(this.airportShortName, other.airportShortName) && 
            Objects.equal(this.terminalShortName, other.terminalShortName);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.cityCode);
        result = 31 * result + Objects.hashCode(this.airportCode);
        result = 31 * result + Objects.hashCode(this.airportShortName);
        result = 31 * result + Objects.hashCode(this.terminalShortName);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("cityCode", cityCode)
            .add("airportCode", airportCode)
            .add("airportShortName", airportShortName)
            .add("terminalShortName", terminalShortName)
            .toString();
    }
}