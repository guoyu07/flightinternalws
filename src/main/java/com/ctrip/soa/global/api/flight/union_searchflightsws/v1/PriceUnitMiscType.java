/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.flight.union_searchflightsws.v1;

import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PriceUnitMiscType", propOrder = {
    "channel",
    "sourceFareIDs",
    "ticketingCarrier",
    "isAddOnJoined",
    "ticketType",
    "travelerEligibility",
    "recommendLevel",
    "minPassengerCount",
    "maxPassengerCount",
    "minStay",
    "maxStay",
    "outboundDateRanges",
    "inboundDateRanges",
    "salesDateRanges",
    "forbiddenFlightsRemarkID",
    "isImmediateBooking"
})
@SuppressWarnings("all")
public class PriceUnitMiscType  {

    private static final long serialVersionUID = 1L;

    public PriceUnitMiscType(
        String channel, 
        String sourceFareIDs, 
        String ticketingCarrier, 
        boolean isAddOnJoined, 
        String ticketType, 
        String travelerEligibility, 
        int recommendLevel, 
        int minPassengerCount, 
        int maxPassengerCount, 
        String minStay, 
        String maxStay, 
        DateRangeType outboundDateRanges, 
        DateRangeType inboundDateRanges, 
        String salesDateRanges, 
        String forbiddenFlightsRemarkID, 
        boolean isImmediateBooking) {
        this.channel = channel;
        this.sourceFareIDs = sourceFareIDs;
        this.ticketingCarrier = ticketingCarrier;
        this.isAddOnJoined = isAddOnJoined;
        this.ticketType = ticketType;
        this.travelerEligibility = travelerEligibility;
        this.recommendLevel = recommendLevel;
        this.minPassengerCount = minPassengerCount;
        this.maxPassengerCount = maxPassengerCount;
        this.minStay = minStay;
        this.maxStay = maxStay;
        this.outboundDateRanges = outboundDateRanges;
        this.inboundDateRanges = inboundDateRanges;
        this.salesDateRanges = salesDateRanges;
        this.forbiddenFlightsRemarkID = forbiddenFlightsRemarkID;
        this.isImmediateBooking = isImmediateBooking;
    }

    public PriceUnitMiscType() {
    }

    @JsonProperty("Channel")
    @XmlElement(name = "Channel")
    private String channel;

    @JsonProperty("SourceFareIDs")
    @XmlElement(name = "SourceFareIDs")
    private String sourceFareIDs;

    @JsonProperty("TicketingCarrier")
    @XmlElement(name = "TicketingCarrier")
    private String ticketingCarrier;

    @FieldDoc("AddOn or not")
    @JsonProperty("IsAddOnJoined")
    @XmlElement(name = "IsAddOnJoined")
    private boolean isAddOnJoined;

    @JsonProperty("TicketType")
    @XmlElement(name = "TicketType")
    private String ticketType;

    @JsonProperty("TravelerEligibility")
    @XmlElement(name = "TravelerEligibility")
    private String travelerEligibility;

    @JsonProperty("RecommendLevel")
    @XmlElement(name = "RecommendLevel")
    private int recommendLevel;

    @JsonProperty("MinPassengerCount")
    @XmlElement(name = "MinPassengerCount")
    private int minPassengerCount;

    @JsonProperty("MaxPassengerCount")
    @XmlElement(name = "MaxPassengerCount")
    private int maxPassengerCount;

    @JsonProperty("MinStay")
    @XmlElement(name = "MinStay")
    private String minStay;

    @JsonProperty("MaxStay")
    @XmlElement(name = "MaxStay")
    private String maxStay;

    @JsonProperty("OutboundDateRanges")
    @XmlElement(name = "OutboundDateRanges")
    private DateRangeType outboundDateRanges;

    @JsonProperty("InboundDateRanges")
    @XmlElement(name = "InboundDateRanges")
    private DateRangeType inboundDateRanges;

    @JsonProperty("SalesDateRanges")
    @XmlElement(name = "SalesDateRanges")
    private String salesDateRanges;

    @JsonProperty("ForbiddenFlightsRemarkID")
    @XmlElement(name = "ForbiddenFlightsRemarkID")
    private String forbiddenFlightsRemarkID;

    @JsonProperty("IsImmediateBooking")
    @XmlElement(name = "IsImmediateBooking")
    private boolean isImmediateBooking;

    public String getChannel() {
        return this.channel;
    }

    public void setChannel(String channel) {
        this.channel = channel;
    }

    public String getSourceFareIDs() {
        return this.sourceFareIDs;
    }

    public void setSourceFareIDs(String sourceFareIDs) {
        this.sourceFareIDs = sourceFareIDs;
    }

    public String getTicketingCarrier() {
        return this.ticketingCarrier;
    }

    public void setTicketingCarrier(String ticketingCarrier) {
        this.ticketingCarrier = ticketingCarrier;
    }

    /**
     * AddOn or not
     */
    public boolean getIsAddOnJoined() {
        return this.isAddOnJoined;
    }

    public void setIsAddOnJoined(boolean isAddOnJoined) {
        this.isAddOnJoined = isAddOnJoined;
    }

    public String getTicketType() {
        return this.ticketType;
    }

    public void setTicketType(String ticketType) {
        this.ticketType = ticketType;
    }

    public String getTravelerEligibility() {
        return this.travelerEligibility;
    }

    public void setTravelerEligibility(String travelerEligibility) {
        this.travelerEligibility = travelerEligibility;
    }

    public int getRecommendLevel() {
        return this.recommendLevel;
    }

    public void setRecommendLevel(int recommendLevel) {
        this.recommendLevel = recommendLevel;
    }

    public int getMinPassengerCount() {
        return this.minPassengerCount;
    }

    public void setMinPassengerCount(int minPassengerCount) {
        this.minPassengerCount = minPassengerCount;
    }

    public int getMaxPassengerCount() {
        return this.maxPassengerCount;
    }

    public void setMaxPassengerCount(int maxPassengerCount) {
        this.maxPassengerCount = maxPassengerCount;
    }

    public String getMinStay() {
        return this.minStay;
    }

    public void setMinStay(String minStay) {
        this.minStay = minStay;
    }

    public String getMaxStay() {
        return this.maxStay;
    }

    public void setMaxStay(String maxStay) {
        this.maxStay = maxStay;
    }

    public DateRangeType getOutboundDateRanges() {
        return this.outboundDateRanges;
    }

    public void setOutboundDateRanges(DateRangeType outboundDateRanges) {
        this.outboundDateRanges = outboundDateRanges;
    }

    public DateRangeType getInboundDateRanges() {
        return this.inboundDateRanges;
    }

    public void setInboundDateRanges(DateRangeType inboundDateRanges) {
        this.inboundDateRanges = inboundDateRanges;
    }

    public String getSalesDateRanges() {
        return this.salesDateRanges;
    }

    public void setSalesDateRanges(String salesDateRanges) {
        this.salesDateRanges = salesDateRanges;
    }

    public String getForbiddenFlightsRemarkID() {
        return this.forbiddenFlightsRemarkID;
    }

    public void setForbiddenFlightsRemarkID(String forbiddenFlightsRemarkID) {
        this.forbiddenFlightsRemarkID = forbiddenFlightsRemarkID;
    }

    public boolean getIsImmediateBooking() {
        return this.isImmediateBooking;
    }

    public void setIsImmediateBooking(boolean isImmediateBooking) {
        this.isImmediateBooking = isImmediateBooking;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final PriceUnitMiscType other = (PriceUnitMiscType)obj;
        return
            Objects.equal(this.channel, other.channel) && 
            Objects.equal(this.sourceFareIDs, other.sourceFareIDs) && 
            Objects.equal(this.ticketingCarrier, other.ticketingCarrier) && 
            Objects.equal(this.isAddOnJoined, other.isAddOnJoined) && 
            Objects.equal(this.ticketType, other.ticketType) && 
            Objects.equal(this.travelerEligibility, other.travelerEligibility) && 
            Objects.equal(this.recommendLevel, other.recommendLevel) && 
            Objects.equal(this.minPassengerCount, other.minPassengerCount) && 
            Objects.equal(this.maxPassengerCount, other.maxPassengerCount) && 
            Objects.equal(this.minStay, other.minStay) && 
            Objects.equal(this.maxStay, other.maxStay) && 
            Objects.equal(this.outboundDateRanges, other.outboundDateRanges) && 
            Objects.equal(this.inboundDateRanges, other.inboundDateRanges) && 
            Objects.equal(this.salesDateRanges, other.salesDateRanges) && 
            Objects.equal(this.forbiddenFlightsRemarkID, other.forbiddenFlightsRemarkID) && 
            Objects.equal(this.isImmediateBooking, other.isImmediateBooking);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.channel);
        result = 31 * result + Objects.hashCode(this.sourceFareIDs);
        result = 31 * result + Objects.hashCode(this.ticketingCarrier);
        result = 31 * result + Objects.hashCode(this.isAddOnJoined);
        result = 31 * result + Objects.hashCode(this.ticketType);
        result = 31 * result + Objects.hashCode(this.travelerEligibility);
        result = 31 * result + Objects.hashCode(this.recommendLevel);
        result = 31 * result + Objects.hashCode(this.minPassengerCount);
        result = 31 * result + Objects.hashCode(this.maxPassengerCount);
        result = 31 * result + Objects.hashCode(this.minStay);
        result = 31 * result + Objects.hashCode(this.maxStay);
        result = 31 * result + Objects.hashCode(this.outboundDateRanges);
        result = 31 * result + Objects.hashCode(this.inboundDateRanges);
        result = 31 * result + Objects.hashCode(this.salesDateRanges);
        result = 31 * result + Objects.hashCode(this.forbiddenFlightsRemarkID);
        result = 31 * result + Objects.hashCode(this.isImmediateBooking);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("channel", channel)
            .add("sourceFareIDs", sourceFareIDs)
            .add("ticketingCarrier", ticketingCarrier)
            .add("isAddOnJoined", isAddOnJoined)
            .add("ticketType", ticketType)
            .add("travelerEligibility", travelerEligibility)
            .add("recommendLevel", recommendLevel)
            .add("minPassengerCount", minPassengerCount)
            .add("maxPassengerCount", maxPassengerCount)
            .add("minStay", minStay)
            .add("maxStay", maxStay)
            .add("outboundDateRanges", outboundDateRanges)
            .add("inboundDateRanges", inboundDateRanges)
            .add("salesDateRanges", salesDateRanges)
            .add("forbiddenFlightsRemarkID", forbiddenFlightsRemarkID)
            .add("isImmediateBooking", isImmediateBooking)
            .toString();
    }
}