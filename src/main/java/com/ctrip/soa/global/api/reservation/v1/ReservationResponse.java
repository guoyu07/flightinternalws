/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.reservation.v1;

import com.ctriposs.baiji.rpc.common.HasResponseStatus;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.ctriposs.baiji.rpc.common.types.ResponseStatusType;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlRootElement(name = "ReservationResponse", namespace = "http://soa.ctrip.com/Global/API/Reservation/v1")
@XmlType(name = "ReservationResponse", propOrder = {
    "responseStatus",
    "successResult",
    "tokenNumber",
    "errorResult",
    "reservationResult",
    "bookable"
})
@SuppressWarnings("all")
public class ReservationResponse implements HasResponseStatus {

    private static final long serialVersionUID = 1L;

    public ReservationResponse(
        ResponseStatusType responseStatus, 
        List<SuccessResultItemType> successResult, 
        String tokenNumber, 
        String errorResult, 
        int reservationResult, 
        boolean bookable) {
        this.responseStatus = responseStatus;
        this.successResult = successResult;
        this.tokenNumber = tokenNumber;
        this.errorResult = errorResult;
        this.reservationResult = reservationResult;
        this.bookable = bookable;
    }

    public ReservationResponse() {
    }

    @JsonProperty("ResponseStatus")
    @XmlElement(name = "ResponseStatus")
    private ResponseStatusType responseStatus;

    @JsonProperty("SuccessResult")
    @XmlElement(name = "SuccessResult", nillable = true)
    private List<SuccessResultItemType> successResult;

    @FieldDoc("唯一标识的TokenNumber")
    @JsonProperty("TokenNumber")
    @XmlElement(name = "TokenNumber")
    private String tokenNumber;

    @FieldDoc("订位失败处理结果" +
            "-3 进行中" +
            "-2 未知错误" +
            "-1 底层异常" +
            "1 很抱歉，您的预订未成功，请重试一下。" +
            "2 很抱歉，您选择的舱位已订满，请预订其他舱位。" +
            "3 您填写的证件号码有误，请返回修改。" +
            "4 您填写的出生日期与所选的旅客类别（成人/儿童）不符，请返回修改" +
            "5 很抱歉，此舱位目前无法预订，请选择其他航班。(销售政策有误)" +
            "6 很抱歉，您需要联系客服进行预订。（黑名单）" +
            "7 您的护照将在航班起飞前过期，请更新资料后重试一下。" +
            "8 您已经尝试订位，请勿在30分钟内重复预订" +
            "9 很抱歉，此舱位的价格已调整，请重新选择。")
    @JsonProperty("ErrorResult")
    @XmlElement(name = "ErrorResult", nillable = true)
    private String errorResult;

    @FieldDoc("订位最终状态（1:订位成功，2:订位失败但放过，3:订位失败且拦截，4:未等到结果放过）")
    @JsonProperty("ReservationResult")
    @XmlElement(name = "ReservationResult")
    private int reservationResult;

    @FieldDoc("是否可提交")
    @JsonProperty("Bookable")
    @XmlElement(name = "Bookable")
    private boolean bookable;

    public ResponseStatusType getResponseStatus() {
        return this.responseStatus;
    }

    public void setResponseStatus(ResponseStatusType responseStatus) {
        this.responseStatus = responseStatus;
    }

    public List<SuccessResultItemType> getSuccessResult() {
        return this.successResult;
    }

    public void setSuccessResult(List<SuccessResultItemType> successResult) {
        this.successResult = successResult;
    }

    /**
     * 唯一标识的TokenNumber
     */
    public String getTokenNumber() {
        return this.tokenNumber;
    }

    public void setTokenNumber(String tokenNumber) {
        this.tokenNumber = tokenNumber;
    }

    /**
     * 订位失败处理结果
     *             -3 进行中
     *             -2 未知错误
     *             -1 底层异常
     *             1 很抱歉，您的预订未成功，请重试一下。
     *             2 很抱歉，您选择的舱位已订满，请预订其他舱位。
     *             3 您填写的证件号码有误，请返回修改。
     *             4 您填写的出生日期与所选的旅客类别（成人/儿童）不符，请返回修改
     *             5 很抱歉，此舱位目前无法预订，请选择其他航班。(销售政策有误)
     *             6 很抱歉，您需要联系客服进行预订。（黑名单）
     *             7 您的护照将在航班起飞前过期，请更新资料后重试一下。
     *             8 您已经尝试订位，请勿在30分钟内重复预订
     *             9 很抱歉，此舱位的价格已调整，请重新选择。
     */
    public String getErrorResult() {
        return this.errorResult;
    }

    public void setErrorResult(String errorResult) {
        this.errorResult = errorResult;
    }

    /**
     * 订位最终状态（1:订位成功，2:订位失败但放过，3:订位失败且拦截，4:未等到结果放过）
     */
    public int getReservationResult() {
        return this.reservationResult;
    }

    public void setReservationResult(int reservationResult) {
        this.reservationResult = reservationResult;
    }

    /**
     * 是否可提交
     */
    public boolean getBookable() {
        return this.bookable;
    }

    public void setBookable(boolean bookable) {
        this.bookable = bookable;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final ReservationResponse other = (ReservationResponse)obj;
        return
            Objects.equal(this.responseStatus, other.responseStatus) && 
            Objects.equal(this.successResult, other.successResult) && 
            Objects.equal(this.tokenNumber, other.tokenNumber) && 
            Objects.equal(this.errorResult, other.errorResult) && 
            Objects.equal(this.reservationResult, other.reservationResult) && 
            Objects.equal(this.bookable, other.bookable);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.responseStatus);
        result = 31 * result + Objects.hashCode(this.successResult);
        result = 31 * result + Objects.hashCode(this.tokenNumber);
        result = 31 * result + Objects.hashCode(this.errorResult);
        result = 31 * result + Objects.hashCode(this.reservationResult);
        result = 31 * result + Objects.hashCode(this.bookable);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("responseStatus", responseStatus)
            .add("successResult", successResult)
            .add("tokenNumber", tokenNumber)
            .add("errorResult", errorResult)
            .add("reservationResult", reservationResult)
            .add("bookable", bookable)
            .toString();
    }
}