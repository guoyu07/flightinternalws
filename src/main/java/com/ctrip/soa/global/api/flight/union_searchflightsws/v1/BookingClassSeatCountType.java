/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.flight.union_searchflightsws.v1;

import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "BookingClassSeatCountType", propOrder = {
    "clazz",
    "count"
})
@SuppressWarnings("all")
public class BookingClassSeatCountType  {

    private static final long serialVersionUID = 1L;

    public BookingClassSeatCountType(
        String clazz, 
        String count) {
        this.clazz = clazz;
        this.count = count;
    }

    public BookingClassSeatCountType() {
    }

    @FieldDoc("舱等")
    @JsonProperty("Class")
    @XmlElement(name = "Class")
    private String clazz;

    @FieldDoc("总数")
    @JsonProperty("Count")
    @XmlElement(name = "Count")
    private String count;

    /**
     * 舱等
     */
    public String getClazz() {
        return this.clazz;
    }

    public void setClazz(String clazz) {
        this.clazz = clazz;
    }

    /**
     * 总数
     */
    public String getCount() {
        return this.count;
    }

    public void setCount(String count) {
        this.count = count;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final BookingClassSeatCountType other = (BookingClassSeatCountType)obj;
        return
            Objects.equal(this.clazz, other.clazz) && 
            Objects.equal(this.count, other.count);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.clazz);
        result = 31 * result + Objects.hashCode(this.count);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("clazz", clazz)
            .add("count", count)
            .toString();
    }
}