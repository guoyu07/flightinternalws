/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.flight.union_searchflightsws.v1;

import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ProductSortType", propOrder = {
    "sortingField",
    "direction"
})
@SuppressWarnings("all")
public class ProductSortType  {

    private static final long serialVersionUID = 1L;

    public ProductSortType(
        String sortingField, 
        String direction) {
        this.sortingField = sortingField;
        this.direction = direction;
    }

    public ProductSortType() {
    }

    @FieldDoc("Price,DepartureTime,ArrivalTime,FlightDuration")
    @JsonProperty("SortingField")
    @XmlElement(name = "SortingField")
    private String sortingField;

    @FieldDoc("ASC,DESC")
    @JsonProperty("Direction")
    @XmlElement(name = "Direction")
    private String direction;

    /**
     * Price,DepartureTime,ArrivalTime,FlightDuration
     */
    public String getSortingField() {
        return this.sortingField;
    }

    public void setSortingField(String sortingField) {
        this.sortingField = sortingField;
    }

    /**
     * ASC,DESC
     */
    public String getDirection() {
        return this.direction;
    }

    public void setDirection(String direction) {
        this.direction = direction;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final ProductSortType other = (ProductSortType)obj;
        return
            Objects.equal(this.sortingField, other.sortingField) && 
            Objects.equal(this.direction, other.direction);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.sortingField);
        result = 31 * result + Objects.hashCode(this.direction);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("sortingField", sortingField)
            .add("direction", direction)
            .toString();
    }
}