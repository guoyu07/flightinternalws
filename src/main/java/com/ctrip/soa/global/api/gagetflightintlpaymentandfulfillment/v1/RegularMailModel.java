/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.gagetflightintlpaymentandfulfillment.v1;

import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.math.BigDecimal;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 邮寄类型模型
 */
@DtoDoc("邮寄类型模型")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RegularMailModel", propOrder = {
    "isRegisteredMail",
    "deliveryFee"
})
@SuppressWarnings("all")
public class RegularMailModel  {

    private static final long serialVersionUID = 1L;

    public RegularMailModel(
        boolean isRegisteredMail, 
        BigDecimal deliveryFee) {
        this.isRegisteredMail = isRegisteredMail;
        this.deliveryFee = deliveryFee;
    }

    public RegularMailModel() {
    }

    @FieldDoc("是否需要挂号信")
    @JsonProperty("IsRegisteredMail")
    @XmlElement(name = "IsRegisteredMail")
    private boolean isRegisteredMail;

    @FieldDoc("邮寄费用")
    @JsonProperty("DeliveryFee")
    @XmlElement(name = "DeliveryFee")
    private BigDecimal deliveryFee;

    /**
     * 是否需要挂号信
     */
    public boolean getIsRegisteredMail() {
        return this.isRegisteredMail;
    }

    public void setIsRegisteredMail(boolean isRegisteredMail) {
        this.isRegisteredMail = isRegisteredMail;
    }

    /**
     * 邮寄费用
     */
    public BigDecimal getDeliveryFee() {
        return this.deliveryFee;
    }

    public void setDeliveryFee(BigDecimal deliveryFee) {
        this.deliveryFee = deliveryFee;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final RegularMailModel other = (RegularMailModel)obj;
        return
            Objects.equal(this.isRegisteredMail, other.isRegisteredMail) && 
            Objects.equal(this.deliveryFee, other.deliveryFee);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.isRegisteredMail);
        result = 31 * result + Objects.hashCode(this.deliveryFee);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("isRegisteredMail", isRegisteredMail)
            .add("deliveryFee", deliveryFee)
            .toString();
    }
}