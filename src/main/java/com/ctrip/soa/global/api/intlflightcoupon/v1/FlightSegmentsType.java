/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.intlflightcoupon.v1;

import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FlightSegmentsType", propOrder = {
    "origDestSeqID",
    "cityPair",
    "flightNumber",
    "operatingFlightNumber",
    "bookingClassInfo",
    "takeOffDateTime"
})
@SuppressWarnings("all")
public class FlightSegmentsType  {

    private static final long serialVersionUID = 1L;

    public FlightSegmentsType(
        int origDestSeqID, 
        CityPairType cityPair, 
        String flightNumber, 
        String operatingFlightNumber, 
        String bookingClassInfo, 
        long takeOffDateTime) {
        this.origDestSeqID = origDestSeqID;
        this.cityPair = cityPair;
        this.flightNumber = flightNumber;
        this.operatingFlightNumber = operatingFlightNumber;
        this.bookingClassInfo = bookingClassInfo;
        this.takeOffDateTime = takeOffDateTime;
    }

    public FlightSegmentsType() {
    }

    @FieldDoc("航程ID")
    @JsonProperty("OrigDestSeqID")
    @XmlElement(name = "OrigDestSeqID")
    private int origDestSeqID;

    @FieldDoc("城市对")
    @JsonProperty("CityPair")
    @XmlElement(name = "CityPair")
    private CityPairType cityPair;

    @FieldDoc("去程(返程)的航班号")
    @JsonProperty("FlightNumber")
    @XmlElement(name = "FlightNumber")
    private String flightNumber;

    @FieldDoc("承运航空公司航班号(如果为空则为航班号)")
    @JsonProperty("OperatingFlightNumber")
    @XmlElement(name = "OperatingFlightNumber")
    private String operatingFlightNumber;

    @FieldDoc("子舱位")
    @JsonProperty("BookingClassInfo")
    @XmlElement(name = "BookingClassInfo")
    private String bookingClassInfo;

    @FieldDoc("航班起飞日期")
    @JsonProperty("TakeOffDateTime")
    @XmlElement(name = "TakeOffDateTime")
    private long takeOffDateTime;

    /**
     * 航程ID
     */
    public int getOrigDestSeqID() {
        return this.origDestSeqID;
    }

    public void setOrigDestSeqID(int origDestSeqID) {
        this.origDestSeqID = origDestSeqID;
    }

    /**
     * 城市对
     */
    public CityPairType getCityPair() {
        return this.cityPair;
    }

    public void setCityPair(CityPairType cityPair) {
        this.cityPair = cityPair;
    }

    /**
     * 去程(返程)的航班号
     */
    public String getFlightNumber() {
        return this.flightNumber;
    }

    public void setFlightNumber(String flightNumber) {
        this.flightNumber = flightNumber;
    }

    /**
     * 承运航空公司航班号(如果为空则为航班号)
     */
    public String getOperatingFlightNumber() {
        return this.operatingFlightNumber;
    }

    public void setOperatingFlightNumber(String operatingFlightNumber) {
        this.operatingFlightNumber = operatingFlightNumber;
    }

    /**
     * 子舱位
     */
    public String getBookingClassInfo() {
        return this.bookingClassInfo;
    }

    public void setBookingClassInfo(String bookingClassInfo) {
        this.bookingClassInfo = bookingClassInfo;
    }

    /**
     * 航班起飞日期
     */
    public long getTakeOffDateTime() {
        return this.takeOffDateTime;
    }

    public void setTakeOffDateTime(long takeOffDateTime) {
        this.takeOffDateTime = takeOffDateTime;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final FlightSegmentsType other = (FlightSegmentsType)obj;
        return
            Objects.equal(this.origDestSeqID, other.origDestSeqID) && 
            Objects.equal(this.cityPair, other.cityPair) && 
            Objects.equal(this.flightNumber, other.flightNumber) && 
            Objects.equal(this.operatingFlightNumber, other.operatingFlightNumber) && 
            Objects.equal(this.bookingClassInfo, other.bookingClassInfo) && 
            Objects.equal(this.takeOffDateTime, other.takeOffDateTime);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.origDestSeqID);
        result = 31 * result + Objects.hashCode(this.cityPair);
        result = 31 * result + Objects.hashCode(this.flightNumber);
        result = 31 * result + Objects.hashCode(this.operatingFlightNumber);
        result = 31 * result + Objects.hashCode(this.bookingClassInfo);
        result = 31 * result + Objects.hashCode(this.takeOffDateTime);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("origDestSeqID", origDestSeqID)
            .add("cityPair", cityPair)
            .add("flightNumber", flightNumber)
            .add("operatingFlightNumber", operatingFlightNumber)
            .add("bookingClassInfo", bookingClassInfo)
            .add("takeOffDateTime", takeOffDateTime)
            .toString();
    }
}