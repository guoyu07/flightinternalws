/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.receiveflightvari.v1;

import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.util.Calendar;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 航班信息
 */
@DtoDoc("航班信息")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FlightInfoType", propOrder = {
    "basicInfo",
    "variationInfo",
    "staticInfo",
    "departLocation",
    "arriveLocation",
    "departDate",
    "arriveDate",
    "diversion",
    "updateDateTime"
})
@SuppressWarnings("all")
public class FlightInfoType  {

    private static final long serialVersionUID = 1L;

    public FlightInfoType(
        FlightBasicInfoType basicInfo, 
        FlightVariationInfoType variationInfo, 
        StaticInfoType staticInfo, 
        FlightLocationType departLocation, 
        FlightLocationType arriveLocation, 
        FlightDateTimeInfoType departDate, 
        FlightDateTimeInfoType arriveDate, 
        DiversionType diversion, 
        Calendar updateDateTime) {
        this.basicInfo = basicInfo;
        this.variationInfo = variationInfo;
        this.staticInfo = staticInfo;
        this.departLocation = departLocation;
        this.arriveLocation = arriveLocation;
        this.departDate = departDate;
        this.arriveDate = arriveDate;
        this.diversion = diversion;
        this.updateDateTime = updateDateTime;
    }

    public FlightInfoType() {
    }

    @FieldDoc("基础信息")
    @JsonProperty("BasicInfo")
    @XmlElement(name = "BasicInfo")
    private FlightBasicInfoType basicInfo;

    @FieldDoc("机场辅助信息")
    @JsonProperty("VariationInfo")
    @XmlElement(name = "VariationInfo")
    private FlightVariationInfoType variationInfo;

    @FieldDoc("航班静态信息")
    @JsonProperty("StaticInfo")
    @XmlElement(name = "StaticInfo")
    private StaticInfoType staticInfo;

    @FieldDoc("出发地信息")
    @JsonProperty("DepartLocation")
    @XmlElement(name = "DepartLocation")
    private FlightLocationType departLocation;

    @FieldDoc("到达地信息")
    @JsonProperty("ArriveLocation")
    @XmlElement(name = "ArriveLocation")
    private FlightLocationType arriveLocation;

    @FieldDoc("出发日期信息")
    @JsonProperty("DepartDate")
    @XmlElement(name = "DepartDate")
    private FlightDateTimeInfoType departDate;

    @FieldDoc("到达日期信息")
    @JsonProperty("ArriveDate")
    @XmlElement(name = "ArriveDate")
    private FlightDateTimeInfoType arriveDate;

    @FieldDoc("备降信息")
    @JsonProperty("Diversion")
    @XmlElement(name = "Diversion")
    private DiversionType diversion;

    @FieldDoc("更新时间")
    @JsonProperty("UpdateDateTime")
    @XmlElement(name = "UpdateDateTime")
    private Calendar updateDateTime;

    /**
     * 基础信息
     */
    public FlightBasicInfoType getBasicInfo() {
        return this.basicInfo;
    }

    public void setBasicInfo(FlightBasicInfoType basicInfo) {
        this.basicInfo = basicInfo;
    }

    /**
     * 机场辅助信息
     */
    public FlightVariationInfoType getVariationInfo() {
        return this.variationInfo;
    }

    public void setVariationInfo(FlightVariationInfoType variationInfo) {
        this.variationInfo = variationInfo;
    }

    /**
     * 航班静态信息
     */
    public StaticInfoType getStaticInfo() {
        return this.staticInfo;
    }

    public void setStaticInfo(StaticInfoType staticInfo) {
        this.staticInfo = staticInfo;
    }

    /**
     * 出发地信息
     */
    public FlightLocationType getDepartLocation() {
        return this.departLocation;
    }

    public void setDepartLocation(FlightLocationType departLocation) {
        this.departLocation = departLocation;
    }

    /**
     * 到达地信息
     */
    public FlightLocationType getArriveLocation() {
        return this.arriveLocation;
    }

    public void setArriveLocation(FlightLocationType arriveLocation) {
        this.arriveLocation = arriveLocation;
    }

    /**
     * 出发日期信息
     */
    public FlightDateTimeInfoType getDepartDate() {
        return this.departDate;
    }

    public void setDepartDate(FlightDateTimeInfoType departDate) {
        this.departDate = departDate;
    }

    /**
     * 到达日期信息
     */
    public FlightDateTimeInfoType getArriveDate() {
        return this.arriveDate;
    }

    public void setArriveDate(FlightDateTimeInfoType arriveDate) {
        this.arriveDate = arriveDate;
    }

    /**
     * 备降信息
     */
    public DiversionType getDiversion() {
        return this.diversion;
    }

    public void setDiversion(DiversionType diversion) {
        this.diversion = diversion;
    }

    /**
     * 更新时间
     */
    public Calendar getUpdateDateTime() {
        return this.updateDateTime;
    }

    public void setUpdateDateTime(Calendar updateDateTime) {
        this.updateDateTime = updateDateTime;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final FlightInfoType other = (FlightInfoType)obj;
        return
            Objects.equal(this.basicInfo, other.basicInfo) && 
            Objects.equal(this.variationInfo, other.variationInfo) && 
            Objects.equal(this.staticInfo, other.staticInfo) && 
            Objects.equal(this.departLocation, other.departLocation) && 
            Objects.equal(this.arriveLocation, other.arriveLocation) && 
            Objects.equal(this.departDate, other.departDate) && 
            Objects.equal(this.arriveDate, other.arriveDate) && 
            Objects.equal(this.diversion, other.diversion) && 
            Objects.equal(this.updateDateTime, other.updateDateTime);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.basicInfo);
        result = 31 * result + Objects.hashCode(this.variationInfo);
        result = 31 * result + Objects.hashCode(this.staticInfo);
        result = 31 * result + Objects.hashCode(this.departLocation);
        result = 31 * result + Objects.hashCode(this.arriveLocation);
        result = 31 * result + Objects.hashCode(this.departDate);
        result = 31 * result + Objects.hashCode(this.arriveDate);
        result = 31 * result + Objects.hashCode(this.diversion);
        result = 31 * result + Objects.hashCode(this.updateDateTime);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("basicInfo", basicInfo)
            .add("variationInfo", variationInfo)
            .add("staticInfo", staticInfo)
            .add("departLocation", departLocation)
            .add("arriveLocation", arriveLocation)
            .add("departDate", departDate)
            .add("arriveDate", arriveDate)
            .add("diversion", diversion)
            .add("updateDateTime", updateDateTime)
            .toString();
    }
}