/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.receiveflightvari.v1;

import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 航班静态信息
 */
@DtoDoc("航班静态信息")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "StaticInfoType", propOrder = {
    "planeAge",
    "airModel",
    "distance"
})
@SuppressWarnings("all")
public class StaticInfoType  {

    private static final long serialVersionUID = 1L;

    public StaticInfoType(
        String planeAge, 
        String airModel, 
        int distance) {
        this.planeAge = planeAge;
        this.airModel = airModel;
        this.distance = distance;
    }

    public StaticInfoType() {
    }

    @FieldDoc("机龄")
    @JsonProperty("PlaneAge")
    @XmlElement(name = "PlaneAge")
    private String planeAge;

    @FieldDoc("机型")
    @JsonProperty("AirModel")
    @XmlElement(name = "AirModel")
    private String airModel;

    @FieldDoc("全程公里数")
    @JsonProperty("Distance")
    @XmlElement(name = "Distance")
    private int distance;

    /**
     * 机龄
     */
    public String getPlaneAge() {
        return this.planeAge;
    }

    public void setPlaneAge(String planeAge) {
        this.planeAge = planeAge;
    }

    /**
     * 机型
     */
    public String getAirModel() {
        return this.airModel;
    }

    public void setAirModel(String airModel) {
        this.airModel = airModel;
    }

    /**
     * 全程公里数
     */
    public int getDistance() {
        return this.distance;
    }

    public void setDistance(int distance) {
        this.distance = distance;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final StaticInfoType other = (StaticInfoType)obj;
        return
            Objects.equal(this.planeAge, other.planeAge) && 
            Objects.equal(this.airModel, other.airModel) && 
            Objects.equal(this.distance, other.distance);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.planeAge);
        result = 31 * result + Objects.hashCode(this.airModel);
        result = 31 * result + Objects.hashCode(this.distance);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("planeAge", planeAge)
            .add("airModel", airModel)
            .add("distance", distance)
            .toString();
    }
}