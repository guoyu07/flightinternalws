/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.collectcoupon.v1;

import com.ctrip.soa.global.api.comm.responsehead.v1.ResponseHead;
import com.ctriposs.baiji.rpc.common.HasResponseStatus;
import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.ctriposs.baiji.rpc.common.types.ResponseStatusType;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 优惠券收藏回应
 */
@DtoDoc("优惠券收藏回应")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlRootElement(name = "GaCollectCouponResponse", namespace = "http://soa.ctrip.com/Global/API/CollectCoupon/v1")
@XmlType(name = "GaCollectCouponResponse", propOrder = {
    "responseHead",
    "isSuccessful",
    "resultCode",
    "resultNo",
    "responseStatus"
})
@SuppressWarnings("all")
public class GaCollectCouponResponse implements HasResponseStatus {

    private static final long serialVersionUID = 1L;

    public GaCollectCouponResponse(
        ResponseHead responseHead, 
        boolean isSuccessful, 
        String resultCode, 
        Integer resultNo, 
        ResponseStatusType responseStatus) {
        this.responseHead = responseHead;
        this.isSuccessful = isSuccessful;
        this.resultCode = resultCode;
        this.resultNo = resultNo;
        this.responseStatus = responseStatus;
    }

    public GaCollectCouponResponse() {
    }

    @JsonProperty("ResponseHead")
    @XmlElement(name = "ResponseHead")
    private ResponseHead responseHead;

    @FieldDoc("处理状态")
    @JsonProperty("IsSuccessful")
    @XmlElement(name = "IsSuccessful")
    private boolean isSuccessful;

    @FieldDoc("处理结果 \"Success\":接口调用成功，\"Fail\":接口调用失败，“UnKown”：SOA等异常")
    @JsonProperty("ResultCode")
    @XmlElement(name = "ResultCode")
    private String resultCode;

    @FieldDoc("返回代码" +
"0 成功" +
"1 用户uid[CustomerID]不能为空" +
"2优惠券ID[CouponID]或者优惠券代码[CouponCode]必须输入一个！" +
"3优惠券ID[CouponID]或者优惠券代码[CouponCode]只能输入一个！" +
"4优惠券不存在" +
"5优惠策略不存在" +
"6优惠券已过期" +
"7该用户已经收藏该优惠券（公共券）" +
"8该优惠券已使用或者已失效" +
"9该优惠券已经被其他用户收藏" +
"30 优惠券不存在" +
"22 限时优惠券还未开始生效" +
"23 限时优惠券已经过期" +
"24 该优惠券已经被收藏" +
"90 限时优惠券超过策略过期时间" +
"91 优惠策略还未开始" +
"93 优惠策略已经结束")
    @JsonProperty("ResultNo")
    @XmlElement(name = "ResultNo", nillable = true)
    private Integer resultNo;

    @JsonProperty("ResponseStatus")
    @XmlElement(name = "ResponseStatus")
    private ResponseStatusType responseStatus;

    public ResponseHead getResponseHead() {
        return this.responseHead;
    }

    public void setResponseHead(ResponseHead responseHead) {
        this.responseHead = responseHead;
    }

    /**
     * 处理状态
     */
    public boolean getIsSuccessful() {
        return this.isSuccessful;
    }

    public void setIsSuccessful(boolean isSuccessful) {
        this.isSuccessful = isSuccessful;
    }

    /**
     * 处理结果 "Success":接口调用成功，"Fail":接口调用失败，“UnKown”：SOA等异常
     */
    public String getResultCode() {
        return this.resultCode;
    }

    public void setResultCode(String resultCode) {
        this.resultCode = resultCode;
    }

    /**
     * 返回代码
     * 0 成功
     * 1 用户uid[CustomerID]不能为空
     * 2优惠券ID[CouponID]或者优惠券代码[CouponCode]必须输入一个！
     * 3优惠券ID[CouponID]或者优惠券代码[CouponCode]只能输入一个！
     * 4优惠券不存在
     * 5优惠策略不存在
     * 6优惠券已过期
     * 7该用户已经收藏该优惠券（公共券）
     * 8该优惠券已使用或者已失效
     * 9该优惠券已经被其他用户收藏
     * 30 优惠券不存在
     * 22 限时优惠券还未开始生效
     * 23 限时优惠券已经过期
     * 24 该优惠券已经被收藏
     * 90 限时优惠券超过策略过期时间
     * 91 优惠策略还未开始
     * 93 优惠策略已经结束
     */
    public Integer getResultNo() {
        return this.resultNo;
    }

    public void setResultNo(Integer resultNo) {
        this.resultNo = resultNo;
    }

    public ResponseStatusType getResponseStatus() {
        return this.responseStatus;
    }

    public void setResponseStatus(ResponseStatusType responseStatus) {
        this.responseStatus = responseStatus;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final GaCollectCouponResponse other = (GaCollectCouponResponse)obj;
        return
            Objects.equal(this.responseHead, other.responseHead) && 
            Objects.equal(this.isSuccessful, other.isSuccessful) && 
            Objects.equal(this.resultCode, other.resultCode) && 
            Objects.equal(this.resultNo, other.resultNo) && 
            Objects.equal(this.responseStatus, other.responseStatus);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.responseHead);
        result = 31 * result + Objects.hashCode(this.isSuccessful);
        result = 31 * result + Objects.hashCode(this.resultCode);
        result = 31 * result + Objects.hashCode(this.resultNo);
        result = 31 * result + Objects.hashCode(this.responseStatus);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("responseHead", responseHead)
            .add("isSuccessful", isSuccessful)
            .add("resultCode", resultCode)
            .add("resultNo", resultNo)
            .add("responseStatus", responseStatus)
            .toString();
    }
}