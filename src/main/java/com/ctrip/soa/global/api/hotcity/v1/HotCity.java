/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.hotcity.v1;

import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 热门城市
 */
@DtoDoc("热门城市")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "HotCity", propOrder = {
    "name",
    "cityCode",
    "isShow",
    "isCanSelect",
    "hotCitys",
    "isDomestic",
    "eName"
})
@SuppressWarnings("all")
public class HotCity  {

    private static final long serialVersionUID = 1L;

    public HotCity(
        String name, 
        String cityCode, 
        int isShow, 
        int isCanSelect, 
        List<HotCity> hotCitys, 
        int isDomestic, 
        String eName) {
        this.name = name;
        this.cityCode = cityCode;
        this.isShow = isShow;
        this.isCanSelect = isCanSelect;
        this.hotCitys = hotCitys;
        this.isDomestic = isDomestic;
        this.eName = eName;
    }

    public HotCity() {
    }

    @FieldDoc("展现名称")
    @JsonProperty("Name")
    @XmlElement(name = "Name")
    private String name;

    @FieldDoc("城市三字码")
    @JsonProperty("CityCode")
    @XmlElement(name = "CityCode")
    private String cityCode;

    @FieldDoc("是否展现Name 1 展现 0 不展现")
    @JsonProperty("IsShow")
    @XmlElement(name = "IsShow")
    private int isShow;

    @FieldDoc("是否能选择 1可以 0 不可")
    @JsonProperty("IsCanSelect")
    @XmlElement(name = "IsCanSelect")
    private int isCanSelect;

    @JsonProperty("HotCitys")
    @XmlElement(name = "HotCitys")
    private List<HotCity> hotCitys;

    @FieldDoc("是否是国内 1 是 0 否")
    @JsonProperty("IsDomestic")
    @XmlElement(name = "IsDomestic")
    private int isDomestic;

    @FieldDoc("城市英文名称")
    @JsonProperty("EName")
    @XmlElement(name = "EName")
    private String eName;

    /**
     * 展现名称
     */
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    /**
     * 城市三字码
     */
    public String getCityCode() {
        return this.cityCode;
    }

    public void setCityCode(String cityCode) {
        this.cityCode = cityCode;
    }

    /**
     * 是否展现Name 1 展现 0 不展现
     */
    public int getIsShow() {
        return this.isShow;
    }

    public void setIsShow(int isShow) {
        this.isShow = isShow;
    }

    /**
     * 是否能选择 1可以 0 不可
     */
    public int getIsCanSelect() {
        return this.isCanSelect;
    }

    public void setIsCanSelect(int isCanSelect) {
        this.isCanSelect = isCanSelect;
    }

    public List<HotCity> getHotCitys() {
        return this.hotCitys;
    }

    public void setHotCitys(List<HotCity> hotCitys) {
        this.hotCitys = hotCitys;
    }

    /**
     * 是否是国内 1 是 0 否
     */
    public int getIsDomestic() {
        return this.isDomestic;
    }

    public void setIsDomestic(int isDomestic) {
        this.isDomestic = isDomestic;
    }

    /**
     * 城市英文名称
     */
    public String getEName() {
        return this.eName;
    }

    public void setEName(String eName) {
        this.eName = eName;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final HotCity other = (HotCity)obj;
        return
            Objects.equal(this.name, other.name) && 
            Objects.equal(this.cityCode, other.cityCode) && 
            Objects.equal(this.isShow, other.isShow) && 
            Objects.equal(this.isCanSelect, other.isCanSelect) && 
            Objects.equal(this.hotCitys, other.hotCitys) && 
            Objects.equal(this.isDomestic, other.isDomestic) && 
            Objects.equal(this.eName, other.eName);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.name);
        result = 31 * result + Objects.hashCode(this.cityCode);
        result = 31 * result + Objects.hashCode(this.isShow);
        result = 31 * result + Objects.hashCode(this.isCanSelect);
        result = 31 * result + Objects.hashCode(this.hotCitys);
        result = 31 * result + Objects.hashCode(this.isDomestic);
        result = 31 * result + Objects.hashCode(this.eName);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("name", name)
            .add("cityCode", cityCode)
            .add("isShow", isShow)
            .add("isCanSelect", isCanSelect)
            .add("hotCitys", hotCitys)
            .add("isDomestic", isDomestic)
            .add("eName", eName)
            .toString();
    }
}