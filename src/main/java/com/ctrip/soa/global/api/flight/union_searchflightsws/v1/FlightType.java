/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.flight.union_searchflightsws.v1;

import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.util.Calendar;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementWrapper;
import javax.xml.bind.annotation.XmlType;

@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FlightType", propOrder = {
    "flightID",
    "carrier",
    "flightNumber",
    "operatingCarrier",
    "operatingFlightNumber",
    "departureCity",
    "arrivalCity",
    "departureAirport",
    "arrivalAirport",
    "takeoffDateTime",
    "arrivalDateTime",
    "equipmentCode",
    "stopList",
    "duration",
    "arrivalDays",
    "seatCountList"
})
@SuppressWarnings("all")
public class FlightType  {

    private static final long serialVersionUID = 1L;

    public FlightType(
        String flightID, 
        AirlineInfoType carrier, 
        String flightNumber, 
        AirlineInfoType operatingCarrier, 
        String operatingFlightNumber, 
        CityInfoType departureCity, 
        CityInfoType arrivalCity, 
        AirportInfoType departureAirport, 
        AirportInfoType arrivalAirport, 
        Calendar takeoffDateTime, 
        Calendar arrivalDateTime, 
        String equipmentCode, 
        List<StopType> stopList, 
        double duration, 
        int arrivalDays, 
        List<BookingClassSeatCountType> seatCountList) {
        this.flightID = flightID;
        this.carrier = carrier;
        this.flightNumber = flightNumber;
        this.operatingCarrier = operatingCarrier;
        this.operatingFlightNumber = operatingFlightNumber;
        this.departureCity = departureCity;
        this.arrivalCity = arrivalCity;
        this.departureAirport = departureAirport;
        this.arrivalAirport = arrivalAirport;
        this.takeoffDateTime = takeoffDateTime;
        this.arrivalDateTime = arrivalDateTime;
        this.equipmentCode = equipmentCode;
        this.stopList = stopList;
        this.duration = duration;
        this.arrivalDays = arrivalDays;
        this.seatCountList = seatCountList;
    }

    public FlightType() {
    }

    @FieldDoc("航班索引ID")
    @JsonProperty("FlightID")
    @XmlElement(name = "FlightID")
    private String flightID;

    @FieldDoc("票面航空公司")
    @JsonProperty("Carrier")
    @XmlElement(name = "Carrier")
    private AirlineInfoType carrier;

    @FieldDoc("票面航空公司航班号")
    @JsonProperty("FlightNumber")
    @XmlElement(name = "FlightNumber")
    private String flightNumber;

    @FieldDoc("承运航空公司")
    @JsonProperty("OperatingCarrier")
    @XmlElement(name = "OperatingCarrier")
    private AirlineInfoType operatingCarrier;

    @FieldDoc("承运航空公司航班号")
    @JsonProperty("OperatingFlightNumber")
    @XmlElement(name = "OperatingFlightNumber")
    private String operatingFlightNumber;

    @FieldDoc("出发城市")
    @JsonProperty("DepartureCity")
    @XmlElement(name = "DepartureCity")
    private CityInfoType departureCity;

    @FieldDoc("到达城市")
    @JsonProperty("ArrivalCity")
    @XmlElement(name = "ArrivalCity")
    private CityInfoType arrivalCity;

    @FieldDoc("出发港口")
    @JsonProperty("DepartureAirport")
    @XmlElement(name = "DepartureAirport")
    private AirportInfoType departureAirport;

    @FieldDoc("到达港口")
    @JsonProperty("ArrivalAirport")
    @XmlElement(name = "ArrivalAirport")
    private AirportInfoType arrivalAirport;

    @FieldDoc("出发日期")
    @JsonProperty("TakeoffDateTime")
    @XmlElement(name = "TakeoffDateTime")
    private Calendar takeoffDateTime;

    @FieldDoc("到达日期")
    @JsonProperty("ArrivalDateTime")
    @XmlElement(name = "ArrivalDateTime")
    private Calendar arrivalDateTime;

    @FieldDoc("机型")
    @JsonProperty("EquipmentCode")
    @XmlElement(name = "EquipmentCode")
    private String equipmentCode;

    @FieldDoc("经停信息")
    @JsonProperty("StopList")
    @XmlElement(name = "Stop")
    @XmlElementWrapper(name = "StopList")
    private List<StopType> stopList;

    @FieldDoc("飞行时长")
    @JsonProperty("Duration")
    @XmlElement(name = "Duration")
    private double duration;

    @FieldDoc("到达天数")
    @JsonProperty("ArrivalDays")
    @XmlElement(name = "ArrivalDays")
    private int arrivalDays;

    @FieldDoc("舱位信息")
    @JsonProperty("SeatCountList")
    @XmlElement(name = "SeatCount")
    @XmlElementWrapper(name = "SeatCountList")
    private List<BookingClassSeatCountType> seatCountList;

    /**
     * 航班索引ID
     */
    public String getFlightID() {
        return this.flightID;
    }

    public void setFlightID(String flightID) {
        this.flightID = flightID;
    }

    /**
     * 票面航空公司
     */
    public AirlineInfoType getCarrier() {
        return this.carrier;
    }

    public void setCarrier(AirlineInfoType carrier) {
        this.carrier = carrier;
    }

    /**
     * 票面航空公司航班号
     */
    public String getFlightNumber() {
        return this.flightNumber;
    }

    public void setFlightNumber(String flightNumber) {
        this.flightNumber = flightNumber;
    }

    /**
     * 承运航空公司
     */
    public AirlineInfoType getOperatingCarrier() {
        return this.operatingCarrier;
    }

    public void setOperatingCarrier(AirlineInfoType operatingCarrier) {
        this.operatingCarrier = operatingCarrier;
    }

    /**
     * 承运航空公司航班号
     */
    public String getOperatingFlightNumber() {
        return this.operatingFlightNumber;
    }

    public void setOperatingFlightNumber(String operatingFlightNumber) {
        this.operatingFlightNumber = operatingFlightNumber;
    }

    /**
     * 出发城市
     */
    public CityInfoType getDepartureCity() {
        return this.departureCity;
    }

    public void setDepartureCity(CityInfoType departureCity) {
        this.departureCity = departureCity;
    }

    /**
     * 到达城市
     */
    public CityInfoType getArrivalCity() {
        return this.arrivalCity;
    }

    public void setArrivalCity(CityInfoType arrivalCity) {
        this.arrivalCity = arrivalCity;
    }

    /**
     * 出发港口
     */
    public AirportInfoType getDepartureAirport() {
        return this.departureAirport;
    }

    public void setDepartureAirport(AirportInfoType departureAirport) {
        this.departureAirport = departureAirport;
    }

    /**
     * 到达港口
     */
    public AirportInfoType getArrivalAirport() {
        return this.arrivalAirport;
    }

    public void setArrivalAirport(AirportInfoType arrivalAirport) {
        this.arrivalAirport = arrivalAirport;
    }

    /**
     * 出发日期
     */
    public Calendar getTakeoffDateTime() {
        return this.takeoffDateTime;
    }

    public void setTakeoffDateTime(Calendar takeoffDateTime) {
        this.takeoffDateTime = takeoffDateTime;
    }

    /**
     * 到达日期
     */
    public Calendar getArrivalDateTime() {
        return this.arrivalDateTime;
    }

    public void setArrivalDateTime(Calendar arrivalDateTime) {
        this.arrivalDateTime = arrivalDateTime;
    }

    /**
     * 机型
     */
    public String getEquipmentCode() {
        return this.equipmentCode;
    }

    public void setEquipmentCode(String equipmentCode) {
        this.equipmentCode = equipmentCode;
    }

    /**
     * 经停信息
     */
    public List<StopType> getStopList() {
        return this.stopList;
    }

    public void setStopList(List<StopType> stopList) {
        this.stopList = stopList;
    }

    /**
     * 飞行时长
     */
    public double getDuration() {
        return this.duration;
    }

    public void setDuration(double duration) {
        this.duration = duration;
    }

    /**
     * 到达天数
     */
    public int getArrivalDays() {
        return this.arrivalDays;
    }

    public void setArrivalDays(int arrivalDays) {
        this.arrivalDays = arrivalDays;
    }

    /**
     * 舱位信息
     */
    public List<BookingClassSeatCountType> getSeatCountList() {
        return this.seatCountList;
    }

    public void setSeatCountList(List<BookingClassSeatCountType> seatCountList) {
        this.seatCountList = seatCountList;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final FlightType other = (FlightType)obj;
        return
            Objects.equal(this.flightID, other.flightID) && 
            Objects.equal(this.carrier, other.carrier) && 
            Objects.equal(this.flightNumber, other.flightNumber) && 
            Objects.equal(this.operatingCarrier, other.operatingCarrier) && 
            Objects.equal(this.operatingFlightNumber, other.operatingFlightNumber) && 
            Objects.equal(this.departureCity, other.departureCity) && 
            Objects.equal(this.arrivalCity, other.arrivalCity) && 
            Objects.equal(this.departureAirport, other.departureAirport) && 
            Objects.equal(this.arrivalAirport, other.arrivalAirport) && 
            Objects.equal(this.takeoffDateTime, other.takeoffDateTime) && 
            Objects.equal(this.arrivalDateTime, other.arrivalDateTime) && 
            Objects.equal(this.equipmentCode, other.equipmentCode) && 
            Objects.equal(this.stopList, other.stopList) && 
            Objects.equal(this.duration, other.duration) && 
            Objects.equal(this.arrivalDays, other.arrivalDays) && 
            Objects.equal(this.seatCountList, other.seatCountList);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.flightID);
        result = 31 * result + Objects.hashCode(this.carrier);
        result = 31 * result + Objects.hashCode(this.flightNumber);
        result = 31 * result + Objects.hashCode(this.operatingCarrier);
        result = 31 * result + Objects.hashCode(this.operatingFlightNumber);
        result = 31 * result + Objects.hashCode(this.departureCity);
        result = 31 * result + Objects.hashCode(this.arrivalCity);
        result = 31 * result + Objects.hashCode(this.departureAirport);
        result = 31 * result + Objects.hashCode(this.arrivalAirport);
        result = 31 * result + Objects.hashCode(this.takeoffDateTime);
        result = 31 * result + Objects.hashCode(this.arrivalDateTime);
        result = 31 * result + Objects.hashCode(this.equipmentCode);
        result = 31 * result + Objects.hashCode(this.stopList);
        result = 31 * result + Objects.hashCode(this.duration);
        result = 31 * result + Objects.hashCode(this.arrivalDays);
        result = 31 * result + Objects.hashCode(this.seatCountList);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("flightID", flightID)
            .add("carrier", carrier)
            .add("flightNumber", flightNumber)
            .add("operatingCarrier", operatingCarrier)
            .add("operatingFlightNumber", operatingFlightNumber)
            .add("departureCity", departureCity)
            .add("arrivalCity", arrivalCity)
            .add("departureAirport", departureAirport)
            .add("arrivalAirport", arrivalAirport)
            .add("takeoffDateTime", takeoffDateTime)
            .add("arrivalDateTime", arrivalDateTime)
            .add("equipmentCode", equipmentCode)
            .add("stopList", stopList)
            .add("duration", duration)
            .add("arrivalDays", arrivalDays)
            .add("seatCountList", seatCountList)
            .toString();
    }
}