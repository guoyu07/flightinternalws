/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.garescheduleapply.v1;

import com.ctrip.soa.global.api.comm.responsehead.v1.ResponseHead;
import com.ctrip.soa.global.api.flightcommon.v1.FlightPaymentInfoV2;
import com.ctriposs.baiji.rpc.common.HasResponseStatus;
import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.ctriposs.baiji.rpc.common.types.ResponseStatusType;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 机票改签提交接口返回
 */
@DtoDoc("机票改签提交接口返回")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlRootElement(name = "GaRescheduleApplyResponse", namespace = "http://soa.ctrip.com/Global/API/GaRescheduleApply/v1")
@XmlType(name = "GaRescheduleApplyResponse", propOrder = {
    "responseStatus",
    "responseHead",
    "orderID",
    "rebookID",
    "reschedulePaymentInfo",
    "transactionID",
    "externalNo",
    "resultCode"
})
@SuppressWarnings("all")
public class GaRescheduleApplyResponse implements HasResponseStatus {

    private static final long serialVersionUID = 1L;

    public GaRescheduleApplyResponse(
        ResponseStatusType responseStatus, 
        ResponseHead responseHead, 
        long orderID, 
        long rebookID, 
        FlightPaymentInfoV2 reschedulePaymentInfo, 
        String transactionID, 
        String externalNo, 
        int resultCode) {
        this.responseStatus = responseStatus;
        this.responseHead = responseHead;
        this.orderID = orderID;
        this.rebookID = rebookID;
        this.reschedulePaymentInfo = reschedulePaymentInfo;
        this.transactionID = transactionID;
        this.externalNo = externalNo;
        this.resultCode = resultCode;
    }

    public GaRescheduleApplyResponse() {
    }

    @FieldDoc("SOA2.0返回头部信息")
    @JsonProperty("ResponseStatus")
    @XmlElement(name = "ResponseStatus")
    private ResponseStatusType responseStatus;

    @FieldDoc("IBU返回头部信息")
    @JsonProperty("ResponseHead")
    @XmlElement(name = "ResponseHead")
    private ResponseHead responseHead;

    @FieldDoc("改签订单号")
    @JsonProperty("OrderID")
    @XmlElement(name = "OrderID")
    private long orderID;

    @FieldDoc("改签单ID")
    @JsonProperty("RebookID")
    @XmlElement(name = "RebookID")
    private long rebookID;

    @FieldDoc("改签支付明细")
    @JsonProperty("ReschedulePaymentInfo")
    @XmlElement(name = "ReschedulePaymentInfo")
    private FlightPaymentInfoV2 reschedulePaymentInfo;

    @FieldDoc("支付流水号")
    @JsonProperty("TransactionID")
    @XmlElement(name = "TransactionID")
    private String transactionID;

    @FieldDoc("改签支付ExternalNo")
    @JsonProperty("ExternalNo")
    @XmlElement(name = "ExternalNo")
    private String externalNo;

    @FieldDoc("改签申请提交接口返回Code" +
            "0:成功  可以跳转支付" +
            "1:已提交改签申请 不可跳转支付" +
            "2:满仓 请重新选择航班" +
            "3:申请提交异常，请稍后重试")
    @JsonProperty("ResultCode")
    @XmlElement(name = "ResultCode")
    private int resultCode;

    /**
     * SOA2.0返回头部信息
     */
    public ResponseStatusType getResponseStatus() {
        return this.responseStatus;
    }

    public void setResponseStatus(ResponseStatusType responseStatus) {
        this.responseStatus = responseStatus;
    }

    /**
     * IBU返回头部信息
     */
    public ResponseHead getResponseHead() {
        return this.responseHead;
    }

    public void setResponseHead(ResponseHead responseHead) {
        this.responseHead = responseHead;
    }

    /**
     * 改签订单号
     */
    public long getOrderID() {
        return this.orderID;
    }

    public void setOrderID(long orderID) {
        this.orderID = orderID;
    }

    /**
     * 改签单ID
     */
    public long getRebookID() {
        return this.rebookID;
    }

    public void setRebookID(long rebookID) {
        this.rebookID = rebookID;
    }

    /**
     * 改签支付明细
     */
    public FlightPaymentInfoV2 getReschedulePaymentInfo() {
        return this.reschedulePaymentInfo;
    }

    public void setReschedulePaymentInfo(FlightPaymentInfoV2 reschedulePaymentInfo) {
        this.reschedulePaymentInfo = reschedulePaymentInfo;
    }

    /**
     * 支付流水号
     */
    public String getTransactionID() {
        return this.transactionID;
    }

    public void setTransactionID(String transactionID) {
        this.transactionID = transactionID;
    }

    /**
     * 改签支付ExternalNo
     */
    public String getExternalNo() {
        return this.externalNo;
    }

    public void setExternalNo(String externalNo) {
        this.externalNo = externalNo;
    }

    /**
     * 改签申请提交接口返回Code
     *             0:成功  可以跳转支付
     *             1:已提交改签申请 不可跳转支付
     *             2:满仓 请重新选择航班
     *             3:申请提交异常，请稍后重试
     */
    public int getResultCode() {
        return this.resultCode;
    }

    public void setResultCode(int resultCode) {
        this.resultCode = resultCode;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final GaRescheduleApplyResponse other = (GaRescheduleApplyResponse)obj;
        return
            Objects.equal(this.responseStatus, other.responseStatus) && 
            Objects.equal(this.responseHead, other.responseHead) && 
            Objects.equal(this.orderID, other.orderID) && 
            Objects.equal(this.rebookID, other.rebookID) && 
            Objects.equal(this.reschedulePaymentInfo, other.reschedulePaymentInfo) && 
            Objects.equal(this.transactionID, other.transactionID) && 
            Objects.equal(this.externalNo, other.externalNo) && 
            Objects.equal(this.resultCode, other.resultCode);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.responseStatus);
        result = 31 * result + Objects.hashCode(this.responseHead);
        result = 31 * result + Objects.hashCode(this.orderID);
        result = 31 * result + Objects.hashCode(this.rebookID);
        result = 31 * result + Objects.hashCode(this.reschedulePaymentInfo);
        result = 31 * result + Objects.hashCode(this.transactionID);
        result = 31 * result + Objects.hashCode(this.externalNo);
        result = 31 * result + Objects.hashCode(this.resultCode);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("responseStatus", responseStatus)
            .add("responseHead", responseHead)
            .add("orderID", orderID)
            .add("rebookID", rebookID)
            .add("reschedulePaymentInfo", reschedulePaymentInfo)
            .add("transactionID", transactionID)
            .add("externalNo", externalNo)
            .add("resultCode", resultCode)
            .toString();
    }
}