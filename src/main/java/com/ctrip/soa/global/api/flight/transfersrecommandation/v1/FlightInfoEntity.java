/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.flight.transfersrecommandation.v1;

import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.math.BigDecimal;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 航班信息
 */
@DtoDoc("航班信息")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FlightInfoEntity", propOrder = {
    "flightNo",
    "airline",
    "departure",
    "arrival",
    "nextDay",
    "craftType",
    "stopTimes",
    "isSharedFlight",
    "sharedFlight",
    "mealType",
    "subclass",
    "realSubclass",
    "ticketQuantity",
    "isForControl",
    "isNeedApply",
    "punctualityRate",
    "tax",
    "oilFee",
    "ticketPolicy",
    "price",
    "rate",
    "saleType",
    "productType",
    "isPackageProduct",
    "productAttribute",
    "maxPassengerNum",
    "minPassengerNum"
})
@SuppressWarnings("all")
public class FlightInfoEntity  {

    private static final long serialVersionUID = 1L;

    public FlightInfoEntity(
        String flightNo, 
        String airline, 
        AirportInfo departure, 
        AirportInfo arrival, 
        int nextDay, 
        String craftType, 
        int stopTimes, 
        boolean isSharedFlight, 
        String sharedFlight, 
        String mealType, 
        String subclass, 
        String realSubclass, 
        int ticketQuantity, 
        boolean isForControl, 
        boolean isNeedApply, 
        double punctualityRate, 
        PassengerFee tax, 
        PassengerFee oilFee, 
        TicketPolicy ticketPolicy, 
        BigDecimal price, 
        BigDecimal rate, 
        String saleType, 
        String productType, 
        boolean isPackageProduct, 
        String productAttribute, 
        int maxPassengerNum, 
        int minPassengerNum) {
        this.flightNo = flightNo;
        this.airline = airline;
        this.departure = departure;
        this.arrival = arrival;
        this.nextDay = nextDay;
        this.craftType = craftType;
        this.stopTimes = stopTimes;
        this.isSharedFlight = isSharedFlight;
        this.sharedFlight = sharedFlight;
        this.mealType = mealType;
        this.subclass = subclass;
        this.realSubclass = realSubclass;
        this.ticketQuantity = ticketQuantity;
        this.isForControl = isForControl;
        this.isNeedApply = isNeedApply;
        this.punctualityRate = punctualityRate;
        this.tax = tax;
        this.oilFee = oilFee;
        this.ticketPolicy = ticketPolicy;
        this.price = price;
        this.rate = rate;
        this.saleType = saleType;
        this.productType = productType;
        this.isPackageProduct = isPackageProduct;
        this.productAttribute = productAttribute;
        this.maxPassengerNum = maxPassengerNum;
        this.minPassengerNum = minPassengerNum;
    }

    public FlightInfoEntity() {
    }

    @FieldDoc("航班号")
    @JsonProperty("FlightNo")
    @XmlElement(name = "FlightNo")
    private String flightNo;

    @FieldDoc("航空公司")
    @JsonProperty("Airline")
    @XmlElement(name = "Airline")
    private String airline;

    @FieldDoc("出发")
    @JsonProperty("Departure")
    @XmlElement(name = "Departure")
    private AirportInfo departure;

    @FieldDoc("到达")
    @JsonProperty("Arrival")
    @XmlElement(name = "Arrival")
    private AirportInfo arrival;

    @FieldDoc("隔日航班")
    @JsonProperty("NextDay")
    @XmlElement(name = "NextDay")
    private int nextDay;

    @FieldDoc("机型")
    @JsonProperty("CraftType")
    @XmlElement(name = "CraftType")
    private String craftType;

    @FieldDoc("经停次数")
    @JsonProperty("StopTimes")
    @XmlElement(name = "StopTimes")
    private int stopTimes;

    @FieldDoc("是否为共享航班")
    @JsonProperty("IsSharedFlight")
    @XmlElement(name = "IsSharedFlight")
    private boolean isSharedFlight;

    @FieldDoc("共享航班")
    @JsonProperty("SharedFlight")
    @XmlElement(name = "SharedFlight")
    private String sharedFlight;

    @FieldDoc("餐食")
    @JsonProperty("MealType")
    @XmlElement(name = "MealType")
    private String mealType;

    @FieldDoc("子舱")
    @JsonProperty("Subclass")
    @XmlElement(name = "Subclass")
    private String subclass;

    @FieldDoc("真实的子舱")
    @JsonProperty("RealSubclass")
    @XmlElement(name = "RealSubclass")
    private String realSubclass;

    @FieldDoc("票量")
    @JsonProperty("TicketQuantity")
    @XmlElement(name = "TicketQuantity")
    private int ticketQuantity;

    @FieldDoc("是特K")
    @JsonProperty("IsForControl")
    @XmlElement(name = "IsForControl")
    private boolean isForControl;

    @FieldDoc("是K位")
    @JsonProperty("IsNeedApply")
    @XmlElement(name = "IsNeedApply")
    private boolean isNeedApply;

    @FieldDoc("准点率")
    @JsonProperty("PunctualityRate")
    @XmlElement(name = "PunctualityRate")
    private double punctualityRate;

    @FieldDoc("税")
    @JsonProperty("Tax")
    @XmlElement(name = "Tax")
    private PassengerFee tax;

    @FieldDoc("燃油费")
    @JsonProperty("OilFee")
    @XmlElement(name = "OilFee")
    private PassengerFee oilFee;

    @FieldDoc("航班政策")
    @JsonProperty("TicketPolicy")
    @XmlElement(name = "TicketPolicy")
    private TicketPolicy ticketPolicy;

    @FieldDoc("价格")
    @JsonProperty("Price")
    @XmlElement(name = "Price")
    private BigDecimal price;

    @FieldDoc("税率")
    @JsonProperty("Rate")
    @XmlElement(name = "Rate")
    private BigDecimal rate;

    @FieldDoc("销售类型")
    @JsonProperty("SaleType")
    @XmlElement(name = "SaleType")
    private String saleType;

    @FieldDoc("产品类型")
    @JsonProperty("ProductType")
    @XmlElement(name = "ProductType")
    private String productType;

    @FieldDoc("是否是套餐产品")
    @JsonProperty("IsPackageProduct")
    @XmlElement(name = "IsPackageProduct")
    private boolean isPackageProduct;

    @FieldDoc("运价政策中的ProductTypeName")
    @JsonProperty("ProductAttribute")
    @XmlElement(name = "ProductAttribute")
    private String productAttribute;

    @FieldDoc("最大乘机人人数")
    @JsonProperty("MaxPassengerNum")
    @XmlElement(name = "MaxPassengerNum")
    private int maxPassengerNum;

    @FieldDoc("最小乘机人人数")
    @JsonProperty("MinPassengerNum")
    @XmlElement(name = "MinPassengerNum")
    private int minPassengerNum;

    /**
     * 航班号
     */
    public String getFlightNo() {
        return this.flightNo;
    }

    public void setFlightNo(String flightNo) {
        this.flightNo = flightNo;
    }

    /**
     * 航空公司
     */
    public String getAirline() {
        return this.airline;
    }

    public void setAirline(String airline) {
        this.airline = airline;
    }

    /**
     * 出发
     */
    public AirportInfo getDeparture() {
        return this.departure;
    }

    public void setDeparture(AirportInfo departure) {
        this.departure = departure;
    }

    /**
     * 到达
     */
    public AirportInfo getArrival() {
        return this.arrival;
    }

    public void setArrival(AirportInfo arrival) {
        this.arrival = arrival;
    }

    /**
     * 隔日航班
     */
    public int getNextDay() {
        return this.nextDay;
    }

    public void setNextDay(int nextDay) {
        this.nextDay = nextDay;
    }

    /**
     * 机型
     */
    public String getCraftType() {
        return this.craftType;
    }

    public void setCraftType(String craftType) {
        this.craftType = craftType;
    }

    /**
     * 经停次数
     */
    public int getStopTimes() {
        return this.stopTimes;
    }

    public void setStopTimes(int stopTimes) {
        this.stopTimes = stopTimes;
    }

    /**
     * 是否为共享航班
     */
    public boolean getIsSharedFlight() {
        return this.isSharedFlight;
    }

    public void setIsSharedFlight(boolean isSharedFlight) {
        this.isSharedFlight = isSharedFlight;
    }

    /**
     * 共享航班
     */
    public String getSharedFlight() {
        return this.sharedFlight;
    }

    public void setSharedFlight(String sharedFlight) {
        this.sharedFlight = sharedFlight;
    }

    /**
     * 餐食
     */
    public String getMealType() {
        return this.mealType;
    }

    public void setMealType(String mealType) {
        this.mealType = mealType;
    }

    /**
     * 子舱
     */
    public String getSubclass() {
        return this.subclass;
    }

    public void setSubclass(String subclass) {
        this.subclass = subclass;
    }

    /**
     * 真实的子舱
     */
    public String getRealSubclass() {
        return this.realSubclass;
    }

    public void setRealSubclass(String realSubclass) {
        this.realSubclass = realSubclass;
    }

    /**
     * 票量
     */
    public int getTicketQuantity() {
        return this.ticketQuantity;
    }

    public void setTicketQuantity(int ticketQuantity) {
        this.ticketQuantity = ticketQuantity;
    }

    /**
     * 是特K
     */
    public boolean getIsForControl() {
        return this.isForControl;
    }

    public void setIsForControl(boolean isForControl) {
        this.isForControl = isForControl;
    }

    /**
     * 是K位
     */
    public boolean getIsNeedApply() {
        return this.isNeedApply;
    }

    public void setIsNeedApply(boolean isNeedApply) {
        this.isNeedApply = isNeedApply;
    }

    /**
     * 准点率
     */
    public double getPunctualityRate() {
        return this.punctualityRate;
    }

    public void setPunctualityRate(double punctualityRate) {
        this.punctualityRate = punctualityRate;
    }

    /**
     * 税
     */
    public PassengerFee getTax() {
        return this.tax;
    }

    public void setTax(PassengerFee tax) {
        this.tax = tax;
    }

    /**
     * 燃油费
     */
    public PassengerFee getOilFee() {
        return this.oilFee;
    }

    public void setOilFee(PassengerFee oilFee) {
        this.oilFee = oilFee;
    }

    /**
     * 航班政策
     */
    public TicketPolicy getTicketPolicy() {
        return this.ticketPolicy;
    }

    public void setTicketPolicy(TicketPolicy ticketPolicy) {
        this.ticketPolicy = ticketPolicy;
    }

    /**
     * 价格
     */
    public BigDecimal getPrice() {
        return this.price;
    }

    public void setPrice(BigDecimal price) {
        this.price = price;
    }

    /**
     * 税率
     */
    public BigDecimal getRate() {
        return this.rate;
    }

    public void setRate(BigDecimal rate) {
        this.rate = rate;
    }

    /**
     * 销售类型
     */
    public String getSaleType() {
        return this.saleType;
    }

    public void setSaleType(String saleType) {
        this.saleType = saleType;
    }

    /**
     * 产品类型
     */
    public String getProductType() {
        return this.productType;
    }

    public void setProductType(String productType) {
        this.productType = productType;
    }

    /**
     * 是否是套餐产品
     */
    public boolean getIsPackageProduct() {
        return this.isPackageProduct;
    }

    public void setIsPackageProduct(boolean isPackageProduct) {
        this.isPackageProduct = isPackageProduct;
    }

    /**
     * 运价政策中的ProductTypeName
     */
    public String getProductAttribute() {
        return this.productAttribute;
    }

    public void setProductAttribute(String productAttribute) {
        this.productAttribute = productAttribute;
    }

    /**
     * 最大乘机人人数
     */
    public int getMaxPassengerNum() {
        return this.maxPassengerNum;
    }

    public void setMaxPassengerNum(int maxPassengerNum) {
        this.maxPassengerNum = maxPassengerNum;
    }

    /**
     * 最小乘机人人数
     */
    public int getMinPassengerNum() {
        return this.minPassengerNum;
    }

    public void setMinPassengerNum(int minPassengerNum) {
        this.minPassengerNum = minPassengerNum;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final FlightInfoEntity other = (FlightInfoEntity)obj;
        return
            Objects.equal(this.flightNo, other.flightNo) && 
            Objects.equal(this.airline, other.airline) && 
            Objects.equal(this.departure, other.departure) && 
            Objects.equal(this.arrival, other.arrival) && 
            Objects.equal(this.nextDay, other.nextDay) && 
            Objects.equal(this.craftType, other.craftType) && 
            Objects.equal(this.stopTimes, other.stopTimes) && 
            Objects.equal(this.isSharedFlight, other.isSharedFlight) && 
            Objects.equal(this.sharedFlight, other.sharedFlight) && 
            Objects.equal(this.mealType, other.mealType) && 
            Objects.equal(this.subclass, other.subclass) && 
            Objects.equal(this.realSubclass, other.realSubclass) && 
            Objects.equal(this.ticketQuantity, other.ticketQuantity) && 
            Objects.equal(this.isForControl, other.isForControl) && 
            Objects.equal(this.isNeedApply, other.isNeedApply) && 
            Objects.equal(this.punctualityRate, other.punctualityRate) && 
            Objects.equal(this.tax, other.tax) && 
            Objects.equal(this.oilFee, other.oilFee) && 
            Objects.equal(this.ticketPolicy, other.ticketPolicy) && 
            Objects.equal(this.price, other.price) && 
            Objects.equal(this.rate, other.rate) && 
            Objects.equal(this.saleType, other.saleType) && 
            Objects.equal(this.productType, other.productType) && 
            Objects.equal(this.isPackageProduct, other.isPackageProduct) && 
            Objects.equal(this.productAttribute, other.productAttribute) && 
            Objects.equal(this.maxPassengerNum, other.maxPassengerNum) && 
            Objects.equal(this.minPassengerNum, other.minPassengerNum);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.flightNo);
        result = 31 * result + Objects.hashCode(this.airline);
        result = 31 * result + Objects.hashCode(this.departure);
        result = 31 * result + Objects.hashCode(this.arrival);
        result = 31 * result + Objects.hashCode(this.nextDay);
        result = 31 * result + Objects.hashCode(this.craftType);
        result = 31 * result + Objects.hashCode(this.stopTimes);
        result = 31 * result + Objects.hashCode(this.isSharedFlight);
        result = 31 * result + Objects.hashCode(this.sharedFlight);
        result = 31 * result + Objects.hashCode(this.mealType);
        result = 31 * result + Objects.hashCode(this.subclass);
        result = 31 * result + Objects.hashCode(this.realSubclass);
        result = 31 * result + Objects.hashCode(this.ticketQuantity);
        result = 31 * result + Objects.hashCode(this.isForControl);
        result = 31 * result + Objects.hashCode(this.isNeedApply);
        result = 31 * result + Objects.hashCode(this.punctualityRate);
        result = 31 * result + Objects.hashCode(this.tax);
        result = 31 * result + Objects.hashCode(this.oilFee);
        result = 31 * result + Objects.hashCode(this.ticketPolicy);
        result = 31 * result + Objects.hashCode(this.price);
        result = 31 * result + Objects.hashCode(this.rate);
        result = 31 * result + Objects.hashCode(this.saleType);
        result = 31 * result + Objects.hashCode(this.productType);
        result = 31 * result + Objects.hashCode(this.isPackageProduct);
        result = 31 * result + Objects.hashCode(this.productAttribute);
        result = 31 * result + Objects.hashCode(this.maxPassengerNum);
        result = 31 * result + Objects.hashCode(this.minPassengerNum);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("flightNo", flightNo)
            .add("airline", airline)
            .add("departure", departure)
            .add("arrival", arrival)
            .add("nextDay", nextDay)
            .add("craftType", craftType)
            .add("stopTimes", stopTimes)
            .add("isSharedFlight", isSharedFlight)
            .add("sharedFlight", sharedFlight)
            .add("mealType", mealType)
            .add("subclass", subclass)
            .add("realSubclass", realSubclass)
            .add("ticketQuantity", ticketQuantity)
            .add("isForControl", isForControl)
            .add("isNeedApply", isNeedApply)
            .add("punctualityRate", punctualityRate)
            .add("tax", tax)
            .add("oilFee", oilFee)
            .add("ticketPolicy", ticketPolicy)
            .add("price", price)
            .add("rate", rate)
            .add("saleType", saleType)
            .add("productType", productType)
            .add("isPackageProduct", isPackageProduct)
            .add("productAttribute", productAttribute)
            .add("maxPassengerNum", maxPassengerNum)
            .add("minPassengerNum", minPassengerNum)
            .toString();
    }
}