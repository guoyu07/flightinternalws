/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.postflightorderriskcontrol.v1;

import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 风控返回结果
 */
@DtoDoc("风控返回结果")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RiskControlResults", propOrder = {
    "eventPoint",
    "eventId",
    "riskLevel",
    "riskMessage"
})
@SuppressWarnings("all")
public class RiskControlResults  {

    private static final long serialVersionUID = 1L;

    public RiskControlResults(
        String eventPoint, 
        String eventId, 
        String riskLevel, 
        String riskMessage) {
        this.eventPoint = eventPoint;
        this.eventId = eventId;
        this.riskLevel = riskLevel;
        this.riskMessage = riskMessage;
    }

    public RiskControlResults() {
    }

    @FieldDoc("风控接入点编号")
    @JsonProperty("EventPoint")
    @XmlElement(name = "EventPoint")
    private String eventPoint;

    @FieldDoc("风控的EventID、能唯一标识一笔请求")
    @JsonProperty("EventId")
    @XmlElement(name = "EventId")
    private String eventId;

    @FieldDoc("风险等级")
    @JsonProperty("RiskLevel")
    @XmlElement(name = "RiskLevel")
    private String riskLevel;

    @FieldDoc("风险描述")
    @JsonProperty("RiskMessage")
    @XmlElement(name = "RiskMessage")
    private String riskMessage;

    /**
     * 风控接入点编号
     */
    public String getEventPoint() {
        return this.eventPoint;
    }

    public void setEventPoint(String eventPoint) {
        this.eventPoint = eventPoint;
    }

    /**
     * 风控的EventID、能唯一标识一笔请求
     */
    public String getEventId() {
        return this.eventId;
    }

    public void setEventId(String eventId) {
        this.eventId = eventId;
    }

    /**
     * 风险等级
     */
    public String getRiskLevel() {
        return this.riskLevel;
    }

    public void setRiskLevel(String riskLevel) {
        this.riskLevel = riskLevel;
    }

    /**
     * 风险描述
     */
    public String getRiskMessage() {
        return this.riskMessage;
    }

    public void setRiskMessage(String riskMessage) {
        this.riskMessage = riskMessage;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final RiskControlResults other = (RiskControlResults)obj;
        return
            Objects.equal(this.eventPoint, other.eventPoint) && 
            Objects.equal(this.eventId, other.eventId) && 
            Objects.equal(this.riskLevel, other.riskLevel) && 
            Objects.equal(this.riskMessage, other.riskMessage);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.eventPoint);
        result = 31 * result + Objects.hashCode(this.eventId);
        result = 31 * result + Objects.hashCode(this.riskLevel);
        result = 31 * result + Objects.hashCode(this.riskMessage);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("eventPoint", eventPoint)
            .add("eventId", eventId)
            .add("riskLevel", riskLevel)
            .add("riskMessage", riskMessage)
            .toString();
    }
}