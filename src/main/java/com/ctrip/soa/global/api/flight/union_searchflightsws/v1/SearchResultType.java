/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.flight.union_searchflightsws.v1;

import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementWrapper;
import javax.xml.bind.annotation.XmlType;

@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SearchResultType", propOrder = {
    "flightProductGroupList",
    "priceUnitList",
    "flightList",
    "fareList",
    "textRemarkList",
    "partitionSearchTokenList"
})
@SuppressWarnings("all")
public class SearchResultType  {

    private static final long serialVersionUID = 1L;

    public SearchResultType(
        List<FlightProductGroupType> flightProductGroupList, 
        List<PriceUnitType> priceUnitList, 
        List<FlightType> flightList, 
        List<FareType> fareList, 
        List<TextRemarkType> textRemarkList, 
        List<String> partitionSearchTokenList) {
        this.flightProductGroupList = flightProductGroupList;
        this.priceUnitList = priceUnitList;
        this.flightList = flightList;
        this.fareList = fareList;
        this.textRemarkList = textRemarkList;
        this.partitionSearchTokenList = partitionSearchTokenList;
    }

    public SearchResultType() {
    }

    @FieldDoc("完整航班拼接信息，包括航班及价格")
    @JsonProperty("FlightProductGroupList")
    @XmlElement(name = "FlightProductGroup")
    @XmlElementWrapper(name = "FlightProductGroupList")
    private List<FlightProductGroupType> flightProductGroupList;

    @JsonProperty("PriceUnitList")
    @XmlElement(name = "PriceUnit")
    @XmlElementWrapper(name = "PriceUnitList")
    private List<PriceUnitType> priceUnitList;

    @JsonProperty("FlightList")
    @XmlElement(name = "Flight")
    @XmlElementWrapper(name = "FlightList")
    private List<FlightType> flightList;

    @JsonProperty("FareList")
    @XmlElement(name = "Fare")
    @XmlElementWrapper(name = "FareList")
    private List<FareType> fareList;

    @JsonProperty("TextRemarkList")
    @XmlElement(name = "TextRemark")
    @XmlElementWrapper(name = "TextRemarkList")
    private List<TextRemarkType> textRemarkList;

    @JsonProperty("PartitionSearchTokenList")
    @XmlElement(name = "PartitionSearchToken")
    @XmlElementWrapper(name = "PartitionSearchTokenList")
    private List<String> partitionSearchTokenList;

    /**
     * 完整航班拼接信息，包括航班及价格
     */
    public List<FlightProductGroupType> getFlightProductGroupList() {
        return this.flightProductGroupList;
    }

    public void setFlightProductGroupList(List<FlightProductGroupType> flightProductGroupList) {
        this.flightProductGroupList = flightProductGroupList;
    }

    public List<PriceUnitType> getPriceUnitList() {
        return this.priceUnitList;
    }

    public void setPriceUnitList(List<PriceUnitType> priceUnitList) {
        this.priceUnitList = priceUnitList;
    }

    public List<FlightType> getFlightList() {
        return this.flightList;
    }

    public void setFlightList(List<FlightType> flightList) {
        this.flightList = flightList;
    }

    public List<FareType> getFareList() {
        return this.fareList;
    }

    public void setFareList(List<FareType> fareList) {
        this.fareList = fareList;
    }

    public List<TextRemarkType> getTextRemarkList() {
        return this.textRemarkList;
    }

    public void setTextRemarkList(List<TextRemarkType> textRemarkList) {
        this.textRemarkList = textRemarkList;
    }

    public List<String> getPartitionSearchTokenList() {
        return this.partitionSearchTokenList;
    }

    public void setPartitionSearchTokenList(List<String> partitionSearchTokenList) {
        this.partitionSearchTokenList = partitionSearchTokenList;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final SearchResultType other = (SearchResultType)obj;
        return
            Objects.equal(this.flightProductGroupList, other.flightProductGroupList) && 
            Objects.equal(this.priceUnitList, other.priceUnitList) && 
            Objects.equal(this.flightList, other.flightList) && 
            Objects.equal(this.fareList, other.fareList) && 
            Objects.equal(this.textRemarkList, other.textRemarkList) && 
            Objects.equal(this.partitionSearchTokenList, other.partitionSearchTokenList);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.flightProductGroupList);
        result = 31 * result + Objects.hashCode(this.priceUnitList);
        result = 31 * result + Objects.hashCode(this.flightList);
        result = 31 * result + Objects.hashCode(this.fareList);
        result = 31 * result + Objects.hashCode(this.textRemarkList);
        result = 31 * result + Objects.hashCode(this.partitionSearchTokenList);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("flightProductGroupList", flightProductGroupList)
            .add("priceUnitList", priceUnitList)
            .add("flightList", flightList)
            .add("fareList", fareList)
            .add("textRemarkList", textRemarkList)
            .add("partitionSearchTokenList", partitionSearchTokenList)
            .toString();
    }
}