/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.flight.transfersrecommandation.v1;

import com.ctrip.soa.global.api.comm.head.v1.Head;
import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.util.Calendar;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 中转推荐请求
 */
@DtoDoc("中转推荐请求")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlRootElement(name = "TransitRecommandationRequest", namespace = "http://soa.ctrip.com/Global/API/Flight/TransfersRecommandation/v1")
@XmlType(name = "TransitRecommandationRequest", propOrder = {
    "head",
    "flightNoList",
    "departureCityCode",
    "arrivalCityCode",
    "departureDate",
    "passengerCount",
    "productType",
    "flightWay",
    "sendTicketCityID",
    "top"
})
@SuppressWarnings("all")
public class TransitRecommandationRequest  {

    private static final long serialVersionUID = 1L;

    public TransitRecommandationRequest(
        Head head, 
        List<FlightNoEntity> flightNoList, 
        String departureCityCode, 
        String arrivalCityCode, 
        Calendar departureDate, 
        int passengerCount, 
        ProductType productType, 
        String flightWay, 
        int sendTicketCityID, 
        int top) {
        this.head = head;
        this.flightNoList = flightNoList;
        this.departureCityCode = departureCityCode;
        this.arrivalCityCode = arrivalCityCode;
        this.departureDate = departureDate;
        this.passengerCount = passengerCount;
        this.productType = productType;
        this.flightWay = flightWay;
        this.sendTicketCityID = sendTicketCityID;
        this.top = top;
    }

    public TransitRecommandationRequest() {
    }

    @FieldDoc("请求头")
    @JsonProperty("Head")
    @XmlElement(name = "Head")
    private Head head;

    @FieldDoc("航班号列表")
    @JsonProperty("FlightNoList")
    @XmlElement(name = "FlightNoList")
    private List<FlightNoEntity> flightNoList;

    @FieldDoc("出发城市码")
    @JsonProperty("DepartureCityCode")
    @XmlElement(name = "DepartureCityCode")
    private String departureCityCode;

    @FieldDoc("到达城市码")
    @JsonProperty("ArrivalCityCode")
    @XmlElement(name = "ArrivalCityCode")
    private String arrivalCityCode;

    @FieldDoc("出发日期")
    @JsonProperty("DepartureDate")
    @XmlElement(name = "DepartureDate")
    private Calendar departureDate;

    @FieldDoc("乘客人数")
    @JsonProperty("PassengerCount")
    @XmlElement(name = "PassengerCount")
    private int passengerCount;

    @FieldDoc("产品类型")
    @JsonProperty("ProductType")
    @XmlElement(name = "ProductType")
    private ProductType productType;

    @FieldDoc("单程S，往返D，联程M")
    @JsonProperty("FlightWay")
    @XmlElement(name = "FlightWay")
    private String flightWay;

    @FieldDoc("送票城市ID")
    @JsonProperty("SendTicketCityID")
    @XmlElement(name = "SendTicketCityID")
    private int sendTicketCityID;

    @FieldDoc("返回行数")
    @JsonProperty("Top")
    @XmlElement(name = "Top")
    private int top;

    /**
     * 请求头
     */
    public Head getHead() {
        return this.head;
    }

    public void setHead(Head head) {
        this.head = head;
    }

    /**
     * 航班号列表
     */
    public List<FlightNoEntity> getFlightNoList() {
        return this.flightNoList;
    }

    public void setFlightNoList(List<FlightNoEntity> flightNoList) {
        this.flightNoList = flightNoList;
    }

    /**
     * 出发城市码
     */
    public String getDepartureCityCode() {
        return this.departureCityCode;
    }

    public void setDepartureCityCode(String departureCityCode) {
        this.departureCityCode = departureCityCode;
    }

    /**
     * 到达城市码
     */
    public String getArrivalCityCode() {
        return this.arrivalCityCode;
    }

    public void setArrivalCityCode(String arrivalCityCode) {
        this.arrivalCityCode = arrivalCityCode;
    }

    /**
     * 出发日期
     */
    public Calendar getDepartureDate() {
        return this.departureDate;
    }

    public void setDepartureDate(Calendar departureDate) {
        this.departureDate = departureDate;
    }

    /**
     * 乘客人数
     */
    public int getPassengerCount() {
        return this.passengerCount;
    }

    public void setPassengerCount(int passengerCount) {
        this.passengerCount = passengerCount;
    }

    /**
     * 产品类型
     */
    public ProductType getProductType() {
        return this.productType;
    }

    public void setProductType(ProductType productType) {
        this.productType = productType;
    }

    /**
     * 单程S，往返D，联程M
     */
    public String getFlightWay() {
        return this.flightWay;
    }

    public void setFlightWay(String flightWay) {
        this.flightWay = flightWay;
    }

    /**
     * 送票城市ID
     */
    public int getSendTicketCityID() {
        return this.sendTicketCityID;
    }

    public void setSendTicketCityID(int sendTicketCityID) {
        this.sendTicketCityID = sendTicketCityID;
    }

    /**
     * 返回行数
     */
    public int getTop() {
        return this.top;
    }

    public void setTop(int top) {
        this.top = top;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final TransitRecommandationRequest other = (TransitRecommandationRequest)obj;
        return
            Objects.equal(this.head, other.head) && 
            Objects.equal(this.flightNoList, other.flightNoList) && 
            Objects.equal(this.departureCityCode, other.departureCityCode) && 
            Objects.equal(this.arrivalCityCode, other.arrivalCityCode) && 
            Objects.equal(this.departureDate, other.departureDate) && 
            Objects.equal(this.passengerCount, other.passengerCount) && 
            Objects.equal(this.productType, other.productType) && 
            Objects.equal(this.flightWay, other.flightWay) && 
            Objects.equal(this.sendTicketCityID, other.sendTicketCityID) && 
            Objects.equal(this.top, other.top);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.head);
        result = 31 * result + Objects.hashCode(this.flightNoList);
        result = 31 * result + Objects.hashCode(this.departureCityCode);
        result = 31 * result + Objects.hashCode(this.arrivalCityCode);
        result = 31 * result + Objects.hashCode(this.departureDate);
        result = 31 * result + Objects.hashCode(this.passengerCount);
        result = 31 * result + Objects.hashCode(this.productType);
        result = 31 * result + Objects.hashCode(this.flightWay);
        result = 31 * result + Objects.hashCode(this.sendTicketCityID);
        result = 31 * result + Objects.hashCode(this.top);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("head", head)
            .add("flightNoList", flightNoList)
            .add("departureCityCode", departureCityCode)
            .add("arrivalCityCode", arrivalCityCode)
            .add("departureDate", departureDate)
            .add("passengerCount", passengerCount)
            .add("productType", productType)
            .add("flightWay", flightWay)
            .add("sendTicketCityID", sendTicketCityID)
            .add("top", top)
            .toString();
    }
}