/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.orderdetailsearch.v1;

import com.ctrip.soa.global.api.flightcommon.v1.GaFlightPaymentInfo;
import com.ctrip.soa.global.api.flightcommon.v1.GaFlightWayType;
import com.ctrip.soa.global.api.flightcommon.v1.GaPassengerInfo;
import com.ctrip.soa.global.api.flightcommon.v1.GaPassengerType;
import com.ctrip.soa.global.api.flightcommon.v1.PayType;
import com.ctrip.soa.global.api.flightcommon.v1.PolicyInfo;
import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.math.BigDecimal;
import java.util.Calendar;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 航程信息
 */
@DtoDoc("航程信息")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "OrderDetailInfo", propOrder = {
    "uid",
    "orderID",
    "tempOrderID",
    "associateOrderID",
    "payMainOrderID",
    "bookingChannel",
    "statusCode",
    "preOrderProsessList",
    "orderProsess",
    "pendingOrderProsessList",
    "statusDes",
    "actualStatusDes",
    "orderDate",
    "adjustDay1",
    "adjustDay2",
    "serverFrom",
    "engineType",
    "payMethod",
    "payMethodStr",
    "currencyType",
    "cMoenyAmount",
    "orderRemark",
    "specialRemark",
    "flightWay",
    "flightWayName",
    "xProductDetail",
    "airportLoungeEntity",
    "flightInfoList",
    "policyInfoList",
    "priceInfo",
    "deliverInfo",
    "passengerInfoList",
    "contactInfo",
    "baggageInfoList",
    "relevanceOrderList",
    "insurance",
    "paymentInfo",
    "isCancel",
    "isPartial",
    "isSubOrder",
    "validDate",
    "externalNo",
    "actualOrderStatus",
    "editPayTypeExpiryTime",
    "editPayTypeExpiryTimeLong",
    "editPayTypeLimitSecond",
    "specialPriceType",
    "reSubmitExpiryTime",
    "reSubmitExpiryTimeLong",
    "serverTime",
    "serverTimeLong",
    "refundAble",
    "refundRecordList",
    "xRefundRecordList",
    "flightOrderClass",
    "hasFlightChange",
    "changeOrderList",
    "relatedOrderInfoList",
    "orderBookSeatList",
    "deleteAble",
    "orderHistoryList",
    "tripRecordList",
    "relateRouteType",
    "orderSplitType",
    "orderType",
    "showRebRefNotice",
    "showItineraryEmail",
    "relationOrderIDList",
    "reBookingInfoList",
    "isOrderFromIbuSite",
    "latestDraftTime",
    "rescheduleAble",
    "unRescheduleAbleReason",
    "needPayRebookOrder",
    "orderCouponList"
})
@SuppressWarnings("all")
public class OrderDetailInfo  {

    private static final long serialVersionUID = 1L;

    public OrderDetailInfo(
        String uid, 
        long orderID, 
        long tempOrderID, 
        List<Long> associateOrderID, 
        long payMainOrderID, 
        String bookingChannel, 
        String statusCode, 
        List<String> preOrderProsessList, 
        String orderProsess, 
        List<String> pendingOrderProsessList, 
        String statusDes, 
        String actualStatusDes, 
        long orderDate, 
        int adjustDay1, 
        int adjustDay2, 
        String serverFrom, 
        String engineType, 
        PayType payMethod, 
        String payMethodStr, 
        String currencyType, 
        BigDecimal cMoenyAmount, 
        String orderRemark, 
        String specialRemark, 
        GaFlightWayType flightWay, 
        String flightWayName, 
        XProductDetail xProductDetail, 
        List<AirportLoungeEntity> airportLoungeEntity, 
        List<FlightOrigDestInfo> flightInfoList, 
        List<PolicyInfo> policyInfoList, 
        DetailPriceInfo priceInfo, 
        DeliverInfo deliverInfo, 
        List<GaPassengerInfo> passengerInfoList, 
        ContactInfo contactInfo, 
        List<BaggageInfo> baggageInfoList, 
        List<String> relevanceOrderList, 
        OrderInsurance insurance, 
        GaFlightPaymentInfo paymentInfo, 
        boolean isCancel, 
        boolean isPartial, 
        boolean isSubOrder, 
        String validDate, 
        String externalNo, 
        String actualOrderStatus, 
        Calendar editPayTypeExpiryTime, 
        long editPayTypeExpiryTimeLong, 
        int editPayTypeLimitSecond, 
        String specialPriceType, 
        Calendar reSubmitExpiryTime, 
        long reSubmitExpiryTimeLong, 
        Calendar serverTime, 
        long serverTimeLong, 
        boolean refundAble, 
        List<RefundRecord> refundRecordList, 
        List<XRefundRecord> xRefundRecordList, 
        String flightOrderClass, 
        boolean hasFlightChange, 
        List<ChangeOrder> changeOrderList, 
        List<RelatedOrderInfoEntity> relatedOrderInfoList, 
        List<OrderBookSeat> orderBookSeatList, 
        boolean deleteAble, 
        List<OrderHistory> orderHistoryList, 
        List<TripRecord> tripRecordList, 
        int relateRouteType, 
        int orderSplitType, 
        GaPassengerType orderType, 
        boolean showRebRefNotice, 
        boolean showItineraryEmail, 
        List<Long> relationOrderIDList, 
        List<RebookingInfo> reBookingInfoList, 
        boolean isOrderFromIbuSite, 
        LatestDraftTimeEntity latestDraftTime, 
        boolean rescheduleAble, 
        String unRescheduleAbleReason, 
        boolean needPayRebookOrder, 
        List<OrderCouponInfo> orderCouponList) {
        this.uid = uid;
        this.orderID = orderID;
        this.tempOrderID = tempOrderID;
        this.associateOrderID = associateOrderID;
        this.payMainOrderID = payMainOrderID;
        this.bookingChannel = bookingChannel;
        this.statusCode = statusCode;
        this.preOrderProsessList = preOrderProsessList;
        this.orderProsess = orderProsess;
        this.pendingOrderProsessList = pendingOrderProsessList;
        this.statusDes = statusDes;
        this.actualStatusDes = actualStatusDes;
        this.orderDate = orderDate;
        this.adjustDay1 = adjustDay1;
        this.adjustDay2 = adjustDay2;
        this.serverFrom = serverFrom;
        this.engineType = engineType;
        this.payMethod = payMethod;
        this.payMethodStr = payMethodStr;
        this.currencyType = currencyType;
        this.cMoenyAmount = cMoenyAmount;
        this.orderRemark = orderRemark;
        this.specialRemark = specialRemark;
        this.flightWay = flightWay;
        this.flightWayName = flightWayName;
        this.xProductDetail = xProductDetail;
        this.airportLoungeEntity = airportLoungeEntity;
        this.flightInfoList = flightInfoList;
        this.policyInfoList = policyInfoList;
        this.priceInfo = priceInfo;
        this.deliverInfo = deliverInfo;
        this.passengerInfoList = passengerInfoList;
        this.contactInfo = contactInfo;
        this.baggageInfoList = baggageInfoList;
        this.relevanceOrderList = relevanceOrderList;
        this.insurance = insurance;
        this.paymentInfo = paymentInfo;
        this.isCancel = isCancel;
        this.isPartial = isPartial;
        this.isSubOrder = isSubOrder;
        this.validDate = validDate;
        this.externalNo = externalNo;
        this.actualOrderStatus = actualOrderStatus;
        this.editPayTypeExpiryTime = editPayTypeExpiryTime;
        this.editPayTypeExpiryTimeLong = editPayTypeExpiryTimeLong;
        this.editPayTypeLimitSecond = editPayTypeLimitSecond;
        this.specialPriceType = specialPriceType;
        this.reSubmitExpiryTime = reSubmitExpiryTime;
        this.reSubmitExpiryTimeLong = reSubmitExpiryTimeLong;
        this.serverTime = serverTime;
        this.serverTimeLong = serverTimeLong;
        this.refundAble = refundAble;
        this.refundRecordList = refundRecordList;
        this.xRefundRecordList = xRefundRecordList;
        this.flightOrderClass = flightOrderClass;
        this.hasFlightChange = hasFlightChange;
        this.changeOrderList = changeOrderList;
        this.relatedOrderInfoList = relatedOrderInfoList;
        this.orderBookSeatList = orderBookSeatList;
        this.deleteAble = deleteAble;
        this.orderHistoryList = orderHistoryList;
        this.tripRecordList = tripRecordList;
        this.relateRouteType = relateRouteType;
        this.orderSplitType = orderSplitType;
        this.orderType = orderType;
        this.showRebRefNotice = showRebRefNotice;
        this.showItineraryEmail = showItineraryEmail;
        this.relationOrderIDList = relationOrderIDList;
        this.reBookingInfoList = reBookingInfoList;
        this.isOrderFromIbuSite = isOrderFromIbuSite;
        this.latestDraftTime = latestDraftTime;
        this.rescheduleAble = rescheduleAble;
        this.unRescheduleAbleReason = unRescheduleAbleReason;
        this.needPayRebookOrder = needPayRebookOrder;
        this.orderCouponList = orderCouponList;
    }

    public OrderDetailInfo() {
    }

    @FieldDoc("用户UID")
    @JsonProperty("UID")
    @XmlElement(name = "UID")
    private String uid;

    @FieldDoc("订单号")
    @JsonProperty("OrderID")
    @XmlElement(name = "OrderID")
    private long orderID;

    @FieldDoc("临时订单号")
    @JsonProperty("TempOrderID")
    @XmlElement(name = "TempOrderID")
    private long tempOrderID;

    @FieldDoc("订单号")
    @JsonProperty("AssociateOrderID")
    @XmlElement(name = "AssociateOrderID")
    private List<Long> associateOrderID;

    @FieldDoc("主订单号")
    @JsonProperty("PayMainOrderID")
    @XmlElement(name = "PayMainOrderID")
    private long payMainOrderID;

    @FieldDoc("预定渠道(GDS-WS等)")
    @JsonProperty("BookingChannel")
    @XmlElement(name = "BookingChannel")
    private String bookingChannel;

    @FieldDoc("订单状态" +
            "U-未提交（已创建未提交），" +
            "W-已提交未处理，" +
            "P-处理中（已出票），" +
            "J-出票中，" +
            "G-已支付出票中，" +
            "H-已扣款出票中，" +
            "R-全部退票（已退票），" +
            "C-已取消，" +
            "T-部分退票，" +
            "S-已成交，" +
            "E-待支付，" +
            "F-待扣款，" +
            "Z-未出行，" +
            "D-取消申请中，" +
            "A-所有")
    @JsonProperty("StatusCode")
    @XmlElement(name = "StatusCode")
    private String statusCode;

    @FieldDoc("前续订单操作流程")
    @JsonProperty("PreOrderProsessList")
    @XmlElement(name = "PreOrderProsessList")
    private List<String> preOrderProsessList;

    @FieldDoc("当前订单操作流程")
    @JsonProperty("OrderProsess")
    @XmlElement(name = "OrderProsess")
    private String orderProsess;

    @FieldDoc("后续订单操作流程")
    @JsonProperty("PendingOrderProsessList")
    @XmlElement(name = "PendingOrderProsessList")
    private List<String> pendingOrderProsessList;

    @FieldDoc("订单状态多语言描述")
    @JsonProperty("StatusDes")
    @XmlElement(name = "StatusDes")
    private String statusDes;

    @FieldDoc("实际订单状态多语言描述")
    @JsonProperty("ActualStatusDes")
    @XmlElement(name = "ActualStatusDes")
    private String actualStatusDes;

    @FieldDoc("创建订单时间")
    @JsonProperty("OrderDate")
    @XmlElement(name = "OrderDate")
    private long orderDate;

    @FieldDoc("停留天数")
    @JsonProperty("AdjustDay1")
    @XmlElement(name = "AdjustDay1")
    private int adjustDay1;

    @FieldDoc("有效期")
    @JsonProperty("AdjustDay2")
    @XmlElement(name = "AdjustDay2")
    private int adjustDay2;

    @FieldDoc("订单来源")
    @JsonProperty("ServerFrom")
    @XmlElement(name = "ServerFrom")
    private String serverFrom;

    @FieldDoc("产品引擎")
    @JsonProperty("EngineType")
    @XmlElement(name = "EngineType")
    private String engineType;

    @FieldDoc("支付方式")
    @JsonProperty("PayMethod")
    @XmlElement(name = "PayMethod")
    private PayType payMethod;

    @FieldDoc("支付方式")
    @JsonProperty("PayMethodStr")
    @XmlElement(name = "PayMethodStr")
    private String payMethodStr;

    @FieldDoc("币种类型")
    @JsonProperty("CurrencyType")
    @XmlElement(name = "CurrencyType")
    private String currencyType;

    @FieldDoc("优惠券金额")
    @JsonProperty("CMoenyAmount")
    @XmlElement(name = "CMoenyAmount")
    private BigDecimal cMoenyAmount;

    @FieldDoc("订单备注")
    @JsonProperty("OrderRemark")
    @XmlElement(name = "OrderRemark")
    private String orderRemark;

    @FieldDoc("特殊备注")
    @JsonProperty("SpecialRemark")
    @XmlElement(name = "SpecialRemark")
    private String specialRemark;

    @FieldDoc("航程类型")
    @JsonProperty("FlightWay")
    @XmlElement(name = "FlightWay")
    private GaFlightWayType flightWay;

    @FieldDoc("航程类型多语言名称")
    @JsonProperty("FlightWayName")
    @XmlElement(name = "FlightWayName")
    private String flightWayName;

    @FieldDoc("X产品信息")
    @JsonProperty("XProductDetail")
    @XmlElement(name = "XProductDetail")
    private XProductDetail xProductDetail;

    @FieldDoc("休息室信息(请使用XProductDetail节点下的AirportLoungeInfo休息室信息)")
    @JsonProperty("AirportLoungeEntity")
    @XmlElement(name = "AirportLoungeEntity")
    private List<AirportLoungeEntity> airportLoungeEntity;

    @FieldDoc("航线信息")
    @JsonProperty("FlightInfoList")
    @XmlElement(name = "FlightInfoList")
    private List<FlightOrigDestInfo> flightInfoList;

    @FieldDoc("退改签信息")
    @JsonProperty("PolicyInfoList")
    @XmlElement(name = "PolicyInfoList")
    private List<PolicyInfo> policyInfoList;

    @FieldDoc("价格信息")
    @JsonProperty("PriceInfo")
    @XmlElement(name = "PriceInfo")
    private DetailPriceInfo priceInfo;

    @FieldDoc("配送信息")
    @JsonProperty("DeliverInfo")
    @XmlElement(name = "DeliverInfo")
    private DeliverInfo deliverInfo;

    @FieldDoc("乘机人信息")
    @JsonProperty("PassengerInfoList")
    @XmlElement(name = "PassengerInfoList")
    private List<GaPassengerInfo> passengerInfoList;

    @FieldDoc("联系人信息")
    @JsonProperty("ContactInfo")
    @XmlElement(name = "ContactInfo")
    private ContactInfo contactInfo;

    @FieldDoc("行李额")
    @JsonProperty("BaggageInfoList")
    @XmlElement(name = "BaggageInfoList")
    private List<BaggageInfo> baggageInfoList;

    @FieldDoc("关联订单")
    @JsonProperty("RelevanceOrderList")
    @XmlElement(name = "RelevanceOrderList")
    private List<String> relevanceOrderList;

    @FieldDoc("保险信息")
    @JsonProperty("Insurance")
    @XmlElement(name = "Insurance")
    private OrderInsurance insurance;

    @FieldDoc("支付信息")
    @JsonProperty("PaymentInfo")
    @XmlElement(name = "PaymentInfo")
    private GaFlightPaymentInfo paymentInfo;

    @FieldDoc("是否可取消")
    @JsonProperty("IsCancel")
    @XmlElement(name = "IsCancel")
    private boolean isCancel;

    @FieldDoc("是否包含弃程 Y/N(Y 包含， N 不包含)")
    @JsonProperty("IsPartial")
    @XmlElement(name = "IsPartial")
    private boolean isPartial;

    @FieldDoc("是否子订单")
    @JsonProperty("IsSubOrder")
    @XmlElement(name = "IsSubOrder")
    private boolean isSubOrder;

    @FieldDoc("验证天数")
    @JsonProperty("ValidDate")
    @XmlElement(name = "ValidDate")
    private String validDate;

    @FieldDoc("支付码")
    @JsonProperty("ExternalNo")
    @XmlElement(name = "ExternalNo")
    private String externalNo;

    @FieldDoc("E时为等待支付,吐出给online端,以继续支付")
    @JsonProperty("ActualOrderStatus")
    @XmlElement(name = "ActualOrderStatus")
    private String actualOrderStatus;

    @FieldDoc("最后修改支付方式")
    @JsonProperty("EditPayTypeExpiryTime")
    @XmlElement(name = "EditPayTypeExpiryTime")
    private Calendar editPayTypeExpiryTime;

    @FieldDoc("最后修改支付方式")
    @JsonProperty("EditPayTypeExpiryTimeLong")
    @XmlElement(name = "EditPayTypeExpiryTimeLong")
    private long editPayTypeExpiryTimeLong;

    @FieldDoc("修改支付方式(继续支付)倒计时秒数")
    @JsonProperty("EditPayTypeLimitSecond")
    @XmlElement(name = "EditPayTypeLimitSecond")
    private int editPayTypeLimitSecond;

    @FieldDoc("中转or中转推荐")
    @JsonProperty("SpecialPriceType")
    @XmlElement(name = "SpecialPriceType")
    private String specialPriceType;

    @FieldDoc("最后重复提交时间")
    @JsonProperty("ReSubmitExpiryTime")
    @XmlElement(name = "ReSubmitExpiryTime")
    private Calendar reSubmitExpiryTime;

    @FieldDoc("最后重复提交时间")
    @JsonProperty("ReSubmitExpiryTimeLong")
    @XmlElement(name = "ReSubmitExpiryTimeLong")
    private long reSubmitExpiryTimeLong;

    @FieldDoc("服务器时间")
    @JsonProperty("ServerTime")
    @XmlElement(name = "ServerTime")
    private Calendar serverTime;

    @FieldDoc("服务器时间")
    @JsonProperty("ServerTimeLong")
    @XmlElement(name = "ServerTimeLong")
    private long serverTimeLong;

    @FieldDoc("订单是否可退票")
    @JsonProperty("RefundAble")
    @XmlElement(name = "RefundAble")
    private boolean refundAble;

    @FieldDoc("退票信息")
    @JsonProperty("RefundRecordList")
    @XmlElement(name = "RefundRecordList")
    private List<RefundRecord> refundRecordList;

    @FieldDoc("X产品退票信息")
    @JsonProperty("XRefundRecordList")
    @XmlElement(name = "XRefundRecordList")
    private List<XRefundRecord> xRefundRecordList;

    @FieldDoc("I国际，N国内")
    @JsonProperty("FlightOrderClass")
    @XmlElement(name = "FlightOrderClass")
    private String flightOrderClass;

    @FieldDoc("是否有航变")
    @JsonProperty("HasFlightChange")
    @XmlElement(name = "HasFlightChange")
    private boolean hasFlightChange;

    @FieldDoc("航变信息")
    @JsonProperty("ChangeOrderList")
    @XmlElement(name = "ChangeOrderList")
    private List<ChangeOrder> changeOrderList;

    @FieldDoc("关联订单产品信息")
    @JsonProperty("RelatedOrderInfoList")
    @XmlElement(name = "RelatedOrderInfoList")
    private List<RelatedOrderInfoEntity> relatedOrderInfoList;

    @FieldDoc("选座信息")
    @JsonProperty("OrderBookSeatList")
    @XmlElement(name = "OrderBookSeatList")
    private List<OrderBookSeat> orderBookSeatList;

    @FieldDoc("订单是否可删除")
    @JsonProperty("DeleteAble")
    @XmlElement(name = "DeleteAble")
    private boolean deleteAble;

    @FieldDoc("订单操作历史")
    @JsonProperty("OrderHistoryList")
    @XmlElement(name = "OrderHistoryList")
    private List<OrderHistory> orderHistoryList;

    @FieldDoc("行程卡片列表")
    @JsonProperty("TripRecordList")
    @XmlElement(name = "TripRecordList")
    private List<TripRecord> tripRecordList;

    @FieldDoc("关联行程类型" +
            "0 -未知" +
            "1 -去程" +
            "2 -返程")
    @JsonProperty("RelateRouteType")
    @XmlElement(name = "RelateRouteType")
    private int relateRouteType;

    @FieldDoc("拆单类型" +
            "0 -未知" +
            "1 -往返程拆单" +
            "2 -儿童成人/成人婴儿" +
            "3 -多程 拆单 -1拆4 或非12类型")
    @JsonProperty("OrderSplitType")
    @XmlElement(name = "OrderSplitType")
    private int orderSplitType;

    @FieldDoc("当前订单票种类型" +
            "成人 ADT" +
            "儿童 CHD" +
            "婴儿 INF")
    @JsonProperty("OrderType")
    @XmlElement(name = "OrderType")
    private GaPassengerType orderType;

    @FieldDoc("是否需要展示退改签提醒")
    @JsonProperty("ShowRebRefNotice")
    @XmlElement(name = "ShowRebRefNotice")
    private boolean showRebRefNotice;

    @FieldDoc("是否需要展示发送行程单按钮")
    @JsonProperty("ShowItineraryEmail")
    @XmlElement(name = "ShowItineraryEmail")
    private boolean showItineraryEmail;

    @FieldDoc("关联订单OrderID List  （包含已取消订单）")
    @JsonProperty("RelationOrderIDList")
    @XmlElement(name = "RelationOrderIDList")
    private List<Long> relationOrderIDList;

    @FieldDoc("改签信息")
    @JsonProperty("ReBookingInfoList")
    @XmlElement(name = "ReBookingInfoList")
    private List<RebookingInfo> reBookingInfoList;

    @FieldDoc("订单是否为国际网站订单")
    @JsonProperty("IsOrderFromIbuSite")
    @XmlElement(name = "IsOrderFromIbuSite")
    private boolean isOrderFromIbuSite;

    @FieldDoc("最晚出票时间")
    @JsonProperty("LatestDraftTime")
    @XmlElement(name = "LatestDraftTime")
    private LatestDraftTimeEntity latestDraftTime;

    @FieldDoc("是否可改签-订单层面")
    @JsonProperty("RescheduleAble")
    @XmlElement(name = "RescheduleAble")
    private boolean rescheduleAble;

    @FieldDoc("订单不可改签原因")
    @JsonProperty("UnRescheduleAbleReason")
    @XmlElement(name = "UnRescheduleAbleReason")
    private String unRescheduleAbleReason;

    @FieldDoc("是否包含待支付改签单")
    @JsonProperty("NeedPayRebookOrder")
    @XmlElement(name = "NeedPayRebookOrder")
    private boolean needPayRebookOrder;

    @FieldDoc("多币种优惠券信息")
    @JsonProperty("OrderCouponList")
    @XmlElement(name = "OrderCouponList")
    private List<OrderCouponInfo> orderCouponList;

    /**
     * 用户UID
     */
    public String getUid() {
        return this.uid;
    }

    public void setUid(String uid) {
        this.uid = uid;
    }

    /**
     * 订单号
     */
    public long getOrderID() {
        return this.orderID;
    }

    public void setOrderID(long orderID) {
        this.orderID = orderID;
    }

    /**
     * 临时订单号
     */
    public long getTempOrderID() {
        return this.tempOrderID;
    }

    public void setTempOrderID(long tempOrderID) {
        this.tempOrderID = tempOrderID;
    }

    /**
     * 订单号
     */
    public List<Long> getAssociateOrderID() {
        return this.associateOrderID;
    }

    public void setAssociateOrderID(List<Long> associateOrderID) {
        this.associateOrderID = associateOrderID;
    }

    /**
     * 主订单号
     */
    public long getPayMainOrderID() {
        return this.payMainOrderID;
    }

    public void setPayMainOrderID(long payMainOrderID) {
        this.payMainOrderID = payMainOrderID;
    }

    /**
     * 预定渠道(GDS-WS等)
     */
    public String getBookingChannel() {
        return this.bookingChannel;
    }

    public void setBookingChannel(String bookingChannel) {
        this.bookingChannel = bookingChannel;
    }

    /**
     * 订单状态
     *             U-未提交（已创建未提交），
     *             W-已提交未处理，
     *             P-处理中（已出票），
     *             J-出票中，
     *             G-已支付出票中，
     *             H-已扣款出票中，
     *             R-全部退票（已退票），
     *             C-已取消，
     *             T-部分退票，
     *             S-已成交，
     *             E-待支付，
     *             F-待扣款，
     *             Z-未出行，
     *             D-取消申请中，
     *             A-所有
     */
    public String getStatusCode() {
        return this.statusCode;
    }

    public void setStatusCode(String statusCode) {
        this.statusCode = statusCode;
    }

    /**
     * 前续订单操作流程
     */
    public List<String> getPreOrderProsessList() {
        return this.preOrderProsessList;
    }

    public void setPreOrderProsessList(List<String> preOrderProsessList) {
        this.preOrderProsessList = preOrderProsessList;
    }

    /**
     * 当前订单操作流程
     */
    public String getOrderProsess() {
        return this.orderProsess;
    }

    public void setOrderProsess(String orderProsess) {
        this.orderProsess = orderProsess;
    }

    /**
     * 后续订单操作流程
     */
    public List<String> getPendingOrderProsessList() {
        return this.pendingOrderProsessList;
    }

    public void setPendingOrderProsessList(List<String> pendingOrderProsessList) {
        this.pendingOrderProsessList = pendingOrderProsessList;
    }

    /**
     * 订单状态多语言描述
     */
    public String getStatusDes() {
        return this.statusDes;
    }

    public void setStatusDes(String statusDes) {
        this.statusDes = statusDes;
    }

    /**
     * 实际订单状态多语言描述
     */
    public String getActualStatusDes() {
        return this.actualStatusDes;
    }

    public void setActualStatusDes(String actualStatusDes) {
        this.actualStatusDes = actualStatusDes;
    }

    /**
     * 创建订单时间
     */
    public long getOrderDate() {
        return this.orderDate;
    }

    public void setOrderDate(long orderDate) {
        this.orderDate = orderDate;
    }

    /**
     * 停留天数
     */
    public int getAdjustDay1() {
        return this.adjustDay1;
    }

    public void setAdjustDay1(int adjustDay1) {
        this.adjustDay1 = adjustDay1;
    }

    /**
     * 有效期
     */
    public int getAdjustDay2() {
        return this.adjustDay2;
    }

    public void setAdjustDay2(int adjustDay2) {
        this.adjustDay2 = adjustDay2;
    }

    /**
     * 订单来源
     */
    public String getServerFrom() {
        return this.serverFrom;
    }

    public void setServerFrom(String serverFrom) {
        this.serverFrom = serverFrom;
    }

    /**
     * 产品引擎
     */
    public String getEngineType() {
        return this.engineType;
    }

    public void setEngineType(String engineType) {
        this.engineType = engineType;
    }

    /**
     * 支付方式
     */
    public PayType getPayMethod() {
        return this.payMethod;
    }

    public void setPayMethod(PayType payMethod) {
        this.payMethod = payMethod;
    }

    /**
     * 支付方式
     */
    public String getPayMethodStr() {
        return this.payMethodStr;
    }

    public void setPayMethodStr(String payMethodStr) {
        this.payMethodStr = payMethodStr;
    }

    /**
     * 币种类型
     */
    public String getCurrencyType() {
        return this.currencyType;
    }

    public void setCurrencyType(String currencyType) {
        this.currencyType = currencyType;
    }

    /**
     * 优惠券金额
     */
    public BigDecimal getCMoenyAmount() {
        return this.cMoenyAmount;
    }

    public void setCMoenyAmount(BigDecimal cMoenyAmount) {
        this.cMoenyAmount = cMoenyAmount;
    }

    /**
     * 订单备注
     */
    public String getOrderRemark() {
        return this.orderRemark;
    }

    public void setOrderRemark(String orderRemark) {
        this.orderRemark = orderRemark;
    }

    /**
     * 特殊备注
     */
    public String getSpecialRemark() {
        return this.specialRemark;
    }

    public void setSpecialRemark(String specialRemark) {
        this.specialRemark = specialRemark;
    }

    /**
     * 航程类型
     */
    public GaFlightWayType getFlightWay() {
        return this.flightWay;
    }

    public void setFlightWay(GaFlightWayType flightWay) {
        this.flightWay = flightWay;
    }

    /**
     * 航程类型多语言名称
     */
    public String getFlightWayName() {
        return this.flightWayName;
    }

    public void setFlightWayName(String flightWayName) {
        this.flightWayName = flightWayName;
    }

    /**
     * X产品信息
     */
    public XProductDetail getXProductDetail() {
        return this.xProductDetail;
    }

    public void setXProductDetail(XProductDetail xProductDetail) {
        this.xProductDetail = xProductDetail;
    }

    /**
     * 休息室信息(请使用XProductDetail节点下的AirportLoungeInfo休息室信息)
     */
    public List<AirportLoungeEntity> getAirportLoungeEntity() {
        return this.airportLoungeEntity;
    }

    public void setAirportLoungeEntity(List<AirportLoungeEntity> airportLoungeEntity) {
        this.airportLoungeEntity = airportLoungeEntity;
    }

    /**
     * 航线信息
     */
    public List<FlightOrigDestInfo> getFlightInfoList() {
        return this.flightInfoList;
    }

    public void setFlightInfoList(List<FlightOrigDestInfo> flightInfoList) {
        this.flightInfoList = flightInfoList;
    }

    /**
     * 退改签信息
     */
    public List<PolicyInfo> getPolicyInfoList() {
        return this.policyInfoList;
    }

    public void setPolicyInfoList(List<PolicyInfo> policyInfoList) {
        this.policyInfoList = policyInfoList;
    }

    /**
     * 价格信息
     */
    public DetailPriceInfo getPriceInfo() {
        return this.priceInfo;
    }

    public void setPriceInfo(DetailPriceInfo priceInfo) {
        this.priceInfo = priceInfo;
    }

    /**
     * 配送信息
     */
    public DeliverInfo getDeliverInfo() {
        return this.deliverInfo;
    }

    public void setDeliverInfo(DeliverInfo deliverInfo) {
        this.deliverInfo = deliverInfo;
    }

    /**
     * 乘机人信息
     */
    public List<GaPassengerInfo> getPassengerInfoList() {
        return this.passengerInfoList;
    }

    public void setPassengerInfoList(List<GaPassengerInfo> passengerInfoList) {
        this.passengerInfoList = passengerInfoList;
    }

    /**
     * 联系人信息
     */
    public ContactInfo getContactInfo() {
        return this.contactInfo;
    }

    public void setContactInfo(ContactInfo contactInfo) {
        this.contactInfo = contactInfo;
    }

    /**
     * 行李额
     */
    public List<BaggageInfo> getBaggageInfoList() {
        return this.baggageInfoList;
    }

    public void setBaggageInfoList(List<BaggageInfo> baggageInfoList) {
        this.baggageInfoList = baggageInfoList;
    }

    /**
     * 关联订单
     */
    public List<String> getRelevanceOrderList() {
        return this.relevanceOrderList;
    }

    public void setRelevanceOrderList(List<String> relevanceOrderList) {
        this.relevanceOrderList = relevanceOrderList;
    }

    /**
     * 保险信息
     */
    public OrderInsurance getInsurance() {
        return this.insurance;
    }

    public void setInsurance(OrderInsurance insurance) {
        this.insurance = insurance;
    }

    /**
     * 支付信息
     */
    public GaFlightPaymentInfo getPaymentInfo() {
        return this.paymentInfo;
    }

    public void setPaymentInfo(GaFlightPaymentInfo paymentInfo) {
        this.paymentInfo = paymentInfo;
    }

    /**
     * 是否可取消
     */
    public boolean getIsCancel() {
        return this.isCancel;
    }

    public void setIsCancel(boolean isCancel) {
        this.isCancel = isCancel;
    }

    /**
     * 是否包含弃程 Y/N(Y 包含， N 不包含)
     */
    public boolean getIsPartial() {
        return this.isPartial;
    }

    public void setIsPartial(boolean isPartial) {
        this.isPartial = isPartial;
    }

    /**
     * 是否子订单
     */
    public boolean getIsSubOrder() {
        return this.isSubOrder;
    }

    public void setIsSubOrder(boolean isSubOrder) {
        this.isSubOrder = isSubOrder;
    }

    /**
     * 验证天数
     */
    public String getValidDate() {
        return this.validDate;
    }

    public void setValidDate(String validDate) {
        this.validDate = validDate;
    }

    /**
     * 支付码
     */
    public String getExternalNo() {
        return this.externalNo;
    }

    public void setExternalNo(String externalNo) {
        this.externalNo = externalNo;
    }

    /**
     * E时为等待支付,吐出给online端,以继续支付
     */
    public String getActualOrderStatus() {
        return this.actualOrderStatus;
    }

    public void setActualOrderStatus(String actualOrderStatus) {
        this.actualOrderStatus = actualOrderStatus;
    }

    /**
     * 最后修改支付方式
     */
    public Calendar getEditPayTypeExpiryTime() {
        return this.editPayTypeExpiryTime;
    }

    public void setEditPayTypeExpiryTime(Calendar editPayTypeExpiryTime) {
        this.editPayTypeExpiryTime = editPayTypeExpiryTime;
    }

    /**
     * 最后修改支付方式
     */
    public long getEditPayTypeExpiryTimeLong() {
        return this.editPayTypeExpiryTimeLong;
    }

    public void setEditPayTypeExpiryTimeLong(long editPayTypeExpiryTimeLong) {
        this.editPayTypeExpiryTimeLong = editPayTypeExpiryTimeLong;
    }

    /**
     * 修改支付方式(继续支付)倒计时秒数
     */
    public int getEditPayTypeLimitSecond() {
        return this.editPayTypeLimitSecond;
    }

    public void setEditPayTypeLimitSecond(int editPayTypeLimitSecond) {
        this.editPayTypeLimitSecond = editPayTypeLimitSecond;
    }

    /**
     * 中转or中转推荐
     */
    public String getSpecialPriceType() {
        return this.specialPriceType;
    }

    public void setSpecialPriceType(String specialPriceType) {
        this.specialPriceType = specialPriceType;
    }

    /**
     * 最后重复提交时间
     */
    public Calendar getReSubmitExpiryTime() {
        return this.reSubmitExpiryTime;
    }

    public void setReSubmitExpiryTime(Calendar reSubmitExpiryTime) {
        this.reSubmitExpiryTime = reSubmitExpiryTime;
    }

    /**
     * 最后重复提交时间
     */
    public long getReSubmitExpiryTimeLong() {
        return this.reSubmitExpiryTimeLong;
    }

    public void setReSubmitExpiryTimeLong(long reSubmitExpiryTimeLong) {
        this.reSubmitExpiryTimeLong = reSubmitExpiryTimeLong;
    }

    /**
     * 服务器时间
     */
    public Calendar getServerTime() {
        return this.serverTime;
    }

    public void setServerTime(Calendar serverTime) {
        this.serverTime = serverTime;
    }

    /**
     * 服务器时间
     */
    public long getServerTimeLong() {
        return this.serverTimeLong;
    }

    public void setServerTimeLong(long serverTimeLong) {
        this.serverTimeLong = serverTimeLong;
    }

    /**
     * 订单是否可退票
     */
    public boolean getRefundAble() {
        return this.refundAble;
    }

    public void setRefundAble(boolean refundAble) {
        this.refundAble = refundAble;
    }

    /**
     * 退票信息
     */
    public List<RefundRecord> getRefundRecordList() {
        return this.refundRecordList;
    }

    public void setRefundRecordList(List<RefundRecord> refundRecordList) {
        this.refundRecordList = refundRecordList;
    }

    /**
     * X产品退票信息
     */
    public List<XRefundRecord> getXRefundRecordList() {
        return this.xRefundRecordList;
    }

    public void setXRefundRecordList(List<XRefundRecord> xRefundRecordList) {
        this.xRefundRecordList = xRefundRecordList;
    }

    /**
     * I国际，N国内
     */
    public String getFlightOrderClass() {
        return this.flightOrderClass;
    }

    public void setFlightOrderClass(String flightOrderClass) {
        this.flightOrderClass = flightOrderClass;
    }

    /**
     * 是否有航变
     */
    public boolean getHasFlightChange() {
        return this.hasFlightChange;
    }

    public void setHasFlightChange(boolean hasFlightChange) {
        this.hasFlightChange = hasFlightChange;
    }

    /**
     * 航变信息
     */
    public List<ChangeOrder> getChangeOrderList() {
        return this.changeOrderList;
    }

    public void setChangeOrderList(List<ChangeOrder> changeOrderList) {
        this.changeOrderList = changeOrderList;
    }

    /**
     * 关联订单产品信息
     */
    public List<RelatedOrderInfoEntity> getRelatedOrderInfoList() {
        return this.relatedOrderInfoList;
    }

    public void setRelatedOrderInfoList(List<RelatedOrderInfoEntity> relatedOrderInfoList) {
        this.relatedOrderInfoList = relatedOrderInfoList;
    }

    /**
     * 选座信息
     */
    public List<OrderBookSeat> getOrderBookSeatList() {
        return this.orderBookSeatList;
    }

    public void setOrderBookSeatList(List<OrderBookSeat> orderBookSeatList) {
        this.orderBookSeatList = orderBookSeatList;
    }

    /**
     * 订单是否可删除
     */
    public boolean getDeleteAble() {
        return this.deleteAble;
    }

    public void setDeleteAble(boolean deleteAble) {
        this.deleteAble = deleteAble;
    }

    /**
     * 订单操作历史
     */
    public List<OrderHistory> getOrderHistoryList() {
        return this.orderHistoryList;
    }

    public void setOrderHistoryList(List<OrderHistory> orderHistoryList) {
        this.orderHistoryList = orderHistoryList;
    }

    /**
     * 行程卡片列表
     */
    public List<TripRecord> getTripRecordList() {
        return this.tripRecordList;
    }

    public void setTripRecordList(List<TripRecord> tripRecordList) {
        this.tripRecordList = tripRecordList;
    }

    /**
     * 关联行程类型
     *             0 -未知
     *             1 -去程
     *             2 -返程
     */
    public int getRelateRouteType() {
        return this.relateRouteType;
    }

    public void setRelateRouteType(int relateRouteType) {
        this.relateRouteType = relateRouteType;
    }

    /**
     * 拆单类型
     *             0 -未知
     *             1 -往返程拆单
     *             2 -儿童成人/成人婴儿
     *             3 -多程 拆单 -1拆4 或非12类型
     */
    public int getOrderSplitType() {
        return this.orderSplitType;
    }

    public void setOrderSplitType(int orderSplitType) {
        this.orderSplitType = orderSplitType;
    }

    /**
     * 当前订单票种类型
     *             成人 ADT
     *             儿童 CHD
     *             婴儿 INF
     */
    public GaPassengerType getOrderType() {
        return this.orderType;
    }

    public void setOrderType(GaPassengerType orderType) {
        this.orderType = orderType;
    }

    /**
     * 是否需要展示退改签提醒
     */
    public boolean getShowRebRefNotice() {
        return this.showRebRefNotice;
    }

    public void setShowRebRefNotice(boolean showRebRefNotice) {
        this.showRebRefNotice = showRebRefNotice;
    }

    /**
     * 是否需要展示发送行程单按钮
     */
    public boolean getShowItineraryEmail() {
        return this.showItineraryEmail;
    }

    public void setShowItineraryEmail(boolean showItineraryEmail) {
        this.showItineraryEmail = showItineraryEmail;
    }

    /**
     * 关联订单OrderID List  （包含已取消订单）
     */
    public List<Long> getRelationOrderIDList() {
        return this.relationOrderIDList;
    }

    public void setRelationOrderIDList(List<Long> relationOrderIDList) {
        this.relationOrderIDList = relationOrderIDList;
    }

    /**
     * 改签信息
     */
    public List<RebookingInfo> getReBookingInfoList() {
        return this.reBookingInfoList;
    }

    public void setReBookingInfoList(List<RebookingInfo> reBookingInfoList) {
        this.reBookingInfoList = reBookingInfoList;
    }

    /**
     * 订单是否为国际网站订单
     */
    public boolean getIsOrderFromIbuSite() {
        return this.isOrderFromIbuSite;
    }

    public void setIsOrderFromIbuSite(boolean isOrderFromIbuSite) {
        this.isOrderFromIbuSite = isOrderFromIbuSite;
    }

    /**
     * 最晚出票时间
     */
    public LatestDraftTimeEntity getLatestDraftTime() {
        return this.latestDraftTime;
    }

    public void setLatestDraftTime(LatestDraftTimeEntity latestDraftTime) {
        this.latestDraftTime = latestDraftTime;
    }

    /**
     * 是否可改签-订单层面
     */
    public boolean getRescheduleAble() {
        return this.rescheduleAble;
    }

    public void setRescheduleAble(boolean rescheduleAble) {
        this.rescheduleAble = rescheduleAble;
    }

    /**
     * 订单不可改签原因
     */
    public String getUnRescheduleAbleReason() {
        return this.unRescheduleAbleReason;
    }

    public void setUnRescheduleAbleReason(String unRescheduleAbleReason) {
        this.unRescheduleAbleReason = unRescheduleAbleReason;
    }

    /**
     * 是否包含待支付改签单
     */
    public boolean getNeedPayRebookOrder() {
        return this.needPayRebookOrder;
    }

    public void setNeedPayRebookOrder(boolean needPayRebookOrder) {
        this.needPayRebookOrder = needPayRebookOrder;
    }

    /**
     * 多币种优惠券信息
     */
    public List<OrderCouponInfo> getOrderCouponList() {
        return this.orderCouponList;
    }

    public void setOrderCouponList(List<OrderCouponInfo> orderCouponList) {
        this.orderCouponList = orderCouponList;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final OrderDetailInfo other = (OrderDetailInfo)obj;
        return
            Objects.equal(this.uid, other.uid) && 
            Objects.equal(this.orderID, other.orderID) && 
            Objects.equal(this.tempOrderID, other.tempOrderID) && 
            Objects.equal(this.associateOrderID, other.associateOrderID) && 
            Objects.equal(this.payMainOrderID, other.payMainOrderID) && 
            Objects.equal(this.bookingChannel, other.bookingChannel) && 
            Objects.equal(this.statusCode, other.statusCode) && 
            Objects.equal(this.preOrderProsessList, other.preOrderProsessList) && 
            Objects.equal(this.orderProsess, other.orderProsess) && 
            Objects.equal(this.pendingOrderProsessList, other.pendingOrderProsessList) && 
            Objects.equal(this.statusDes, other.statusDes) && 
            Objects.equal(this.actualStatusDes, other.actualStatusDes) && 
            Objects.equal(this.orderDate, other.orderDate) && 
            Objects.equal(this.adjustDay1, other.adjustDay1) && 
            Objects.equal(this.adjustDay2, other.adjustDay2) && 
            Objects.equal(this.serverFrom, other.serverFrom) && 
            Objects.equal(this.engineType, other.engineType) && 
            Objects.equal(this.payMethod, other.payMethod) && 
            Objects.equal(this.payMethodStr, other.payMethodStr) && 
            Objects.equal(this.currencyType, other.currencyType) && 
            Objects.equal(this.cMoenyAmount, other.cMoenyAmount) && 
            Objects.equal(this.orderRemark, other.orderRemark) && 
            Objects.equal(this.specialRemark, other.specialRemark) && 
            Objects.equal(this.flightWay, other.flightWay) && 
            Objects.equal(this.flightWayName, other.flightWayName) && 
            Objects.equal(this.xProductDetail, other.xProductDetail) && 
            Objects.equal(this.airportLoungeEntity, other.airportLoungeEntity) && 
            Objects.equal(this.flightInfoList, other.flightInfoList) && 
            Objects.equal(this.policyInfoList, other.policyInfoList) && 
            Objects.equal(this.priceInfo, other.priceInfo) && 
            Objects.equal(this.deliverInfo, other.deliverInfo) && 
            Objects.equal(this.passengerInfoList, other.passengerInfoList) && 
            Objects.equal(this.contactInfo, other.contactInfo) && 
            Objects.equal(this.baggageInfoList, other.baggageInfoList) && 
            Objects.equal(this.relevanceOrderList, other.relevanceOrderList) && 
            Objects.equal(this.insurance, other.insurance) && 
            Objects.equal(this.paymentInfo, other.paymentInfo) && 
            Objects.equal(this.isCancel, other.isCancel) && 
            Objects.equal(this.isPartial, other.isPartial) && 
            Objects.equal(this.isSubOrder, other.isSubOrder) && 
            Objects.equal(this.validDate, other.validDate) && 
            Objects.equal(this.externalNo, other.externalNo) && 
            Objects.equal(this.actualOrderStatus, other.actualOrderStatus) && 
            Objects.equal(this.editPayTypeExpiryTime, other.editPayTypeExpiryTime) && 
            Objects.equal(this.editPayTypeExpiryTimeLong, other.editPayTypeExpiryTimeLong) && 
            Objects.equal(this.editPayTypeLimitSecond, other.editPayTypeLimitSecond) && 
            Objects.equal(this.specialPriceType, other.specialPriceType) && 
            Objects.equal(this.reSubmitExpiryTime, other.reSubmitExpiryTime) && 
            Objects.equal(this.reSubmitExpiryTimeLong, other.reSubmitExpiryTimeLong) && 
            Objects.equal(this.serverTime, other.serverTime) && 
            Objects.equal(this.serverTimeLong, other.serverTimeLong) && 
            Objects.equal(this.refundAble, other.refundAble) && 
            Objects.equal(this.refundRecordList, other.refundRecordList) && 
            Objects.equal(this.xRefundRecordList, other.xRefundRecordList) && 
            Objects.equal(this.flightOrderClass, other.flightOrderClass) && 
            Objects.equal(this.hasFlightChange, other.hasFlightChange) && 
            Objects.equal(this.changeOrderList, other.changeOrderList) && 
            Objects.equal(this.relatedOrderInfoList, other.relatedOrderInfoList) && 
            Objects.equal(this.orderBookSeatList, other.orderBookSeatList) && 
            Objects.equal(this.deleteAble, other.deleteAble) && 
            Objects.equal(this.orderHistoryList, other.orderHistoryList) && 
            Objects.equal(this.tripRecordList, other.tripRecordList) && 
            Objects.equal(this.relateRouteType, other.relateRouteType) && 
            Objects.equal(this.orderSplitType, other.orderSplitType) && 
            Objects.equal(this.orderType, other.orderType) && 
            Objects.equal(this.showRebRefNotice, other.showRebRefNotice) && 
            Objects.equal(this.showItineraryEmail, other.showItineraryEmail) && 
            Objects.equal(this.relationOrderIDList, other.relationOrderIDList) && 
            Objects.equal(this.reBookingInfoList, other.reBookingInfoList) && 
            Objects.equal(this.isOrderFromIbuSite, other.isOrderFromIbuSite) && 
            Objects.equal(this.latestDraftTime, other.latestDraftTime) && 
            Objects.equal(this.rescheduleAble, other.rescheduleAble) && 
            Objects.equal(this.unRescheduleAbleReason, other.unRescheduleAbleReason) && 
            Objects.equal(this.needPayRebookOrder, other.needPayRebookOrder) && 
            Objects.equal(this.orderCouponList, other.orderCouponList);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.uid);
        result = 31 * result + Objects.hashCode(this.orderID);
        result = 31 * result + Objects.hashCode(this.tempOrderID);
        result = 31 * result + Objects.hashCode(this.associateOrderID);
        result = 31 * result + Objects.hashCode(this.payMainOrderID);
        result = 31 * result + Objects.hashCode(this.bookingChannel);
        result = 31 * result + Objects.hashCode(this.statusCode);
        result = 31 * result + Objects.hashCode(this.preOrderProsessList);
        result = 31 * result + Objects.hashCode(this.orderProsess);
        result = 31 * result + Objects.hashCode(this.pendingOrderProsessList);
        result = 31 * result + Objects.hashCode(this.statusDes);
        result = 31 * result + Objects.hashCode(this.actualStatusDes);
        result = 31 * result + Objects.hashCode(this.orderDate);
        result = 31 * result + Objects.hashCode(this.adjustDay1);
        result = 31 * result + Objects.hashCode(this.adjustDay2);
        result = 31 * result + Objects.hashCode(this.serverFrom);
        result = 31 * result + Objects.hashCode(this.engineType);
        result = 31 * result + Objects.hashCode(this.payMethod);
        result = 31 * result + Objects.hashCode(this.payMethodStr);
        result = 31 * result + Objects.hashCode(this.currencyType);
        result = 31 * result + Objects.hashCode(this.cMoenyAmount);
        result = 31 * result + Objects.hashCode(this.orderRemark);
        result = 31 * result + Objects.hashCode(this.specialRemark);
        result = 31 * result + Objects.hashCode(this.flightWay);
        result = 31 * result + Objects.hashCode(this.flightWayName);
        result = 31 * result + Objects.hashCode(this.xProductDetail);
        result = 31 * result + Objects.hashCode(this.airportLoungeEntity);
        result = 31 * result + Objects.hashCode(this.flightInfoList);
        result = 31 * result + Objects.hashCode(this.policyInfoList);
        result = 31 * result + Objects.hashCode(this.priceInfo);
        result = 31 * result + Objects.hashCode(this.deliverInfo);
        result = 31 * result + Objects.hashCode(this.passengerInfoList);
        result = 31 * result + Objects.hashCode(this.contactInfo);
        result = 31 * result + Objects.hashCode(this.baggageInfoList);
        result = 31 * result + Objects.hashCode(this.relevanceOrderList);
        result = 31 * result + Objects.hashCode(this.insurance);
        result = 31 * result + Objects.hashCode(this.paymentInfo);
        result = 31 * result + Objects.hashCode(this.isCancel);
        result = 31 * result + Objects.hashCode(this.isPartial);
        result = 31 * result + Objects.hashCode(this.isSubOrder);
        result = 31 * result + Objects.hashCode(this.validDate);
        result = 31 * result + Objects.hashCode(this.externalNo);
        result = 31 * result + Objects.hashCode(this.actualOrderStatus);
        result = 31 * result + Objects.hashCode(this.editPayTypeExpiryTime);
        result = 31 * result + Objects.hashCode(this.editPayTypeExpiryTimeLong);
        result = 31 * result + Objects.hashCode(this.editPayTypeLimitSecond);
        result = 31 * result + Objects.hashCode(this.specialPriceType);
        result = 31 * result + Objects.hashCode(this.reSubmitExpiryTime);
        result = 31 * result + Objects.hashCode(this.reSubmitExpiryTimeLong);
        result = 31 * result + Objects.hashCode(this.serverTime);
        result = 31 * result + Objects.hashCode(this.serverTimeLong);
        result = 31 * result + Objects.hashCode(this.refundAble);
        result = 31 * result + Objects.hashCode(this.refundRecordList);
        result = 31 * result + Objects.hashCode(this.xRefundRecordList);
        result = 31 * result + Objects.hashCode(this.flightOrderClass);
        result = 31 * result + Objects.hashCode(this.hasFlightChange);
        result = 31 * result + Objects.hashCode(this.changeOrderList);
        result = 31 * result + Objects.hashCode(this.relatedOrderInfoList);
        result = 31 * result + Objects.hashCode(this.orderBookSeatList);
        result = 31 * result + Objects.hashCode(this.deleteAble);
        result = 31 * result + Objects.hashCode(this.orderHistoryList);
        result = 31 * result + Objects.hashCode(this.tripRecordList);
        result = 31 * result + Objects.hashCode(this.relateRouteType);
        result = 31 * result + Objects.hashCode(this.orderSplitType);
        result = 31 * result + Objects.hashCode(this.orderType);
        result = 31 * result + Objects.hashCode(this.showRebRefNotice);
        result = 31 * result + Objects.hashCode(this.showItineraryEmail);
        result = 31 * result + Objects.hashCode(this.relationOrderIDList);
        result = 31 * result + Objects.hashCode(this.reBookingInfoList);
        result = 31 * result + Objects.hashCode(this.isOrderFromIbuSite);
        result = 31 * result + Objects.hashCode(this.latestDraftTime);
        result = 31 * result + Objects.hashCode(this.rescheduleAble);
        result = 31 * result + Objects.hashCode(this.unRescheduleAbleReason);
        result = 31 * result + Objects.hashCode(this.needPayRebookOrder);
        result = 31 * result + Objects.hashCode(this.orderCouponList);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("uid", uid)
            .add("orderID", orderID)
            .add("tempOrderID", tempOrderID)
            .add("associateOrderID", associateOrderID)
            .add("payMainOrderID", payMainOrderID)
            .add("bookingChannel", bookingChannel)
            .add("statusCode", statusCode)
            .add("preOrderProsessList", preOrderProsessList)
            .add("orderProsess", orderProsess)
            .add("pendingOrderProsessList", pendingOrderProsessList)
            .add("statusDes", statusDes)
            .add("actualStatusDes", actualStatusDes)
            .add("orderDate", orderDate)
            .add("adjustDay1", adjustDay1)
            .add("adjustDay2", adjustDay2)
            .add("serverFrom", serverFrom)
            .add("engineType", engineType)
            .add("payMethod", payMethod)
            .add("payMethodStr", payMethodStr)
            .add("currencyType", currencyType)
            .add("cMoenyAmount", cMoenyAmount)
            .add("orderRemark", orderRemark)
            .add("specialRemark", specialRemark)
            .add("flightWay", flightWay)
            .add("flightWayName", flightWayName)
            .add("xProductDetail", xProductDetail)
            .add("airportLoungeEntity", airportLoungeEntity)
            .add("flightInfoList", flightInfoList)
            .add("policyInfoList", policyInfoList)
            .add("priceInfo", priceInfo)
            .add("deliverInfo", deliverInfo)
            .add("passengerInfoList", passengerInfoList)
            .add("contactInfo", contactInfo)
            .add("baggageInfoList", baggageInfoList)
            .add("relevanceOrderList", relevanceOrderList)
            .add("insurance", insurance)
            .add("paymentInfo", paymentInfo)
            .add("isCancel", isCancel)
            .add("isPartial", isPartial)
            .add("isSubOrder", isSubOrder)
            .add("validDate", validDate)
            .add("externalNo", externalNo)
            .add("actualOrderStatus", actualOrderStatus)
            .add("editPayTypeExpiryTime", editPayTypeExpiryTime)
            .add("editPayTypeExpiryTimeLong", editPayTypeExpiryTimeLong)
            .add("editPayTypeLimitSecond", editPayTypeLimitSecond)
            .add("specialPriceType", specialPriceType)
            .add("reSubmitExpiryTime", reSubmitExpiryTime)
            .add("reSubmitExpiryTimeLong", reSubmitExpiryTimeLong)
            .add("serverTime", serverTime)
            .add("serverTimeLong", serverTimeLong)
            .add("refundAble", refundAble)
            .add("refundRecordList", refundRecordList)
            .add("xRefundRecordList", xRefundRecordList)
            .add("flightOrderClass", flightOrderClass)
            .add("hasFlightChange", hasFlightChange)
            .add("changeOrderList", changeOrderList)
            .add("relatedOrderInfoList", relatedOrderInfoList)
            .add("orderBookSeatList", orderBookSeatList)
            .add("deleteAble", deleteAble)
            .add("orderHistoryList", orderHistoryList)
            .add("tripRecordList", tripRecordList)
            .add("relateRouteType", relateRouteType)
            .add("orderSplitType", orderSplitType)
            .add("orderType", orderType)
            .add("showRebRefNotice", showRebRefNotice)
            .add("showItineraryEmail", showItineraryEmail)
            .add("relationOrderIDList", relationOrderIDList)
            .add("reBookingInfoList", reBookingInfoList)
            .add("isOrderFromIbuSite", isOrderFromIbuSite)
            .add("latestDraftTime", latestDraftTime)
            .add("rescheduleAble", rescheduleAble)
            .add("unRescheduleAbleReason", unRescheduleAbleReason)
            .add("needPayRebookOrder", needPayRebookOrder)
            .add("orderCouponList", orderCouponList)
            .toString();
    }
}