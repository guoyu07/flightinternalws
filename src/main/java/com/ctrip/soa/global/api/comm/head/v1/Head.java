/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.comm.head.v1;

import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 请求头信息
 */
@DtoDoc("请求头信息")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Head", propOrder = {
    "language",
    "source",
    "currency",
    "paymentCurrency",
    "paymentCurrencyList",
    "version",
    "uid",
    "vid",
    "token",
    "tokenValidTime",
    "ip",
    "isQuickBooking",
    "clientID",
    "deviceID",
    "apiKey",
    "clientSign",
    "clientSignTime",
    "serviceCode",
    "site",
    "transactionID",
    "abTesting",
    "abTestingTracker",
    "clientSessionID",
    "subChannel",
    "culture",
    "ticket",
    "allianceInfo"
})
@SuppressWarnings("all")
public class Head  {

    private static final long serialVersionUID = 1L;

    public Head(
        Language language, 
        Source source, 
        Currency currency, 
        Currency paymentCurrency, 
        List<Currency> paymentCurrencyList, 
        String version, 
        String uid, 
        String vid, 
        String token, 
        String tokenValidTime, 
        String ip, 
        int isQuickBooking, 
        String clientID, 
        String deviceID, 
        String apiKey, 
        String clientSign, 
        long clientSignTime, 
        String serviceCode, 
        Site site, 
        String transactionID, 
        String abTesting, 
        String abTestingTracker, 
        String clientSessionID, 
        int subChannel, 
        Culture culture, 
        String ticket, 
        AllianceInfo allianceInfo) {
        this.language = language;
        this.source = source;
        this.currency = currency;
        this.paymentCurrency = paymentCurrency;
        this.paymentCurrencyList = paymentCurrencyList;
        this.version = version;
        this.uid = uid;
        this.vid = vid;
        this.token = token;
        this.tokenValidTime = tokenValidTime;
        this.ip = ip;
        this.isQuickBooking = isQuickBooking;
        this.clientID = clientID;
        this.deviceID = deviceID;
        this.apiKey = apiKey;
        this.clientSign = clientSign;
        this.clientSignTime = clientSignTime;
        this.serviceCode = serviceCode;
        this.site = site;
        this.transactionID = transactionID;
        this.abTesting = abTesting;
        this.abTestingTracker = abTestingTracker;
        this.clientSessionID = clientSessionID;
        this.subChannel = subChannel;
        this.culture = culture;
        this.ticket = ticket;
        this.allianceInfo = allianceInfo;
    }

    public Head() {
    }

    @FieldDoc("语言")
    @JsonProperty("Language")
    @XmlElement(name = "Language")
    private Language language;

    @FieldDoc("渠道")
    @JsonProperty("Source")
    @XmlElement(name = "Source")
    private Source source;

    @FieldDoc("当前线程币种")
    @JsonProperty("Currency")
    @XmlElement(name = "Currency")
    private Currency currency;

    @FieldDoc("支付币种 针对多币种支付")
    @JsonProperty("PaymentCurrency")
    @XmlElement(name = "PaymentCurrency", nillable = true)
    private Currency paymentCurrency;

    @FieldDoc("支付币种 针对多币种支付List")
    @JsonProperty("PaymentCurrencyList")
    @XmlElement(name = "PaymentCurrencyList")
    private List<Currency> paymentCurrencyList;

    @FieldDoc("版本")
    @JsonProperty("Version")
    @XmlElement(name = "Version")
    private String version;

    @FieldDoc("用户ID")
    @JsonProperty("UID")
    @XmlElement(name = "UID")
    private String uid;

    @FieldDoc("用户VID")
    @JsonProperty("VID")
    @XmlElement(name = "VID")
    private String vid;

    @FieldDoc("凭证")
    @JsonProperty("Token")
    @XmlElement(name = "Token")
    private String token;

    @FieldDoc("凭证有效时间")
    @JsonProperty("TokenValidTime")
    @XmlElement(name = "TokenValidTime")
    private String tokenValidTime;

    @FieldDoc("IP")
    @JsonProperty("IP")
    @XmlElement(name = "IP")
    private String ip;

    @FieldDoc("是否快速预定1 是快速预定 0 不是")
    @JsonProperty("IsQuickBooking")
    @XmlElement(name = "IsQuickBooking")
    private int isQuickBooking;

    @FieldDoc("客户端ID")
    @JsonProperty("ClientID")
    @XmlElement(name = "ClientID")
    private String clientID;

    @FieldDoc("设备ID")
    @JsonProperty("DeviceID")
    @XmlElement(name = "DeviceID")
    private String deviceID;

    @FieldDoc("ApiKey")
    @JsonProperty("APIKey")
    @XmlElement(name = "APIKey")
    private String apiKey;

    @FieldDoc("客户端签名")
    @JsonProperty("ClientSign")
    @XmlElement(name = "ClientSign")
    private String clientSign;

    @FieldDoc("客户端签名时间")
    @JsonProperty("ClientSignTime")
    @XmlElement(name = "ClientSignTime")
    private long clientSignTime;

    @FieldDoc("服务编码")
    @JsonProperty("ServiceCode")
    @XmlElement(name = "ServiceCode")
    private String serviceCode;

    @FieldDoc("站点缩写")
    @JsonProperty("Site")
    @XmlElement(name = "Site", nillable = true)
    private Site site;

    @FieldDoc("流水号")
    @JsonProperty("TransactionID")
    @XmlElement(name = "TransactionID")
    private String transactionID;

    @FieldDoc("加价ABTesting （目前ONline专用）")
    @JsonProperty("ABTesting")
    @XmlElement(name = "ABTesting")
    private String abTesting;

    @FieldDoc("其它ABTesting （目前ONline专用）")
    @JsonProperty("ABTestingTracker")
    @XmlElement(name = "ABTestingTracker")
    private String abTestingTracker;

    @FieldDoc("客户端页面SessionID 暂时用于风控SessionID传值")
    @JsonProperty("ClientSessionID")
    @XmlElement(name = "ClientSessionID")
    private String clientSessionID;

    @FieldDoc("用来记录online营销传来的SubChannel")
    @JsonProperty("SubChannel")
    @XmlElement(name = "SubChannel")
    private int subChannel;

    @FieldDoc("文化")
    @JsonProperty("Culture")
    @XmlElement(name = "Culture", nillable = true)
    private Culture culture;

    @FieldDoc("新版用户加密串")
    @JsonProperty("Ticket")
    @XmlElement(name = "Ticket")
    private String ticket;

    @FieldDoc("分销参数")
    @JsonProperty("AllianceInfo")
    @XmlElement(name = "AllianceInfo")
    private AllianceInfo allianceInfo;

    /**
     * 语言
     */
    public Language getLanguage() {
        return this.language;
    }

    public void setLanguage(Language language) {
        this.language = language;
    }

    /**
     * 渠道
     */
    public Source getSource() {
        return this.source;
    }

    public void setSource(Source source) {
        this.source = source;
    }

    /**
     * 当前线程币种
     */
    public Currency getCurrency() {
        return this.currency;
    }

    public void setCurrency(Currency currency) {
        this.currency = currency;
    }

    /**
     * 支付币种 针对多币种支付
     */
    public Currency getPaymentCurrency() {
        return this.paymentCurrency;
    }

    public void setPaymentCurrency(Currency paymentCurrency) {
        this.paymentCurrency = paymentCurrency;
    }

    /**
     * 支付币种 针对多币种支付List
     */
    public List<Currency> getPaymentCurrencyList() {
        return this.paymentCurrencyList;
    }

    public void setPaymentCurrencyList(List<Currency> paymentCurrencyList) {
        this.paymentCurrencyList = paymentCurrencyList;
    }

    /**
     * 版本
     */
    public String getVersion() {
        return this.version;
    }

    public void setVersion(String version) {
        this.version = version;
    }

    /**
     * 用户ID
     */
    public String getUid() {
        return this.uid;
    }

    public void setUid(String uid) {
        this.uid = uid;
    }

    /**
     * 用户VID
     */
    public String getVid() {
        return this.vid;
    }

    public void setVid(String vid) {
        this.vid = vid;
    }

    /**
     * 凭证
     */
    public String getToken() {
        return this.token;
    }

    public void setToken(String token) {
        this.token = token;
    }

    /**
     * 凭证有效时间
     */
    public String getTokenValidTime() {
        return this.tokenValidTime;
    }

    public void setTokenValidTime(String tokenValidTime) {
        this.tokenValidTime = tokenValidTime;
    }

    /**
     * IP
     */
    public String getIp() {
        return this.ip;
    }

    public void setIp(String ip) {
        this.ip = ip;
    }

    /**
     * 是否快速预定1 是快速预定 0 不是
     */
    public int getIsQuickBooking() {
        return this.isQuickBooking;
    }

    public void setIsQuickBooking(int isQuickBooking) {
        this.isQuickBooking = isQuickBooking;
    }

    /**
     * 客户端ID
     */
    public String getClientID() {
        return this.clientID;
    }

    public void setClientID(String clientID) {
        this.clientID = clientID;
    }

    /**
     * 设备ID
     */
    public String getDeviceID() {
        return this.deviceID;
    }

    public void setDeviceID(String deviceID) {
        this.deviceID = deviceID;
    }

    /**
     * ApiKey
     */
    public String getApiKey() {
        return this.apiKey;
    }

    public void setApiKey(String apiKey) {
        this.apiKey = apiKey;
    }

    /**
     * 客户端签名
     */
    public String getClientSign() {
        return this.clientSign;
    }

    public void setClientSign(String clientSign) {
        this.clientSign = clientSign;
    }

    /**
     * 客户端签名时间
     */
    public long getClientSignTime() {
        return this.clientSignTime;
    }

    public void setClientSignTime(long clientSignTime) {
        this.clientSignTime = clientSignTime;
    }

    /**
     * 服务编码
     */
    public String getServiceCode() {
        return this.serviceCode;
    }

    public void setServiceCode(String serviceCode) {
        this.serviceCode = serviceCode;
    }

    /**
     * 站点缩写
     */
    public Site getSite() {
        return this.site;
    }

    public void setSite(Site site) {
        this.site = site;
    }

    /**
     * 流水号
     */
    public String getTransactionID() {
        return this.transactionID;
    }

    public void setTransactionID(String transactionID) {
        this.transactionID = transactionID;
    }

    /**
     * 加价ABTesting （目前ONline专用）
     */
    public String getAbTesting() {
        return this.abTesting;
    }

    public void setAbTesting(String abTesting) {
        this.abTesting = abTesting;
    }

    /**
     * 其它ABTesting （目前ONline专用）
     */
    public String getAbTestingTracker() {
        return this.abTestingTracker;
    }

    public void setAbTestingTracker(String abTestingTracker) {
        this.abTestingTracker = abTestingTracker;
    }

    /**
     * 客户端页面SessionID 暂时用于风控SessionID传值
     */
    public String getClientSessionID() {
        return this.clientSessionID;
    }

    public void setClientSessionID(String clientSessionID) {
        this.clientSessionID = clientSessionID;
    }

    /**
     * 用来记录online营销传来的SubChannel
     */
    public int getSubChannel() {
        return this.subChannel;
    }

    public void setSubChannel(int subChannel) {
        this.subChannel = subChannel;
    }

    /**
     * 文化
     */
    public Culture getCulture() {
        return this.culture;
    }

    public void setCulture(Culture culture) {
        this.culture = culture;
    }

    /**
     * 新版用户加密串
     */
    public String getTicket() {
        return this.ticket;
    }

    public void setTicket(String ticket) {
        this.ticket = ticket;
    }

    /**
     * 分销参数
     */
    public AllianceInfo getAllianceInfo() {
        return this.allianceInfo;
    }

    public void setAllianceInfo(AllianceInfo allianceInfo) {
        this.allianceInfo = allianceInfo;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final Head other = (Head)obj;
        return
            Objects.equal(this.language, other.language) && 
            Objects.equal(this.source, other.source) && 
            Objects.equal(this.currency, other.currency) && 
            Objects.equal(this.paymentCurrency, other.paymentCurrency) && 
            Objects.equal(this.paymentCurrencyList, other.paymentCurrencyList) && 
            Objects.equal(this.version, other.version) && 
            Objects.equal(this.uid, other.uid) && 
            Objects.equal(this.vid, other.vid) && 
            Objects.equal(this.token, other.token) && 
            Objects.equal(this.tokenValidTime, other.tokenValidTime) && 
            Objects.equal(this.ip, other.ip) && 
            Objects.equal(this.isQuickBooking, other.isQuickBooking) && 
            Objects.equal(this.clientID, other.clientID) && 
            Objects.equal(this.deviceID, other.deviceID) && 
            Objects.equal(this.apiKey, other.apiKey) && 
            Objects.equal(this.clientSign, other.clientSign) && 
            Objects.equal(this.clientSignTime, other.clientSignTime) && 
            Objects.equal(this.serviceCode, other.serviceCode) && 
            Objects.equal(this.site, other.site) && 
            Objects.equal(this.transactionID, other.transactionID) && 
            Objects.equal(this.abTesting, other.abTesting) && 
            Objects.equal(this.abTestingTracker, other.abTestingTracker) && 
            Objects.equal(this.clientSessionID, other.clientSessionID) && 
            Objects.equal(this.subChannel, other.subChannel) && 
            Objects.equal(this.culture, other.culture) && 
            Objects.equal(this.ticket, other.ticket) && 
            Objects.equal(this.allianceInfo, other.allianceInfo);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.language);
        result = 31 * result + Objects.hashCode(this.source);
        result = 31 * result + Objects.hashCode(this.currency);
        result = 31 * result + Objects.hashCode(this.paymentCurrency);
        result = 31 * result + Objects.hashCode(this.paymentCurrencyList);
        result = 31 * result + Objects.hashCode(this.version);
        result = 31 * result + Objects.hashCode(this.uid);
        result = 31 * result + Objects.hashCode(this.vid);
        result = 31 * result + Objects.hashCode(this.token);
        result = 31 * result + Objects.hashCode(this.tokenValidTime);
        result = 31 * result + Objects.hashCode(this.ip);
        result = 31 * result + Objects.hashCode(this.isQuickBooking);
        result = 31 * result + Objects.hashCode(this.clientID);
        result = 31 * result + Objects.hashCode(this.deviceID);
        result = 31 * result + Objects.hashCode(this.apiKey);
        result = 31 * result + Objects.hashCode(this.clientSign);
        result = 31 * result + Objects.hashCode(this.clientSignTime);
        result = 31 * result + Objects.hashCode(this.serviceCode);
        result = 31 * result + Objects.hashCode(this.site);
        result = 31 * result + Objects.hashCode(this.transactionID);
        result = 31 * result + Objects.hashCode(this.abTesting);
        result = 31 * result + Objects.hashCode(this.abTestingTracker);
        result = 31 * result + Objects.hashCode(this.clientSessionID);
        result = 31 * result + Objects.hashCode(this.subChannel);
        result = 31 * result + Objects.hashCode(this.culture);
        result = 31 * result + Objects.hashCode(this.ticket);
        result = 31 * result + Objects.hashCode(this.allianceInfo);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("language", language)
            .add("source", source)
            .add("currency", currency)
            .add("paymentCurrency", paymentCurrency)
            .add("paymentCurrencyList", paymentCurrencyList)
            .add("version", version)
            .add("uid", uid)
            .add("vid", vid)
            .add("token", token)
            .add("tokenValidTime", tokenValidTime)
            .add("ip", ip)
            .add("isQuickBooking", isQuickBooking)
            .add("clientID", clientID)
            .add("deviceID", deviceID)
            .add("apiKey", apiKey)
            .add("clientSign", clientSign)
            .add("clientSignTime", clientSignTime)
            .add("serviceCode", serviceCode)
            .add("site", site)
            .add("transactionID", transactionID)
            .add("abTesting", abTesting)
            .add("abTestingTracker", abTestingTracker)
            .add("clientSessionID", clientSessionID)
            .add("subChannel", subChannel)
            .add("culture", culture)
            .add("ticket", ticket)
            .add("allianceInfo", allianceInfo)
            .toString();
    }
}