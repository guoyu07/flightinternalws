/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.flightcommon.v1;

import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 舱位信息
 */
@DtoDoc("舱位信息")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ProductClassInfo", propOrder = {
    "clazz",
    "bookingClass",
    "dCity",
    "aCity"
})
@SuppressWarnings("all")
public class ProductClassInfo  {

    private static final long serialVersionUID = 1L;

    public ProductClassInfo(
        GaCabinClassType clazz, 
        String bookingClass, 
        CityInfo dCity, 
        CityInfo aCity) {
        this.clazz = clazz;
        this.bookingClass = bookingClass;
        this.dCity = dCity;
        this.aCity = aCity;
    }

    public ProductClassInfo() {
    }

    @FieldDoc("主舱位")
    @JsonProperty("Class")
    @XmlElement(name = "Class")
    private GaCabinClassType clazz;

    @FieldDoc("子舱")
    @JsonProperty("BookingClass")
    @XmlElement(name = "BookingClass")
    private String bookingClass;

    @FieldDoc("出发城市")
    @JsonProperty("DCity")
    @XmlElement(name = "DCity")
    private CityInfo dCity;

    @FieldDoc("到达城市")
    @JsonProperty("ACity")
    @XmlElement(name = "ACity")
    private CityInfo aCity;

    /**
     * 主舱位
     */
    public GaCabinClassType getClazz() {
        return this.clazz;
    }

    public void setClazz(GaCabinClassType clazz) {
        this.clazz = clazz;
    }

    /**
     * 子舱
     */
    public String getBookingClass() {
        return this.bookingClass;
    }

    public void setBookingClass(String bookingClass) {
        this.bookingClass = bookingClass;
    }

    /**
     * 出发城市
     */
    public CityInfo getDCity() {
        return this.dCity;
    }

    public void setDCity(CityInfo dCity) {
        this.dCity = dCity;
    }

    /**
     * 到达城市
     */
    public CityInfo getACity() {
        return this.aCity;
    }

    public void setACity(CityInfo aCity) {
        this.aCity = aCity;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final ProductClassInfo other = (ProductClassInfo)obj;
        return
            Objects.equal(this.clazz, other.clazz) && 
            Objects.equal(this.bookingClass, other.bookingClass) && 
            Objects.equal(this.dCity, other.dCity) && 
            Objects.equal(this.aCity, other.aCity);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.clazz);
        result = 31 * result + Objects.hashCode(this.bookingClass);
        result = 31 * result + Objects.hashCode(this.dCity);
        result = 31 * result + Objects.hashCode(this.aCity);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("clazz", clazz)
            .add("bookingClass", bookingClass)
            .add("dCity", dCity)
            .add("aCity", aCity)
            .toString();
    }
}