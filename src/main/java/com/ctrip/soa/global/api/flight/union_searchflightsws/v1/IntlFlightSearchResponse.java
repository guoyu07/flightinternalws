/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.flight.union_searchflightsws.v1;

import com.ctriposs.baiji.rpc.common.HasResponseStatus;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.ctriposs.baiji.rpc.common.types.ResponseStatusType;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementWrapper;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlRootElement(name = "IntlFlightSearchResponse", namespace = "http://soa.ctrip.com/Global/API/Flight/Union_SearchFlightsWS/v1")
@XmlType(name = "IntlFlightSearchResponse", propOrder = {
    "searchResult",
    "redirectURI",
    "queryTimelineList",
    "responseStatus",
    "header"
})
@SuppressWarnings("all")
public class IntlFlightSearchResponse implements HasResponseStatus {

    private static final long serialVersionUID = 1L;

    public IntlFlightSearchResponse(
        SearchResultType searchResult, 
        String redirectURI, 
        List<QueryTimelineType> queryTimelineList, 
        ResponseStatusType responseStatus, 
        Header2 header) {
        this.searchResult = searchResult;
        this.redirectURI = redirectURI;
        this.queryTimelineList = queryTimelineList;
        this.responseStatus = responseStatus;
        this.header = header;
    }

    public IntlFlightSearchResponse() {
    }

    @FieldDoc("Search result")
    @JsonProperty("SearchResult")
    @XmlElement(name = "SearchResult")
    private SearchResultType searchResult;

    @FieldDoc("Chinese transfer page. Parameter instruction")
    @JsonProperty("RedirectURI")
    @XmlElement(name = "RedirectURI")
    private String redirectURI;

    @FieldDoc("Query time line")
    @JsonProperty("QueryTimelineList")
    @XmlElement(name = "QueryTimeline")
    @XmlElementWrapper(name = "QueryTimelineList")
    private List<QueryTimelineType> queryTimelineList;

    @JsonProperty("ResponseStatus")
    @XmlElement(name = "ResponseStatus")
    private ResponseStatusType responseStatus;

    @JsonProperty("Header")
    @XmlElement(name = "Header")
    private Header2 header;

    /**
     * Search result
     */
    public SearchResultType getSearchResult() {
        return this.searchResult;
    }

    public void setSearchResult(SearchResultType searchResult) {
        this.searchResult = searchResult;
    }

    /**
     * Chinese transfer page. Parameter instruction
     */
    public String getRedirectURI() {
        return this.redirectURI;
    }

    public void setRedirectURI(String redirectURI) {
        this.redirectURI = redirectURI;
    }

    /**
     * Query time line
     */
    public List<QueryTimelineType> getQueryTimelineList() {
        return this.queryTimelineList;
    }

    public void setQueryTimelineList(List<QueryTimelineType> queryTimelineList) {
        this.queryTimelineList = queryTimelineList;
    }

    public ResponseStatusType getResponseStatus() {
        return this.responseStatus;
    }

    public void setResponseStatus(ResponseStatusType responseStatus) {
        this.responseStatus = responseStatus;
    }

    public Header2 getHeader() {
        return this.header;
    }

    public void setHeader(Header2 header) {
        this.header = header;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final IntlFlightSearchResponse other = (IntlFlightSearchResponse)obj;
        return
            Objects.equal(this.searchResult, other.searchResult) && 
            Objects.equal(this.redirectURI, other.redirectURI) && 
            Objects.equal(this.queryTimelineList, other.queryTimelineList) && 
            Objects.equal(this.responseStatus, other.responseStatus) && 
            Objects.equal(this.header, other.header);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.searchResult);
        result = 31 * result + Objects.hashCode(this.redirectURI);
        result = 31 * result + Objects.hashCode(this.queryTimelineList);
        result = 31 * result + Objects.hashCode(this.responseStatus);
        result = 31 * result + Objects.hashCode(this.header);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("searchResult", searchResult)
            .add("redirectURI", redirectURI)
            .add("queryTimelineList", queryTimelineList)
            .add("responseStatus", responseStatus)
            .add("header", header)
            .toString();
    }
}