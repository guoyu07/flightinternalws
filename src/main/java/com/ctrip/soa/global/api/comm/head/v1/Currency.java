// Generated by eBay Common SDK Platform
package com.ctrip.soa.global.api.comm.head.v1;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlEnumValue;

/**
 * 货币类型
 */
@XmlType(name = "Currency")
@XmlEnum
@SuppressWarnings("all")
public enum Currency {

    @XmlEnumValue("CNY")
    CNY(0, "CNY"),

    @XmlEnumValue("USD")
    USD(1, "USD"),

    @XmlEnumValue("EUR")
    EUR(2, "EUR"),

    @XmlEnumValue("GBP")
    GBP(3, "GBP"),

    @XmlEnumValue("AUD")
    AUD(4, "AUD"),

    @XmlEnumValue("CAD")
    CAD(5, "CAD"),

    @XmlEnumValue("CHF")
    CHF(6, "CHF"),

    @XmlEnumValue("DKK")
    DKK(7, "DKK"),

    @XmlEnumValue("HKD")
    HKD(8, "HKD"),

    @XmlEnumValue("JPY")
    JPY(9, "JPY"),

    @XmlEnumValue("KRW")
    KRW(10, "KRW"),

    @XmlEnumValue("MOP")
    MOP(11, "MOP"),

    @XmlEnumValue("MYR")
    MYR(12, "MYR"),

    @XmlEnumValue("NZD")
    NZD(13, "NZD"),

    @XmlEnumValue("SEK")
    SEK(14, "SEK"),

    @XmlEnumValue("SGD")
    SGD(15, "SGD"),

    @XmlEnumValue("PHP")
    PHP(16, "PHP"),

    @XmlEnumValue("RUB")
    RUB(17, "RUB"),

    @XmlEnumValue("TWD")
    TWD(18, "TWD"),

    @XmlEnumValue("THB")
    THB(19, "THB"),

    @XmlEnumValue("VND")
    VND(20, "VND"),

    @XmlEnumValue("IDR")
    IDR(21, "IDR"),

    @XmlEnumValue("INR")
    INR(22, "INR"),

    @XmlEnumValue("BRL")
    BRL(23, "BRL"),

    @XmlEnumValue("PLN")
    PLN(24, "PLN"),

    @XmlEnumValue("TRY")
    TRY(25, "TRY");

    private final int intValue;
    private final String value;

    Currency(int intValue, String value) {
        this.intValue = intValue;
        this.value = value;
    }

    public int getValue() {
        return intValue;
    }

    @JsonValue
    public String value() {
        return value;
    }

    @JsonCreator
    public static Currency fromValue(String v) {
        for (Currency e: Currency.values()) {
            if (e.value.equals(v)) {
                return e;
            }
        }
        throw new IllegalArgumentException(v);
    }

    public static Currency findByValue(int value) {
        switch (value) {
            case 0:
                return CNY;
            case 1:
                return USD;
            case 2:
                return EUR;
            case 3:
                return GBP;
            case 4:
                return AUD;
            case 5:
                return CAD;
            case 6:
                return CHF;
            case 7:
                return DKK;
            case 8:
                return HKD;
            case 9:
                return JPY;
            case 10:
                return KRW;
            case 11:
                return MOP;
            case 12:
                return MYR;
            case 13:
                return NZD;
            case 14:
                return SEK;
            case 15:
                return SGD;
            case 16:
                return PHP;
            case 17:
                return RUB;
            case 18:
                return TWD;
            case 19:
                return THB;
            case 20:
                return VND;
            case 21:
                return IDR;
            case 22:
                return INR;
            case 23:
                return BRL;
            case 24:
                return PLN;
            case 25:
                return TRY;
            default:
                return null;
        }
    }
}