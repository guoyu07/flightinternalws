/**
 * Autogenerated by soa-sdk-toolkit
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ctrip.soa.global.api.gaflightrevisecondition.v1;

import com.ctrip.soa.global.api.flightcommon.v1.GaContactInfo;
import com.ctrip.soa.global.api.flightcommon.v1.GaDeliveryInfo;
import com.ctrip.soa.global.api.flightcommon.v1.GaFlightPaymentInfo;
import com.ctrip.soa.global.api.flightcommon.v1.GaFlightWayType;
import com.ctrip.soa.global.api.flightcommon.v1.GaPassengerInfo;
import com.ctrip.soa.global.api.flightcommon.v1.RelatedOrderID;
import com.ctriposs.baiji.rpc.common.apidoc.DtoDoc;
import com.ctriposs.baiji.rpc.common.apidoc.FieldDoc;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.math.BigDecimal;
import java.util.Calendar;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 订单基本信息
 */
@DtoDoc("订单基本信息")
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FRCOrderBasicInfo", propOrder = {
    "orderID",
    "orderStatus",
    "uid",
    "ticketValidityPeriod",
    "ticketValidityPeriodLong",
    "orderTotalPrice",
    "cnyOrderTotalPrice",
    "deliverFee",
    "cnyDeliverFee",
    "cCardPayFee",
    "cnycCardPayFee",
    "flightWayType",
    "flightWay",
    "contactInfo",
    "flightClass",
    "couponDeduction",
    "cnyCouponDeduction",
    "usedTicketFee",
    "cnyUsedTicketFee",
    "packageAttachFee",
    "cnyPackageAttachFee",
    "printTicketTime",
    "printTicketTimeLong",
    "specialPriceType",
    "flightAgency",
    "source",
    "ticketStatus",
    "relatedOrderIDList",
    "paymentInfo",
    "deliveryInfo",
    "segmentInfoList",
    "passengerInfoList",
    "usedDeliverFee",
    "cnyUsedDeliverFee",
    "contactorEditable",
    "canRefundTax",
    "intlRefundTotalFee",
    "cnyIntlRefundTotalFee",
    "intlRefundTotalFeeAvailable",
    "intlRefundFeeByCarrier",
    "cnyIntlRefundFeeByCarrier",
    "intlRefundFeeByConsolidator",
    "cnyIntlRefundFeeByConsolidator",
    "intlRefundFeeByCtrip",
    "cnyIntlRefundFeeByCtrip",
    "intlTotalRefundServiceFee",
    "cnyIntlTotalRefundServiceFee",
    "endNote"
})
@SuppressWarnings("all")
public class FRCOrderBasicInfo  {

    private static final long serialVersionUID = 1L;

    public FRCOrderBasicInfo(
        long orderID, 
        String orderStatus, 
        String uid, 
        Calendar ticketValidityPeriod, 
        long ticketValidityPeriodLong, 
        BigDecimal orderTotalPrice, 
        BigDecimal cnyOrderTotalPrice, 
        BigDecimal deliverFee, 
        BigDecimal cnyDeliverFee, 
        BigDecimal cCardPayFee, 
        BigDecimal cnycCardPayFee, 
        String flightWayType, 
        GaFlightWayType flightWay, 
        GaContactInfo contactInfo, 
        String flightClass, 
        BigDecimal couponDeduction, 
        BigDecimal cnyCouponDeduction, 
        BigDecimal usedTicketFee, 
        BigDecimal cnyUsedTicketFee, 
        BigDecimal packageAttachFee, 
        BigDecimal cnyPackageAttachFee, 
        Calendar printTicketTime, 
        long printTicketTimeLong, 
        String specialPriceType, 
        int flightAgency, 
        String source, 
        String ticketStatus, 
        List<RelatedOrderID> relatedOrderIDList, 
        GaFlightPaymentInfo paymentInfo, 
        GaDeliveryInfo deliveryInfo, 
        List<FRCSegmentInfo> segmentInfoList, 
        List<GaPassengerInfo> passengerInfoList, 
        BigDecimal usedDeliverFee, 
        BigDecimal cnyUsedDeliverFee, 
        boolean contactorEditable, 
        boolean canRefundTax, 
        BigDecimal intlRefundTotalFee, 
        BigDecimal cnyIntlRefundTotalFee, 
        boolean intlRefundTotalFeeAvailable, 
        BigDecimal intlRefundFeeByCarrier, 
        BigDecimal cnyIntlRefundFeeByCarrier, 
        BigDecimal intlRefundFeeByConsolidator, 
        BigDecimal cnyIntlRefundFeeByConsolidator, 
        BigDecimal intlRefundFeeByCtrip, 
        BigDecimal cnyIntlRefundFeeByCtrip, 
        BigDecimal intlTotalRefundServiceFee, 
        BigDecimal cnyIntlTotalRefundServiceFee, 
        String endNote) {
        this.orderID = orderID;
        this.orderStatus = orderStatus;
        this.uid = uid;
        this.ticketValidityPeriod = ticketValidityPeriod;
        this.ticketValidityPeriodLong = ticketValidityPeriodLong;
        this.orderTotalPrice = orderTotalPrice;
        this.cnyOrderTotalPrice = cnyOrderTotalPrice;
        this.deliverFee = deliverFee;
        this.cnyDeliverFee = cnyDeliverFee;
        this.cCardPayFee = cCardPayFee;
        this.cnycCardPayFee = cnycCardPayFee;
        this.flightWayType = flightWayType;
        this.flightWay = flightWay;
        this.contactInfo = contactInfo;
        this.flightClass = flightClass;
        this.couponDeduction = couponDeduction;
        this.cnyCouponDeduction = cnyCouponDeduction;
        this.usedTicketFee = usedTicketFee;
        this.cnyUsedTicketFee = cnyUsedTicketFee;
        this.packageAttachFee = packageAttachFee;
        this.cnyPackageAttachFee = cnyPackageAttachFee;
        this.printTicketTime = printTicketTime;
        this.printTicketTimeLong = printTicketTimeLong;
        this.specialPriceType = specialPriceType;
        this.flightAgency = flightAgency;
        this.source = source;
        this.ticketStatus = ticketStatus;
        this.relatedOrderIDList = relatedOrderIDList;
        this.paymentInfo = paymentInfo;
        this.deliveryInfo = deliveryInfo;
        this.segmentInfoList = segmentInfoList;
        this.passengerInfoList = passengerInfoList;
        this.usedDeliverFee = usedDeliverFee;
        this.cnyUsedDeliverFee = cnyUsedDeliverFee;
        this.contactorEditable = contactorEditable;
        this.canRefundTax = canRefundTax;
        this.intlRefundTotalFee = intlRefundTotalFee;
        this.cnyIntlRefundTotalFee = cnyIntlRefundTotalFee;
        this.intlRefundTotalFeeAvailable = intlRefundTotalFeeAvailable;
        this.intlRefundFeeByCarrier = intlRefundFeeByCarrier;
        this.cnyIntlRefundFeeByCarrier = cnyIntlRefundFeeByCarrier;
        this.intlRefundFeeByConsolidator = intlRefundFeeByConsolidator;
        this.cnyIntlRefundFeeByConsolidator = cnyIntlRefundFeeByConsolidator;
        this.intlRefundFeeByCtrip = intlRefundFeeByCtrip;
        this.cnyIntlRefundFeeByCtrip = cnyIntlRefundFeeByCtrip;
        this.intlTotalRefundServiceFee = intlTotalRefundServiceFee;
        this.cnyIntlTotalRefundServiceFee = cnyIntlTotalRefundServiceFee;
        this.endNote = endNote;
    }

    public FRCOrderBasicInfo() {
    }

    @FieldDoc("订单号")
    @JsonProperty("OrderID")
    @XmlElement(name = "OrderID")
    private long orderID;

    @FieldDoc("订单状态" +
            "U-未提交（已创建未提交），" +
            "W-已提交未处理，" +
            "P-处理中（已出票），" +
            "J-出票中，" +
            "G-已支付出票中，" +
            "H-已扣款出票中，" +
            "R-全部退票（已退票），" +
            "C-已取消，" +
            "T-部分退票，" +
            "S-已成交，" +
            "E-待支付，" +
            "F-待扣款，" +
            "Z-未出行，" +
            "D-取消申请中，")
    @JsonProperty("OrderStatus")
    @XmlElement(name = "OrderStatus")
    private String orderStatus;

    @FieldDoc("用户ID")
    @JsonProperty("Uid")
    @XmlElement(name = "Uid")
    private String uid;

    @FieldDoc("机票有效期")
    @JsonProperty("TicketValidityPeriod")
    @XmlElement(name = "TicketValidityPeriod")
    private Calendar ticketValidityPeriod;

    @FieldDoc("机票有效期")
    @JsonProperty("TicketValidityPeriodLong")
    @XmlElement(name = "TicketValidityPeriodLong")
    private long ticketValidityPeriodLong;

    @FieldDoc("订单总价(支付币种)")
    @JsonProperty("OrderTotalPrice")
    @XmlElement(name = "OrderTotalPrice")
    private BigDecimal orderTotalPrice;

    @FieldDoc("订单总价(人民币)")
    @JsonProperty("CNYOrderTotalPrice")
    @XmlElement(name = "CNYOrderTotalPrice")
    private BigDecimal cnyOrderTotalPrice;

    @FieldDoc("配送费(支付币种)")
    @JsonProperty("DeliverFee")
    @XmlElement(name = "DeliverFee")
    private BigDecimal deliverFee;

    @FieldDoc("配送费(人民币)")
    @JsonProperty("CNYDeliverFee")
    @XmlElement(name = "CNYDeliverFee")
    private BigDecimal cnyDeliverFee;

    @FieldDoc("外卡服务费(支付币种)")
    @JsonProperty("CCardPayFee")
    @XmlElement(name = "CCardPayFee")
    private BigDecimal cCardPayFee;

    @FieldDoc("外卡服务费(人民币)")
    @JsonProperty("CNYCCardPayFee")
    @XmlElement(name = "CNYCCardPayFee")
    private BigDecimal cnycCardPayFee;

    @FieldDoc("航段类型" +
            "S 单程" +
            "D 往返" +
            "M 多程")
    @JsonProperty("FlightWayType")
    @XmlElement(name = "FlightWayType")
    private String flightWayType;

    @FieldDoc("航程类型")
    @JsonProperty("FlightWay")
    @XmlElement(name = "FlightWay")
    private GaFlightWayType flightWay;

    @FieldDoc("联系人信息")
    @JsonProperty("ContactInfo")
    @XmlElement(name = "ContactInfo")
    private GaContactInfo contactInfo;

    @FieldDoc("航班类型-I国际 N国内")
    @JsonProperty("FlightClass")
    @XmlElement(name = "FlightClass")
    private String flightClass;

    @FieldDoc("优惠券立减(支付币种)")
    @JsonProperty("CouponDeduction")
    @XmlElement(name = "CouponDeduction")
    private BigDecimal couponDeduction;

    @FieldDoc("优惠券立减(人民币)")
    @JsonProperty("CNYCouponDeduction")
    @XmlElement(name = "CNYCouponDeduction")
    private BigDecimal cnyCouponDeduction;

    @FieldDoc("已使用的机票费用(支付币种)")
    @JsonProperty("UsedTicketFee")
    @XmlElement(name = "UsedTicketFee")
    private BigDecimal usedTicketFee;

    @FieldDoc("已使用的机票费用(人民币)")
    @JsonProperty("CNYUsedTicketFee")
    @XmlElement(name = "CNYUsedTicketFee")
    private BigDecimal cnyUsedTicketFee;

    @FieldDoc("(支付币种)打包附加产品总金额 附加产品，优惠券老版")
    @JsonProperty("PackageAttachFee")
    @XmlElement(name = "PackageAttachFee")
    private BigDecimal packageAttachFee;

    @FieldDoc("(人民币)打包附加产品总金额 附加产品，优惠券老版")
    @JsonProperty("CNYPackageAttachFee")
    @XmlElement(name = "CNYPackageAttachFee")
    private BigDecimal cnyPackageAttachFee;

    @FieldDoc("出票时间")
    @JsonProperty("PrintTicketTime")
    @XmlElement(name = "PrintTicketTime")
    private Calendar printTicketTime;

    @FieldDoc("出票时间")
    @JsonProperty("PrintTicketTimeLong")
    @XmlElement(name = "PrintTicketTimeLong")
    private long printTicketTimeLong;

    @FieldDoc("订单特价类型")
    @JsonProperty("SpecialPriceType")
    @XmlElement(name = "SpecialPriceType")
    private String specialPriceType;

    @FieldDoc("票台ID")
    @JsonProperty("FlightAgency")
    @XmlElement(name = "FlightAgency")
    private int flightAgency;

    @FieldDoc("订单来源")
    @JsonProperty("Source")
    @XmlElement(name = "Source")
    private String source;

    @FieldDoc("暂缓单  D 暂缓单  A 立即单 客票状态")
    @JsonProperty("TicketStatus")
    @XmlElement(name = "TicketStatus")
    private String ticketStatus;

    @FieldDoc("订单关联订单信息")
    @JsonProperty("RelatedOrderIDList")
    @XmlElement(name = "RelatedOrderIDList")
    private List<RelatedOrderID> relatedOrderIDList;

    @FieldDoc("支付信息")
    @JsonProperty("PaymentInfo")
    @XmlElement(name = "PaymentInfo")
    private GaFlightPaymentInfo paymentInfo;

    @FieldDoc("配送信息")
    @JsonProperty("DeliveryInfo")
    @XmlElement(name = "DeliveryInfo")
    private GaDeliveryInfo deliveryInfo;

    @FieldDoc("航段信息")
    @JsonProperty("SegmentInfoList")
    @XmlElement(name = "SegmentInfoList")
    private List<FRCSegmentInfo> segmentInfoList;

    @FieldDoc("乘客信息")
    @JsonProperty("PassengerInfoList")
    @XmlElement(name = "PassengerInfoList")
    private List<GaPassengerInfo> passengerInfoList;

    @FieldDoc("已使用配送费(支付币种)")
    @JsonProperty("UsedDeliverFee")
    @XmlElement(name = "UsedDeliverFee")
    private BigDecimal usedDeliverFee;

    @FieldDoc("已使用配送费(人民币)")
    @JsonProperty("CNYUsedDeliverFee")
    @XmlElement(name = "CNYUsedDeliverFee")
    private BigDecimal cnyUsedDeliverFee;

    @FieldDoc("联系人是否可编辑  true 为可编辑，false 为不可编辑 默认为false")
    @JsonProperty("ContactorEditable")
    @XmlElement(name = "ContactorEditable")
    private boolean contactorEditable;

    @FieldDoc("是否可退税")
    @JsonProperty("CanRefundTax")
    @XmlElement(name = "CanRefundTax")
    private boolean canRefundTax;

    @FieldDoc("国际订单全程退票费(单人)")
    @JsonProperty("IntlRefundTotalFee")
    @XmlElement(name = "IntlRefundTotalFee")
    private BigDecimal intlRefundTotalFee;

    @FieldDoc("国际订单全程退票费(单人)(人民币)")
    @JsonProperty("CNYIntlRefundTotalFee")
    @XmlElement(name = "CNYIntlRefundTotalFee")
    private BigDecimal cnyIntlRefundTotalFee;

    @FieldDoc("是否能计算出国际订单全程退票费(单人)")
    @JsonProperty("IntlRefundTotalFeeAvailable")
    @XmlElement(name = "IntlRefundTotalFeeAvailable")
    private boolean intlRefundTotalFeeAvailable;

    @FieldDoc("航司退票服务费")
    @JsonProperty("IntlRefundFeeByCarrier")
    @XmlElement(name = "IntlRefundFeeByCarrier")
    private BigDecimal intlRefundFeeByCarrier;

    @FieldDoc("航司退票服务费(人民币)")
    @JsonProperty("CNYIntlRefundFeeByCarrier")
    @XmlElement(name = "CNYIntlRefundFeeByCarrier")
    private BigDecimal cnyIntlRefundFeeByCarrier;

    @FieldDoc("合作票台退票服务费")
    @JsonProperty("IntlRefundFeeByConsolidator")
    @XmlElement(name = "IntlRefundFeeByConsolidator")
    private BigDecimal intlRefundFeeByConsolidator;

    @FieldDoc("合作票台退票服务费(人民币)")
    @JsonProperty("CNYIntlRefundFeeByConsolidator")
    @XmlElement(name = "CNYIntlRefundFeeByConsolidator")
    private BigDecimal cnyIntlRefundFeeByConsolidator;

    @FieldDoc("携程退票服务费")
    @JsonProperty("IntlRefundFeeByCtrip")
    @XmlElement(name = "IntlRefundFeeByCtrip")
    private BigDecimal intlRefundFeeByCtrip;

    @FieldDoc("携程退票服务费(人民币)")
    @JsonProperty("CNYIntlRefundFeeByCtrip")
    @XmlElement(name = "CNYIntlRefundFeeByCtrip")
    private BigDecimal cnyIntlRefundFeeByCtrip;

    @FieldDoc("国际退票服务费总额")
    @JsonProperty("IntlTotalRefundServiceFee")
    @XmlElement(name = "IntlTotalRefundServiceFee")
    private BigDecimal intlTotalRefundServiceFee;

    @FieldDoc("国际退票服务费总额(人民币)")
    @JsonProperty("CNYIntlTotalRefundServiceFee")
    @XmlElement(name = "CNYIntlTotalRefundServiceFee")
    private BigDecimal cnyIntlTotalRefundServiceFee;

    @FieldDoc("NoShow政策信息")
    @JsonProperty("EndNote")
    @XmlElement(name = "EndNote")
    private String endNote;

    /**
     * 订单号
     */
    public long getOrderID() {
        return this.orderID;
    }

    public void setOrderID(long orderID) {
        this.orderID = orderID;
    }

    /**
     * 订单状态
     *             U-未提交（已创建未提交），
     *             W-已提交未处理，
     *             P-处理中（已出票），
     *             J-出票中，
     *             G-已支付出票中，
     *             H-已扣款出票中，
     *             R-全部退票（已退票），
     *             C-已取消，
     *             T-部分退票，
     *             S-已成交，
     *             E-待支付，
     *             F-待扣款，
     *             Z-未出行，
     *             D-取消申请中，
     */
    public String getOrderStatus() {
        return this.orderStatus;
    }

    public void setOrderStatus(String orderStatus) {
        this.orderStatus = orderStatus;
    }

    /**
     * 用户ID
     */
    public String getUid() {
        return this.uid;
    }

    public void setUid(String uid) {
        this.uid = uid;
    }

    /**
     * 机票有效期
     */
    public Calendar getTicketValidityPeriod() {
        return this.ticketValidityPeriod;
    }

    public void setTicketValidityPeriod(Calendar ticketValidityPeriod) {
        this.ticketValidityPeriod = ticketValidityPeriod;
    }

    /**
     * 机票有效期
     */
    public long getTicketValidityPeriodLong() {
        return this.ticketValidityPeriodLong;
    }

    public void setTicketValidityPeriodLong(long ticketValidityPeriodLong) {
        this.ticketValidityPeriodLong = ticketValidityPeriodLong;
    }

    /**
     * 订单总价(支付币种)
     */
    public BigDecimal getOrderTotalPrice() {
        return this.orderTotalPrice;
    }

    public void setOrderTotalPrice(BigDecimal orderTotalPrice) {
        this.orderTotalPrice = orderTotalPrice;
    }

    /**
     * 订单总价(人民币)
     */
    public BigDecimal getCnyOrderTotalPrice() {
        return this.cnyOrderTotalPrice;
    }

    public void setCnyOrderTotalPrice(BigDecimal cnyOrderTotalPrice) {
        this.cnyOrderTotalPrice = cnyOrderTotalPrice;
    }

    /**
     * 配送费(支付币种)
     */
    public BigDecimal getDeliverFee() {
        return this.deliverFee;
    }

    public void setDeliverFee(BigDecimal deliverFee) {
        this.deliverFee = deliverFee;
    }

    /**
     * 配送费(人民币)
     */
    public BigDecimal getCnyDeliverFee() {
        return this.cnyDeliverFee;
    }

    public void setCnyDeliverFee(BigDecimal cnyDeliverFee) {
        this.cnyDeliverFee = cnyDeliverFee;
    }

    /**
     * 外卡服务费(支付币种)
     */
    public BigDecimal getCCardPayFee() {
        return this.cCardPayFee;
    }

    public void setCCardPayFee(BigDecimal cCardPayFee) {
        this.cCardPayFee = cCardPayFee;
    }

    /**
     * 外卡服务费(人民币)
     */
    public BigDecimal getCnycCardPayFee() {
        return this.cnycCardPayFee;
    }

    public void setCnycCardPayFee(BigDecimal cnycCardPayFee) {
        this.cnycCardPayFee = cnycCardPayFee;
    }

    /**
     * 航段类型
     *             S 单程
     *             D 往返
     *             M 多程
     */
    public String getFlightWayType() {
        return this.flightWayType;
    }

    public void setFlightWayType(String flightWayType) {
        this.flightWayType = flightWayType;
    }

    /**
     * 航程类型
     */
    public GaFlightWayType getFlightWay() {
        return this.flightWay;
    }

    public void setFlightWay(GaFlightWayType flightWay) {
        this.flightWay = flightWay;
    }

    /**
     * 联系人信息
     */
    public GaContactInfo getContactInfo() {
        return this.contactInfo;
    }

    public void setContactInfo(GaContactInfo contactInfo) {
        this.contactInfo = contactInfo;
    }

    /**
     * 航班类型-I国际 N国内
     */
    public String getFlightClass() {
        return this.flightClass;
    }

    public void setFlightClass(String flightClass) {
        this.flightClass = flightClass;
    }

    /**
     * 优惠券立减(支付币种)
     */
    public BigDecimal getCouponDeduction() {
        return this.couponDeduction;
    }

    public void setCouponDeduction(BigDecimal couponDeduction) {
        this.couponDeduction = couponDeduction;
    }

    /**
     * 优惠券立减(人民币)
     */
    public BigDecimal getCnyCouponDeduction() {
        return this.cnyCouponDeduction;
    }

    public void setCnyCouponDeduction(BigDecimal cnyCouponDeduction) {
        this.cnyCouponDeduction = cnyCouponDeduction;
    }

    /**
     * 已使用的机票费用(支付币种)
     */
    public BigDecimal getUsedTicketFee() {
        return this.usedTicketFee;
    }

    public void setUsedTicketFee(BigDecimal usedTicketFee) {
        this.usedTicketFee = usedTicketFee;
    }

    /**
     * 已使用的机票费用(人民币)
     */
    public BigDecimal getCnyUsedTicketFee() {
        return this.cnyUsedTicketFee;
    }

    public void setCnyUsedTicketFee(BigDecimal cnyUsedTicketFee) {
        this.cnyUsedTicketFee = cnyUsedTicketFee;
    }

    /**
     * (支付币种)打包附加产品总金额 附加产品，优惠券老版
     */
    public BigDecimal getPackageAttachFee() {
        return this.packageAttachFee;
    }

    public void setPackageAttachFee(BigDecimal packageAttachFee) {
        this.packageAttachFee = packageAttachFee;
    }

    /**
     * (人民币)打包附加产品总金额 附加产品，优惠券老版
     */
    public BigDecimal getCnyPackageAttachFee() {
        return this.cnyPackageAttachFee;
    }

    public void setCnyPackageAttachFee(BigDecimal cnyPackageAttachFee) {
        this.cnyPackageAttachFee = cnyPackageAttachFee;
    }

    /**
     * 出票时间
     */
    public Calendar getPrintTicketTime() {
        return this.printTicketTime;
    }

    public void setPrintTicketTime(Calendar printTicketTime) {
        this.printTicketTime = printTicketTime;
    }

    /**
     * 出票时间
     */
    public long getPrintTicketTimeLong() {
        return this.printTicketTimeLong;
    }

    public void setPrintTicketTimeLong(long printTicketTimeLong) {
        this.printTicketTimeLong = printTicketTimeLong;
    }

    /**
     * 订单特价类型
     */
    public String getSpecialPriceType() {
        return this.specialPriceType;
    }

    public void setSpecialPriceType(String specialPriceType) {
        this.specialPriceType = specialPriceType;
    }

    /**
     * 票台ID
     */
    public int getFlightAgency() {
        return this.flightAgency;
    }

    public void setFlightAgency(int flightAgency) {
        this.flightAgency = flightAgency;
    }

    /**
     * 订单来源
     */
    public String getSource() {
        return this.source;
    }

    public void setSource(String source) {
        this.source = source;
    }

    /**
     * 暂缓单  D 暂缓单  A 立即单 客票状态
     */
    public String getTicketStatus() {
        return this.ticketStatus;
    }

    public void setTicketStatus(String ticketStatus) {
        this.ticketStatus = ticketStatus;
    }

    /**
     * 订单关联订单信息
     */
    public List<RelatedOrderID> getRelatedOrderIDList() {
        return this.relatedOrderIDList;
    }

    public void setRelatedOrderIDList(List<RelatedOrderID> relatedOrderIDList) {
        this.relatedOrderIDList = relatedOrderIDList;
    }

    /**
     * 支付信息
     */
    public GaFlightPaymentInfo getPaymentInfo() {
        return this.paymentInfo;
    }

    public void setPaymentInfo(GaFlightPaymentInfo paymentInfo) {
        this.paymentInfo = paymentInfo;
    }

    /**
     * 配送信息
     */
    public GaDeliveryInfo getDeliveryInfo() {
        return this.deliveryInfo;
    }

    public void setDeliveryInfo(GaDeliveryInfo deliveryInfo) {
        this.deliveryInfo = deliveryInfo;
    }

    /**
     * 航段信息
     */
    public List<FRCSegmentInfo> getSegmentInfoList() {
        return this.segmentInfoList;
    }

    public void setSegmentInfoList(List<FRCSegmentInfo> segmentInfoList) {
        this.segmentInfoList = segmentInfoList;
    }

    /**
     * 乘客信息
     */
    public List<GaPassengerInfo> getPassengerInfoList() {
        return this.passengerInfoList;
    }

    public void setPassengerInfoList(List<GaPassengerInfo> passengerInfoList) {
        this.passengerInfoList = passengerInfoList;
    }

    /**
     * 已使用配送费(支付币种)
     */
    public BigDecimal getUsedDeliverFee() {
        return this.usedDeliverFee;
    }

    public void setUsedDeliverFee(BigDecimal usedDeliverFee) {
        this.usedDeliverFee = usedDeliverFee;
    }

    /**
     * 已使用配送费(人民币)
     */
    public BigDecimal getCnyUsedDeliverFee() {
        return this.cnyUsedDeliverFee;
    }

    public void setCnyUsedDeliverFee(BigDecimal cnyUsedDeliverFee) {
        this.cnyUsedDeliverFee = cnyUsedDeliverFee;
    }

    /**
     * 联系人是否可编辑  true 为可编辑，false 为不可编辑 默认为false
     */
    public boolean getContactorEditable() {
        return this.contactorEditable;
    }

    public void setContactorEditable(boolean contactorEditable) {
        this.contactorEditable = contactorEditable;
    }

    /**
     * 是否可退税
     */
    public boolean getCanRefundTax() {
        return this.canRefundTax;
    }

    public void setCanRefundTax(boolean canRefundTax) {
        this.canRefundTax = canRefundTax;
    }

    /**
     * 国际订单全程退票费(单人)
     */
    public BigDecimal getIntlRefundTotalFee() {
        return this.intlRefundTotalFee;
    }

    public void setIntlRefundTotalFee(BigDecimal intlRefundTotalFee) {
        this.intlRefundTotalFee = intlRefundTotalFee;
    }

    /**
     * 国际订单全程退票费(单人)(人民币)
     */
    public BigDecimal getCnyIntlRefundTotalFee() {
        return this.cnyIntlRefundTotalFee;
    }

    public void setCnyIntlRefundTotalFee(BigDecimal cnyIntlRefundTotalFee) {
        this.cnyIntlRefundTotalFee = cnyIntlRefundTotalFee;
    }

    /**
     * 是否能计算出国际订单全程退票费(单人)
     */
    public boolean getIntlRefundTotalFeeAvailable() {
        return this.intlRefundTotalFeeAvailable;
    }

    public void setIntlRefundTotalFeeAvailable(boolean intlRefundTotalFeeAvailable) {
        this.intlRefundTotalFeeAvailable = intlRefundTotalFeeAvailable;
    }

    /**
     * 航司退票服务费
     */
    public BigDecimal getIntlRefundFeeByCarrier() {
        return this.intlRefundFeeByCarrier;
    }

    public void setIntlRefundFeeByCarrier(BigDecimal intlRefundFeeByCarrier) {
        this.intlRefundFeeByCarrier = intlRefundFeeByCarrier;
    }

    /**
     * 航司退票服务费(人民币)
     */
    public BigDecimal getCnyIntlRefundFeeByCarrier() {
        return this.cnyIntlRefundFeeByCarrier;
    }

    public void setCnyIntlRefundFeeByCarrier(BigDecimal cnyIntlRefundFeeByCarrier) {
        this.cnyIntlRefundFeeByCarrier = cnyIntlRefundFeeByCarrier;
    }

    /**
     * 合作票台退票服务费
     */
    public BigDecimal getIntlRefundFeeByConsolidator() {
        return this.intlRefundFeeByConsolidator;
    }

    public void setIntlRefundFeeByConsolidator(BigDecimal intlRefundFeeByConsolidator) {
        this.intlRefundFeeByConsolidator = intlRefundFeeByConsolidator;
    }

    /**
     * 合作票台退票服务费(人民币)
     */
    public BigDecimal getCnyIntlRefundFeeByConsolidator() {
        return this.cnyIntlRefundFeeByConsolidator;
    }

    public void setCnyIntlRefundFeeByConsolidator(BigDecimal cnyIntlRefundFeeByConsolidator) {
        this.cnyIntlRefundFeeByConsolidator = cnyIntlRefundFeeByConsolidator;
    }

    /**
     * 携程退票服务费
     */
    public BigDecimal getIntlRefundFeeByCtrip() {
        return this.intlRefundFeeByCtrip;
    }

    public void setIntlRefundFeeByCtrip(BigDecimal intlRefundFeeByCtrip) {
        this.intlRefundFeeByCtrip = intlRefundFeeByCtrip;
    }

    /**
     * 携程退票服务费(人民币)
     */
    public BigDecimal getCnyIntlRefundFeeByCtrip() {
        return this.cnyIntlRefundFeeByCtrip;
    }

    public void setCnyIntlRefundFeeByCtrip(BigDecimal cnyIntlRefundFeeByCtrip) {
        this.cnyIntlRefundFeeByCtrip = cnyIntlRefundFeeByCtrip;
    }

    /**
     * 国际退票服务费总额
     */
    public BigDecimal getIntlTotalRefundServiceFee() {
        return this.intlTotalRefundServiceFee;
    }

    public void setIntlTotalRefundServiceFee(BigDecimal intlTotalRefundServiceFee) {
        this.intlTotalRefundServiceFee = intlTotalRefundServiceFee;
    }

    /**
     * 国际退票服务费总额(人民币)
     */
    public BigDecimal getCnyIntlTotalRefundServiceFee() {
        return this.cnyIntlTotalRefundServiceFee;
    }

    public void setCnyIntlTotalRefundServiceFee(BigDecimal cnyIntlTotalRefundServiceFee) {
        this.cnyIntlTotalRefundServiceFee = cnyIntlTotalRefundServiceFee;
    }

    /**
     * NoShow政策信息
     */
    public String getEndNote() {
        return this.endNote;
    }

    public void setEndNote(String endNote) {
        this.endNote = endNote;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) return false;
        if (getClass() != obj.getClass()) return false;

        final FRCOrderBasicInfo other = (FRCOrderBasicInfo)obj;
        return
            Objects.equal(this.orderID, other.orderID) && 
            Objects.equal(this.orderStatus, other.orderStatus) && 
            Objects.equal(this.uid, other.uid) && 
            Objects.equal(this.ticketValidityPeriod, other.ticketValidityPeriod) && 
            Objects.equal(this.ticketValidityPeriodLong, other.ticketValidityPeriodLong) && 
            Objects.equal(this.orderTotalPrice, other.orderTotalPrice) && 
            Objects.equal(this.cnyOrderTotalPrice, other.cnyOrderTotalPrice) && 
            Objects.equal(this.deliverFee, other.deliverFee) && 
            Objects.equal(this.cnyDeliverFee, other.cnyDeliverFee) && 
            Objects.equal(this.cCardPayFee, other.cCardPayFee) && 
            Objects.equal(this.cnycCardPayFee, other.cnycCardPayFee) && 
            Objects.equal(this.flightWayType, other.flightWayType) && 
            Objects.equal(this.flightWay, other.flightWay) && 
            Objects.equal(this.contactInfo, other.contactInfo) && 
            Objects.equal(this.flightClass, other.flightClass) && 
            Objects.equal(this.couponDeduction, other.couponDeduction) && 
            Objects.equal(this.cnyCouponDeduction, other.cnyCouponDeduction) && 
            Objects.equal(this.usedTicketFee, other.usedTicketFee) && 
            Objects.equal(this.cnyUsedTicketFee, other.cnyUsedTicketFee) && 
            Objects.equal(this.packageAttachFee, other.packageAttachFee) && 
            Objects.equal(this.cnyPackageAttachFee, other.cnyPackageAttachFee) && 
            Objects.equal(this.printTicketTime, other.printTicketTime) && 
            Objects.equal(this.printTicketTimeLong, other.printTicketTimeLong) && 
            Objects.equal(this.specialPriceType, other.specialPriceType) && 
            Objects.equal(this.flightAgency, other.flightAgency) && 
            Objects.equal(this.source, other.source) && 
            Objects.equal(this.ticketStatus, other.ticketStatus) && 
            Objects.equal(this.relatedOrderIDList, other.relatedOrderIDList) && 
            Objects.equal(this.paymentInfo, other.paymentInfo) && 
            Objects.equal(this.deliveryInfo, other.deliveryInfo) && 
            Objects.equal(this.segmentInfoList, other.segmentInfoList) && 
            Objects.equal(this.passengerInfoList, other.passengerInfoList) && 
            Objects.equal(this.usedDeliverFee, other.usedDeliverFee) && 
            Objects.equal(this.cnyUsedDeliverFee, other.cnyUsedDeliverFee) && 
            Objects.equal(this.contactorEditable, other.contactorEditable) && 
            Objects.equal(this.canRefundTax, other.canRefundTax) && 
            Objects.equal(this.intlRefundTotalFee, other.intlRefundTotalFee) && 
            Objects.equal(this.cnyIntlRefundTotalFee, other.cnyIntlRefundTotalFee) && 
            Objects.equal(this.intlRefundTotalFeeAvailable, other.intlRefundTotalFeeAvailable) && 
            Objects.equal(this.intlRefundFeeByCarrier, other.intlRefundFeeByCarrier) && 
            Objects.equal(this.cnyIntlRefundFeeByCarrier, other.cnyIntlRefundFeeByCarrier) && 
            Objects.equal(this.intlRefundFeeByConsolidator, other.intlRefundFeeByConsolidator) && 
            Objects.equal(this.cnyIntlRefundFeeByConsolidator, other.cnyIntlRefundFeeByConsolidator) && 
            Objects.equal(this.intlRefundFeeByCtrip, other.intlRefundFeeByCtrip) && 
            Objects.equal(this.cnyIntlRefundFeeByCtrip, other.cnyIntlRefundFeeByCtrip) && 
            Objects.equal(this.intlTotalRefundServiceFee, other.intlTotalRefundServiceFee) && 
            Objects.equal(this.cnyIntlTotalRefundServiceFee, other.cnyIntlTotalRefundServiceFee) && 
            Objects.equal(this.endNote, other.endNote);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.orderID);
        result = 31 * result + Objects.hashCode(this.orderStatus);
        result = 31 * result + Objects.hashCode(this.uid);
        result = 31 * result + Objects.hashCode(this.ticketValidityPeriod);
        result = 31 * result + Objects.hashCode(this.ticketValidityPeriodLong);
        result = 31 * result + Objects.hashCode(this.orderTotalPrice);
        result = 31 * result + Objects.hashCode(this.cnyOrderTotalPrice);
        result = 31 * result + Objects.hashCode(this.deliverFee);
        result = 31 * result + Objects.hashCode(this.cnyDeliverFee);
        result = 31 * result + Objects.hashCode(this.cCardPayFee);
        result = 31 * result + Objects.hashCode(this.cnycCardPayFee);
        result = 31 * result + Objects.hashCode(this.flightWayType);
        result = 31 * result + Objects.hashCode(this.flightWay);
        result = 31 * result + Objects.hashCode(this.contactInfo);
        result = 31 * result + Objects.hashCode(this.flightClass);
        result = 31 * result + Objects.hashCode(this.couponDeduction);
        result = 31 * result + Objects.hashCode(this.cnyCouponDeduction);
        result = 31 * result + Objects.hashCode(this.usedTicketFee);
        result = 31 * result + Objects.hashCode(this.cnyUsedTicketFee);
        result = 31 * result + Objects.hashCode(this.packageAttachFee);
        result = 31 * result + Objects.hashCode(this.cnyPackageAttachFee);
        result = 31 * result + Objects.hashCode(this.printTicketTime);
        result = 31 * result + Objects.hashCode(this.printTicketTimeLong);
        result = 31 * result + Objects.hashCode(this.specialPriceType);
        result = 31 * result + Objects.hashCode(this.flightAgency);
        result = 31 * result + Objects.hashCode(this.source);
        result = 31 * result + Objects.hashCode(this.ticketStatus);
        result = 31 * result + Objects.hashCode(this.relatedOrderIDList);
        result = 31 * result + Objects.hashCode(this.paymentInfo);
        result = 31 * result + Objects.hashCode(this.deliveryInfo);
        result = 31 * result + Objects.hashCode(this.segmentInfoList);
        result = 31 * result + Objects.hashCode(this.passengerInfoList);
        result = 31 * result + Objects.hashCode(this.usedDeliverFee);
        result = 31 * result + Objects.hashCode(this.cnyUsedDeliverFee);
        result = 31 * result + Objects.hashCode(this.contactorEditable);
        result = 31 * result + Objects.hashCode(this.canRefundTax);
        result = 31 * result + Objects.hashCode(this.intlRefundTotalFee);
        result = 31 * result + Objects.hashCode(this.cnyIntlRefundTotalFee);
        result = 31 * result + Objects.hashCode(this.intlRefundTotalFeeAvailable);
        result = 31 * result + Objects.hashCode(this.intlRefundFeeByCarrier);
        result = 31 * result + Objects.hashCode(this.cnyIntlRefundFeeByCarrier);
        result = 31 * result + Objects.hashCode(this.intlRefundFeeByConsolidator);
        result = 31 * result + Objects.hashCode(this.cnyIntlRefundFeeByConsolidator);
        result = 31 * result + Objects.hashCode(this.intlRefundFeeByCtrip);
        result = 31 * result + Objects.hashCode(this.cnyIntlRefundFeeByCtrip);
        result = 31 * result + Objects.hashCode(this.intlTotalRefundServiceFee);
        result = 31 * result + Objects.hashCode(this.cnyIntlTotalRefundServiceFee);
        result = 31 * result + Objects.hashCode(this.endNote);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
            .add("orderID", orderID)
            .add("orderStatus", orderStatus)
            .add("uid", uid)
            .add("ticketValidityPeriod", ticketValidityPeriod)
            .add("ticketValidityPeriodLong", ticketValidityPeriodLong)
            .add("orderTotalPrice", orderTotalPrice)
            .add("cnyOrderTotalPrice", cnyOrderTotalPrice)
            .add("deliverFee", deliverFee)
            .add("cnyDeliverFee", cnyDeliverFee)
            .add("cCardPayFee", cCardPayFee)
            .add("cnycCardPayFee", cnycCardPayFee)
            .add("flightWayType", flightWayType)
            .add("flightWay", flightWay)
            .add("contactInfo", contactInfo)
            .add("flightClass", flightClass)
            .add("couponDeduction", couponDeduction)
            .add("cnyCouponDeduction", cnyCouponDeduction)
            .add("usedTicketFee", usedTicketFee)
            .add("cnyUsedTicketFee", cnyUsedTicketFee)
            .add("packageAttachFee", packageAttachFee)
            .add("cnyPackageAttachFee", cnyPackageAttachFee)
            .add("printTicketTime", printTicketTime)
            .add("printTicketTimeLong", printTicketTimeLong)
            .add("specialPriceType", specialPriceType)
            .add("flightAgency", flightAgency)
            .add("source", source)
            .add("ticketStatus", ticketStatus)
            .add("relatedOrderIDList", relatedOrderIDList)
            .add("paymentInfo", paymentInfo)
            .add("deliveryInfo", deliveryInfo)
            .add("segmentInfoList", segmentInfoList)
            .add("passengerInfoList", passengerInfoList)
            .add("usedDeliverFee", usedDeliverFee)
            .add("cnyUsedDeliverFee", cnyUsedDeliverFee)
            .add("contactorEditable", contactorEditable)
            .add("canRefundTax", canRefundTax)
            .add("intlRefundTotalFee", intlRefundTotalFee)
            .add("cnyIntlRefundTotalFee", cnyIntlRefundTotalFee)
            .add("intlRefundTotalFeeAvailable", intlRefundTotalFeeAvailable)
            .add("intlRefundFeeByCarrier", intlRefundFeeByCarrier)
            .add("cnyIntlRefundFeeByCarrier", cnyIntlRefundFeeByCarrier)
            .add("intlRefundFeeByConsolidator", intlRefundFeeByConsolidator)
            .add("cnyIntlRefundFeeByConsolidator", cnyIntlRefundFeeByConsolidator)
            .add("intlRefundFeeByCtrip", intlRefundFeeByCtrip)
            .add("cnyIntlRefundFeeByCtrip", cnyIntlRefundFeeByCtrip)
            .add("intlTotalRefundServiceFee", intlTotalRefundServiceFee)
            .add("cnyIntlTotalRefundServiceFee", cnyIntlTotalRefundServiceFee)
            .add("endNote", endNote)
            .toString();
    }
}